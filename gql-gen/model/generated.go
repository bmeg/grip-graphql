// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type AnnotationAuthorReferenceUnion interface {
	IsAnnotationAuthorReferenceUnion()
}

type ConditionParticipantActorUnion interface {
	IsConditionParticipantActorUnion()
}

type ConditionStageAssessmentUnion interface {
	IsConditionStageAssessmentUnion()
}

type ConditionSubjectUnion interface {
	IsConditionSubjectUnion()
}

type DiagnosticReportBasedOnUnion interface {
	IsDiagnosticReportBasedOnUnion()
}

type DiagnosticReportPerformerUnion interface {
	IsDiagnosticReportPerformerUnion()
}

type DiagnosticReportResultsInterpreterUnion interface {
	IsDiagnosticReportResultsInterpreterUnion()
}

type DiagnosticReportStudyUnion interface {
	IsDiagnosticReportStudyUnion()
}

type DiagnosticReportSubjectUnion interface {
	IsDiagnosticReportSubjectUnion()
}

type DiagnosticReportSupportingInfoReferenceUnion interface {
	IsDiagnosticReportSupportingInfoReferenceUnion()
}

type DocumentReferenceAttesterPartyUnion interface {
	IsDocumentReferenceAttesterPartyUnion()
}

type DocumentReferenceAuthorUnion interface {
	IsDocumentReferenceAuthorUnion()
}

type DocumentReferenceBasedOnUnion interface {
	IsDocumentReferenceBasedOnUnion()
}

type FamilyMemberHistoryParticipantActorUnion interface {
	IsFamilyMemberHistoryParticipantActorUnion()
}

type GroupManagingEntityUnion interface {
	IsGroupManagingEntityUnion()
}

type GroupMemberEntityUnion interface {
	IsGroupMemberEntityUnion()
}

type ImagingStudyBasedOnUnion interface {
	IsImagingStudyBasedOnUnion()
}

type ImagingStudyReferrerUnion interface {
	IsImagingStudyReferrerUnion()
}

type ImagingStudySeriesPerformerActorUnion interface {
	IsImagingStudySeriesPerformerActorUnion()
}

type ImagingStudySubjectUnion interface {
	IsImagingStudySubjectUnion()
}

type MedicationAdministrationPartOfUnion interface {
	IsMedicationAdministrationPartOfUnion()
}

type MedicationAdministrationSubjectUnion interface {
	IsMedicationAdministrationSubjectUnion()
}

type MedicationRequestBasedOnUnion interface {
	IsMedicationRequestBasedOnUnion()
}

type MedicationRequestInformationSourceUnion interface {
	IsMedicationRequestInformationSourceUnion()
}

type MedicationRequestPerformerUnion interface {
	IsMedicationRequestPerformerUnion()
}

type MedicationRequestRecorderUnion interface {
	IsMedicationRequestRecorderUnion()
}

type MedicationRequestRequesterUnion interface {
	IsMedicationRequestRequesterUnion()
}

type MedicationRequestSubjectUnion interface {
	IsMedicationRequestSubjectUnion()
}

type MedicationStatementInformationSourceUnion interface {
	IsMedicationStatementInformationSourceUnion()
}

type MedicationStatementPartOfUnion interface {
	IsMedicationStatementPartOfUnion()
}

type MedicationStatementRelatedClinicalInformationUnion interface {
	IsMedicationStatementRelatedClinicalInformationUnion()
}

type MedicationStatementSubjectUnion interface {
	IsMedicationStatementSubjectUnion()
}

type ObservationBasedOnUnion interface {
	IsObservationBasedOnUnion()
}

type ObservationDerivedFromUnion interface {
	IsObservationDerivedFromUnion()
}

type ObservationHasMemberUnion interface {
	IsObservationHasMemberUnion()
}

type ObservationPartOfUnion interface {
	IsObservationPartOfUnion()
}

type ObservationPerformerUnion interface {
	IsObservationPerformerUnion()
}

type ObservationSpecimenUnion interface {
	IsObservationSpecimenUnion()
}

type ObservationSubjectUnion interface {
	IsObservationSubjectUnion()
}

type PatientGeneralPractitionerUnion interface {
	IsPatientGeneralPractitionerUnion()
}

type PatientLinkOtherUnion interface {
	IsPatientLinkOtherUnion()
}

type ProcedureFocusUnion interface {
	IsProcedureFocusUnion()
}

type ProcedurePartOfUnion interface {
	IsProcedurePartOfUnion()
}

type ProcedurePerformerActorUnion interface {
	IsProcedurePerformerActorUnion()
}

type ProcedureRecorderUnion interface {
	IsProcedureRecorderUnion()
}

type ProcedureReportUnion interface {
	IsProcedureReportUnion()
}

type ProcedureReportedReferenceUnion interface {
	IsProcedureReportedReferenceUnion()
}

type ProcedureSubjectUnion interface {
	IsProcedureSubjectUnion()
}

type ResearchStudyAssociatedPartyPartyUnion interface {
	IsResearchStudyAssociatedPartyPartyUnion()
}

type ResearchStudyRecruitmentEligibilityUnion interface {
	IsResearchStudyRecruitmentEligibilityUnion()
}

type ResearchStudyResultUnion interface {
	IsResearchStudyResultUnion()
}

type ResearchStudySiteUnion interface {
	IsResearchStudySiteUnion()
}

type ResearchSubjectSubjectUnion interface {
	IsResearchSubjectSubjectUnion()
}

type ResourceUnion interface {
	IsResourceUnion()
}

type SignatureOnBehalfOfUnion interface {
	IsSignatureOnBehalfOfUnion()
}

type SignatureWhoUnion interface {
	IsSignatureWhoUnion()
}

type SpecimenCollectionCollectorUnion interface {
	IsSpecimenCollectionCollectorUnion()
}

type SpecimenSubjectUnion interface {
	IsSpecimenSubjectUnion()
}

type TaskOwnerUnion interface {
	IsTaskOwnerUnion()
}

type TaskPerformerActorUnion interface {
	IsTaskPerformerActorUnion()
}

type TaskRequesterUnion interface {
	IsTaskRequesterUnion()
}

type TaskRestrictionRecipientUnion interface {
	IsTaskRestrictionRecipientUnion()
}

type UsageContextValueReferenceUnion interface {
	IsUsageContextValueReferenceUnion()
}

type Address struct {
	PostalCode       *string      `json:"postalCode,omitempty"`
	Type             *string      `json:"type,omitempty"`
	Country          *string      `json:"country,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Line             *string      `json:"line,omitempty"`
	Text             *string      `json:"text,omitempty"`
	City             *string      `json:"city,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	Period           *Period      `json:"period,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	State            *string      `json:"state,omitempty"`
	Use              *string      `json:"use,omitempty"`
	District         *string      `json:"district,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Age struct {
	System           *string      `json:"system,omitempty"`
	Unit             *string      `json:"unit,omitempty"`
	Value            *string      `json:"value,omitempty"`
	Code             *string      `json:"code,omitempty"`
	Comparator       *string      `json:"comparator,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Annotation struct {
	Text             *string                        `json:"text,omitempty"`
	Time             *string                        `json:"time,omitempty"`
	AuthorReference  AnnotationAuthorReferenceUnion `json:"authorReference"`
	AuthorString     *string                        `json:"authorString,omitempty"`
	Extension        []*Extension                   `json:"extension,omitempty"`
	ID               *string                        `json:"id,omitempty"`
	ResourceType     *string                        `json:"resourceType,omitempty"`
	AuthResourcePath *string                        `json:"auth_resource_path,omitempty"`
}

type Attachment struct {
	ContentType      *string      `json:"contentType,omitempty"`
	URL              *string      `json:"url,omitempty"`
	Height           *string      `json:"height,omitempty"`
	Width            *string      `json:"width,omitempty"`
	Hash             *string      `json:"hash,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Duration         *string      `json:"duration,omitempty"`
	Title            *string      `json:"title,omitempty"`
	Pages            *string      `json:"pages,omitempty"`
	Creation         *string      `json:"creation,omitempty"`
	Data             *string      `json:"data,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	Language         *string      `json:"language,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Frames           *string      `json:"frames,omitempty"`
	Size             *string      `json:"size,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Availability struct {
	AvailableTime    []*AvailabilityAvailableTime    `json:"availableTime,omitempty"`
	Extension        []*Extension                    `json:"extension,omitempty"`
	ID               *string                         `json:"id,omitempty"`
	NotAvailableTime []*AvailabilityNotAvailableTime `json:"notAvailableTime,omitempty"`
	ResourceType     *string                         `json:"resourceType,omitempty"`
	AuthResourcePath *string                         `json:"auth_resource_path,omitempty"`
}

type AvailabilityAvailableTime struct {
	AllDay             *string      `json:"allDay,omitempty"`
	AvailableEndTime   *string      `json:"availableEndTime,omitempty"`
	AvailableStartTime *string      `json:"availableStartTime,omitempty"`
	DaysOfWeek         *string      `json:"daysOfWeek,omitempty"`
	Extension          []*Extension `json:"extension,omitempty"`
	ID                 *string      `json:"id,omitempty"`
	ResourceType       *string      `json:"resourceType,omitempty"`
	AuthResourcePath   *string      `json:"auth_resource_path,omitempty"`
}

type AvailabilityNotAvailableTime struct {
	Description      *string      `json:"description,omitempty"`
	During           *Period      `json:"during,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type BodyStructureIncludedStructure struct {
	Laterality              *CodeableConcept                                         `json:"laterality,omitempty"`
	ModifierExtension       []*Extension                                             `json:"modifierExtension,omitempty"`
	Qualifier               []*CodeableConcept                                       `json:"qualifier,omitempty"`
	ResourceType            *string                                                  `json:"resourceType,omitempty"`
	Structure               *CodeableConcept                                         `json:"structure,omitempty"`
	BodyLandmarkOrientation []*BodyStructureIncludedStructureBodyLandmarkOrientation `json:"bodyLandmarkOrientation,omitempty"`
	Extension               []*Extension                                             `json:"extension,omitempty"`
	ID                      *string                                                  `json:"id,omitempty"`
	AuthResourcePath        *string                                                  `json:"auth_resource_path,omitempty"`
}

type BodyStructureIncludedStructureBodyLandmarkOrientation struct {
	ResourceType         *string                                                                      `json:"resourceType,omitempty"`
	SurfaceOrientation   []*CodeableConcept                                                           `json:"surfaceOrientation,omitempty"`
	ClockFacePosition    []*CodeableConcept                                                           `json:"clockFacePosition,omitempty"`
	DistanceFromLandmark []*BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark `json:"distanceFromLandmark,omitempty"`
	Extension            []*Extension                                                                 `json:"extension,omitempty"`
	ID                   *string                                                                      `json:"id,omitempty"`
	LandmarkDescription  []*CodeableConcept                                                           `json:"landmarkDescription,omitempty"`
	ModifierExtension    []*Extension                                                                 `json:"modifierExtension,omitempty"`
	AuthResourcePath     *string                                                                      `json:"auth_resource_path,omitempty"`
}

type BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark struct {
	ID                *string              `json:"id,omitempty"`
	ModifierExtension []*Extension         `json:"modifierExtension,omitempty"`
	ResourceType      *string              `json:"resourceType,omitempty"`
	Value             []*Quantity          `json:"value,omitempty"`
	Device            []*CodeableReference `json:"device,omitempty"`
	Extension         []*Extension         `json:"extension,omitempty"`
	AuthResourcePath  *string              `json:"auth_resource_path,omitempty"`
}

type BodyStructureType struct {
	Active            *string                           `json:"active,omitempty"`
	Description       *string                           `json:"description,omitempty"`
	ImplicitRules     *string                           `json:"implicitRules,omitempty"`
	Contained         []ResourceUnion                   `json:"contained,omitempty"`
	ModifierExtension []*Extension                      `json:"modifierExtension,omitempty"`
	ResourceType      *string                           `json:"resourceType,omitempty"`
	Image             []*Attachment                     `json:"image,omitempty"`
	Extension         []*Extension                      `json:"extension,omitempty"`
	ID                *string                           `json:"id,omitempty"`
	Language          *string                           `json:"language,omitempty"`
	Patient           *PatientType                      `json:"patient"`
	ExcludedStructure []*BodyStructureIncludedStructure `json:"excludedStructure,omitempty"`
	Identifier        []*Identifier                     `json:"identifier,omitempty"`
	Text              *Narrative                        `json:"text,omitempty"`
	IncludedStructure []*BodyStructureIncludedStructure `json:"includedStructure,omitempty"`
	Meta              *Meta                             `json:"meta,omitempty"`
	Morphology        *CodeableConcept                  `json:"morphology,omitempty"`
	AuthResourcePath  *string                           `json:"auth_resource_path,omitempty"`
}

func (BodyStructureType) IsResourceUnion() {}

type CodeableConcept struct {
	Text             *string      `json:"text,omitempty"`
	Coding           []*Coding    `json:"coding,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type CodeableReference struct {
	Concept          *CodeableConcept `json:"concept,omitempty"`
	Extension        []*Extension     `json:"extension,omitempty"`
	ID               *string          `json:"id,omitempty"`
	ResourceType     *string          `json:"resourceType,omitempty"`
	AuthResourcePath *string          `json:"auth_resource_path,omitempty"`
}

type Coding struct {
	ResourceType     *string      `json:"resourceType,omitempty"`
	System           *string      `json:"system,omitempty"`
	UserSelected     *string      `json:"userSelected,omitempty"`
	Version          *string      `json:"version,omitempty"`
	Code             *string      `json:"code,omitempty"`
	Display          *string      `json:"display,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type ConditionParticipant struct {
	ID                *string                        `json:"id,omitempty"`
	ModifierExtension []*Extension                   `json:"modifierExtension,omitempty"`
	ResourceType      *string                        `json:"resourceType,omitempty"`
	Actor             ConditionParticipantActorUnion `json:"actor"`
	Extension         []*Extension                   `json:"extension,omitempty"`
	Function          *CodeableConcept               `json:"function,omitempty"`
	AuthResourcePath  *string                        `json:"auth_resource_path,omitempty"`
}

type ConditionStage struct {
	Extension         []*Extension                  `json:"extension,omitempty"`
	ID                *string                       `json:"id,omitempty"`
	ModifierExtension []*Extension                  `json:"modifierExtension,omitempty"`
	ResourceType      *string                       `json:"resourceType,omitempty"`
	Summary           *CodeableConcept              `json:"summary,omitempty"`
	Type              *CodeableConcept              `json:"type,omitempty"`
	Assessment        ConditionStageAssessmentUnion `json:"assessment"`
	AuthResourcePath  *string                       `json:"auth_resource_path,omitempty"`
}

type ConditionType struct {
	Contained          []ResourceUnion         `json:"contained,omitempty"`
	Meta               *Meta                   `json:"meta,omitempty"`
	Participant        []*ConditionParticipant `json:"participant,omitempty"`
	BodySite           []*CodeableConcept      `json:"bodySite,omitempty"`
	ModifierExtension  []*Extension            `json:"modifierExtension,omitempty"`
	AbatementDateTime  *string                 `json:"abatementDateTime,omitempty"`
	Severity           *CodeableConcept        `json:"severity,omitempty"`
	Code               *CodeableConcept        `json:"code,omitempty"`
	RecordedDate       *string                 `json:"recordedDate,omitempty"`
	Text               *Narrative              `json:"text,omitempty"`
	ResourceType       *string                 `json:"resourceType,omitempty"`
	Stage              []*ConditionStage       `json:"stage,omitempty"`
	Extension          []*Extension            `json:"extension,omitempty"`
	OnsetPeriod        *Period                 `json:"onsetPeriod,omitempty"`
	Subject            ConditionSubjectUnion   `json:"subject"`
	OnsetDateTime      *string                 `json:"onsetDateTime,omitempty"`
	ImplicitRules      *string                 `json:"implicitRules,omitempty"`
	Evidence           []*CodeableReference    `json:"evidence,omitempty"`
	ClinicalStatus     *CodeableConcept        `json:"clinicalStatus,omitempty"`
	OnsetAge           *Age                    `json:"onsetAge,omitempty"`
	ID                 *string                 `json:"id,omitempty"`
	OnsetString        *string                 `json:"onsetString,omitempty"`
	AbatementRange     *Range                  `json:"abatementRange,omitempty"`
	AbatementPeriod    *Period                 `json:"abatementPeriod,omitempty"`
	AbatementAge       *Age                    `json:"abatementAge,omitempty"`
	Identifier         []*Identifier           `json:"identifier,omitempty"`
	VerificationStatus *CodeableConcept        `json:"verificationStatus,omitempty"`
	Category           []*CodeableConcept      `json:"category,omitempty"`
	Language           *string                 `json:"language,omitempty"`
	Note               []*Annotation           `json:"note,omitempty"`
	AbatementString    *string                 `json:"abatementString,omitempty"`
	OnsetRange         *Range                  `json:"onsetRange,omitempty"`
	AuthResourcePath   *string                 `json:"auth_resource_path,omitempty"`
}

func (ConditionType) IsMedicationStatementRelatedClinicalInformationUnion() {}

func (ConditionType) IsResourceUnion() {}

type ContactDetail struct {
	ResourceType     *string         `json:"resourceType,omitempty"`
	Telecom          []*ContactPoint `json:"telecom,omitempty"`
	Extension        []*Extension    `json:"extension,omitempty"`
	ID               *string         `json:"id,omitempty"`
	Name             *string         `json:"name,omitempty"`
	AuthResourcePath *string         `json:"auth_resource_path,omitempty"`
}

type ContactPoint struct {
	Value            *string      `json:"value,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Period           *Period      `json:"period,omitempty"`
	Rank             *string      `json:"rank,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	System           *string      `json:"system,omitempty"`
	Use              *string      `json:"use,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Count struct {
	Code             *string      `json:"code,omitempty"`
	Comparator       *string      `json:"comparator,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	System           *string      `json:"system,omitempty"`
	Unit             *string      `json:"unit,omitempty"`
	Value            *string      `json:"value,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type DataRequirement struct {
	Limit                  *string                       `json:"limit,omitempty"`
	Sort                   []*DataRequirementSort        `json:"sort,omitempty"`
	SubjectCodeableConcept *CodeableConcept              `json:"subjectCodeableConcept,omitempty"`
	SubjectReference       *GroupType                    `json:"subjectReference"`
	ID                     *string                       `json:"id,omitempty"`
	DateFilter             []*DataRequirementDateFilter  `json:"dateFilter,omitempty"`
	Extension              []*Extension                  `json:"extension,omitempty"`
	ResourceType           *string                       `json:"resourceType,omitempty"`
	CodeFilter             []*DataRequirementCodeFilter  `json:"codeFilter,omitempty"`
	MustSupport            *string                       `json:"mustSupport,omitempty"`
	Profile                *string                       `json:"profile,omitempty"`
	ValueFilter            []*DataRequirementValueFilter `json:"valueFilter,omitempty"`
	Type                   *string                       `json:"type,omitempty"`
	AuthResourcePath       *string                       `json:"auth_resource_path,omitempty"`
}

type DataRequirementCodeFilter struct {
	ID               *string      `json:"id,omitempty"`
	Path             *string      `json:"path,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	SearchParam      *string      `json:"searchParam,omitempty"`
	ValueSet         *string      `json:"valueSet,omitempty"`
	Code             []*Coding    `json:"code,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type DataRequirementDateFilter struct {
	ValueDuration    *Duration    `json:"valueDuration,omitempty"`
	ValuePeriod      *Period      `json:"valuePeriod,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Path             *string      `json:"path,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	SearchParam      *string      `json:"searchParam,omitempty"`
	ValueDateTime    *string      `json:"valueDateTime,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type DataRequirementSort struct {
	ResourceType     *string      `json:"resourceType,omitempty"`
	Direction        *string      `json:"direction,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Path             *string      `json:"path,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type DataRequirementValueFilter struct {
	Extension        []*Extension `json:"extension,omitempty"`
	SearchParam      *string      `json:"searchParam,omitempty"`
	ValueDuration    *Duration    `json:"valueDuration,omitempty"`
	ValuePeriod      *Period      `json:"valuePeriod,omitempty"`
	Path             *string      `json:"path,omitempty"`
	ValueDateTime    *string      `json:"valueDateTime,omitempty"`
	Comparator       *string      `json:"comparator,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type DiagnosticReportMedia struct {
	ResourceType      *string                `json:"resourceType,omitempty"`
	Comment           *string                `json:"comment,omitempty"`
	Extension         []*Extension           `json:"extension,omitempty"`
	ID                *string                `json:"id,omitempty"`
	Link              *DocumentReferenceType `json:"link"`
	ModifierExtension []*Extension           `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string                `json:"auth_resource_path,omitempty"`
}

type DiagnosticReportSupportingInfo struct {
	Type              *CodeableConcept                             `json:"type,omitempty"`
	Extension         []*Extension                                 `json:"extension,omitempty"`
	ID                *string                                      `json:"id,omitempty"`
	ModifierExtension []*Extension                                 `json:"modifierExtension,omitempty"`
	Reference         DiagnosticReportSupportingInfoReferenceUnion `json:"reference"`
	ResourceType      *string                                      `json:"resourceType,omitempty"`
	AuthResourcePath  *string                                      `json:"auth_resource_path,omitempty"`
}

type DiagnosticReportType struct {
	Extension          []*Extension                            `json:"extension,omitempty"`
	BasedOn            DiagnosticReportBasedOnUnion            `json:"basedOn"`
	Performer          DiagnosticReportPerformerUnion          `json:"performer"`
	ResultsInterpreter DiagnosticReportResultsInterpreterUnion `json:"resultsInterpreter"`
	ImplicitRules      *string                                 `json:"implicitRules,omitempty"`
	Issued             *string                                 `json:"issued,omitempty"`
	Identifier         []*Identifier                           `json:"identifier,omitempty"`
	Language           *string                                 `json:"language,omitempty"`
	Media              []*DiagnosticReportMedia                `json:"media,omitempty"`
	Result             *ObservationType                        `json:"result"`
	ModifierExtension  []*Extension                            `json:"modifierExtension,omitempty"`
	ID                 *string                                 `json:"id,omitempty"`
	Status             *string                                 `json:"status,omitempty"`
	SupportingInfo     []*DiagnosticReportSupportingInfo       `json:"supportingInfo,omitempty"`
	PresentedForm      []*Attachment                           `json:"presentedForm,omitempty"`
	Text               *Narrative                              `json:"text,omitempty"`
	Specimen           *SpecimenType                           `json:"specimen"`
	Code               *CodeableConcept                        `json:"code,omitempty"`
	Contained          []ResourceUnion                         `json:"contained,omitempty"`
	Subject            DiagnosticReportSubjectUnion            `json:"subject"`
	Note               []*Annotation                           `json:"note,omitempty"`
	Study              DiagnosticReportStudyUnion              `json:"study"`
	ResourceType       *string                                 `json:"resourceType,omitempty"`
	Meta               *Meta                                   `json:"meta,omitempty"`
	EffectivePeriod    *Period                                 `json:"effectivePeriod,omitempty"`
	Category           []*CodeableConcept                      `json:"category,omitempty"`
	EffectiveDateTime  *string                                 `json:"effectiveDateTime,omitempty"`
	ConclusionCode     []*CodeableConcept                      `json:"conclusionCode,omitempty"`
	Conclusion         *string                                 `json:"conclusion,omitempty"`
	AuthResourcePath   *string                                 `json:"auth_resource_path,omitempty"`
}

func (DiagnosticReportType) IsResearchStudyResultUnion() {}

func (DiagnosticReportType) IsConditionStageAssessmentUnion() {}

func (DiagnosticReportType) IsProcedureReportUnion() {}

func (DiagnosticReportType) IsDiagnosticReportSupportingInfoReferenceUnion() {}

func (DiagnosticReportType) IsResourceUnion() {}

type Distance struct {
	Unit             *string      `json:"unit,omitempty"`
	Value            *string      `json:"value,omitempty"`
	Code             *string      `json:"code,omitempty"`
	Comparator       *string      `json:"comparator,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	System           *string      `json:"system,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type DocumentReferenceAttester struct {
	Time              *string                             `json:"time,omitempty"`
	Extension         []*Extension                        `json:"extension,omitempty"`
	ID                *string                             `json:"id,omitempty"`
	Mode              *CodeableConcept                    `json:"mode,omitempty"`
	ModifierExtension []*Extension                        `json:"modifierExtension,omitempty"`
	Party             DocumentReferenceAttesterPartyUnion `json:"party"`
	ResourceType      *string                             `json:"resourceType,omitempty"`
	AuthResourcePath  *string                             `json:"auth_resource_path,omitempty"`
}

type DocumentReferenceContent struct {
	ModifierExtension []*Extension                       `json:"modifierExtension,omitempty"`
	Profile           []*DocumentReferenceContentProfile `json:"profile,omitempty"`
	ResourceType      *string                            `json:"resourceType,omitempty"`
	Attachment        *Attachment                        `json:"attachment,omitempty"`
	Extension         []*Extension                       `json:"extension,omitempty"`
	ID                *string                            `json:"id,omitempty"`
	AuthResourcePath  *string                            `json:"auth_resource_path,omitempty"`
}

type DocumentReferenceContentProfile struct {
	ValueCoding       *Coding      `json:"valueCoding,omitempty"`
	ValueURI          *string      `json:"valueUri,omitempty"`
	Extension         []*Extension `json:"extension,omitempty"`
	ID                *string      `json:"id,omitempty"`
	ModifierExtension []*Extension `json:"modifierExtension,omitempty"`
	ResourceType      *string      `json:"resourceType,omitempty"`
	ValueCanonical    *string      `json:"valueCanonical,omitempty"`
	AuthResourcePath  *string      `json:"auth_resource_path,omitempty"`
}

type DocumentReferenceRelatesTo struct {
	ModifierExtension []*Extension           `json:"modifierExtension,omitempty"`
	ResourceType      *string                `json:"resourceType,omitempty"`
	Target            *DocumentReferenceType `json:"target"`
	Code              *CodeableConcept       `json:"code,omitempty"`
	Extension         []*Extension           `json:"extension,omitempty"`
	ID                *string                `json:"id,omitempty"`
	AuthResourcePath  *string                `json:"auth_resource_path,omitempty"`
}

type DocumentReferenceType struct {
	DocStatus         *string                       `json:"docStatus,omitempty"`
	ModifierExtension []*Extension                  `json:"modifierExtension,omitempty"`
	Event             []*CodeableReference          `json:"event,omitempty"`
	BodySite          []*CodeableReference          `json:"bodySite,omitempty"`
	Extension         []*Extension                  `json:"extension,omitempty"`
	Content           []*DocumentReferenceContent   `json:"content,omitempty"`
	Custodian         *OrganizationType             `json:"custodian"`
	SecurityLabel     []*CodeableConcept            `json:"securityLabel,omitempty"`
	BasedOn           DocumentReferenceBasedOnUnion `json:"basedOn"`
	Language          *string                       `json:"language,omitempty"`
	FacilityType      *CodeableConcept              `json:"facilityType,omitempty"`
	Meta              *Meta                         `json:"meta,omitempty"`
	Category          []*CodeableConcept            `json:"category,omitempty"`
	Subject           ResourceUnion                 `json:"subject"`
	PracticeSetting   *CodeableConcept              `json:"practiceSetting,omitempty"`
	Text              *Narrative                    `json:"text,omitempty"`
	ImplicitRules     *string                       `json:"implicitRules,omitempty"`
	Description       *string                       `json:"description,omitempty"`
	RelatesTo         []*DocumentReferenceRelatesTo `json:"relatesTo,omitempty"`
	Attester          []*DocumentReferenceAttester  `json:"attester,omitempty"`
	ResourceType      *string                       `json:"resourceType,omitempty"`
	Period            *Period                       `json:"period,omitempty"`
	Status            *string                       `json:"status,omitempty"`
	ID                *string                       `json:"id,omitempty"`
	Modality          []*CodeableConcept            `json:"modality,omitempty"`
	Version           *string                       `json:"version,omitempty"`
	Type              *CodeableConcept              `json:"type,omitempty"`
	Author            DocumentReferenceAuthorUnion  `json:"author"`
	Date              *string                       `json:"date,omitempty"`
	Contained         []ResourceUnion               `json:"contained,omitempty"`
	Identifier        []*Identifier                 `json:"identifier,omitempty"`
	AuthResourcePath  *string                       `json:"auth_resource_path,omitempty"`
}

func (DocumentReferenceType) IsProcedureReportUnion() {}

func (DocumentReferenceType) IsObservationDerivedFromUnion() {}

func (DocumentReferenceType) IsResourceUnion() {}

type Dosage struct {
	ID                       *string              `json:"id,omitempty"`
	AdditionalInstruction    []*CodeableConcept   `json:"additionalInstruction,omitempty"`
	Sequence                 *string              `json:"sequence,omitempty"`
	Timing                   *Timing              `json:"timing,omitempty"`
	MaxDosePerPeriod         []*Ratio             `json:"maxDosePerPeriod,omitempty"`
	Site                     *CodeableConcept     `json:"site,omitempty"`
	PatientInstruction       *string              `json:"patientInstruction,omitempty"`
	MaxDosePerAdministration *Quantity            `json:"maxDosePerAdministration,omitempty"`
	AsNeeded                 *string              `json:"asNeeded,omitempty"`
	AsNeededFor              []*CodeableConcept   `json:"asNeededFor,omitempty"`
	ResourceType             *string              `json:"resourceType,omitempty"`
	ModifierExtension        []*Extension         `json:"modifierExtension,omitempty"`
	MaxDosePerLifetime       *Quantity            `json:"maxDosePerLifetime,omitempty"`
	DoseAndRate              []*DosageDoseAndRate `json:"doseAndRate,omitempty"`
	Extension                []*Extension         `json:"extension,omitempty"`
	Route                    *CodeableConcept     `json:"route,omitempty"`
	Method                   *CodeableConcept     `json:"method,omitempty"`
	Text                     *string              `json:"text,omitempty"`
	AuthResourcePath         *string              `json:"auth_resource_path,omitempty"`
}

type DosageDoseAndRate struct {
	RateRange        *Range           `json:"rateRange,omitempty"`
	RateRatio        *Ratio           `json:"rateRatio,omitempty"`
	DoseQuantity     *Quantity        `json:"doseQuantity,omitempty"`
	Extension        []*Extension     `json:"extension,omitempty"`
	ID               *string          `json:"id,omitempty"`
	RateQuantity     *Quantity        `json:"rateQuantity,omitempty"`
	ResourceType     *string          `json:"resourceType,omitempty"`
	Type             *CodeableConcept `json:"type,omitempty"`
	DoseRange        *Range           `json:"doseRange,omitempty"`
	AuthResourcePath *string          `json:"auth_resource_path,omitempty"`
}

type Duration struct {
	Comparator       *string      `json:"comparator,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	System           *string      `json:"system,omitempty"`
	Unit             *string      `json:"unit,omitempty"`
	Value            *string      `json:"value,omitempty"`
	Code             *string      `json:"code,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Encounter struct {
	Admission          *EncounterAdmission     `json:"admission,omitempty"`
	DietPreference     []*CodeableConcept      `json:"dietPreference,omitempty"`
	Priority           *CodeableConcept        `json:"priority,omitempty"`
	SubjectStatus      *CodeableConcept        `json:"subjectStatus,omitempty"`
	Location           []*EncounterLocation    `json:"location,omitempty"`
	Extension          []*Extension            `json:"extension,omitempty"`
	PlannedEndDate     *string                 `json:"plannedEndDate,omitempty"`
	Status             *string                 `json:"status,omitempty"`
	ServiceType        []*CodeableReference    `json:"serviceType,omitempty"`
	Length             *Duration               `json:"length,omitempty"`
	Contained          []ResourceUnion         `json:"contained,omitempty"`
	Language           *string                 `json:"language,omitempty"`
	ResourceType       *string                 `json:"resourceType,omitempty"`
	Text               *Narrative              `json:"text,omitempty"`
	ActualPeriod       *Period                 `json:"actualPeriod,omitempty"`
	ID                 *string                 `json:"id,omitempty"`
	Type               []*CodeableConcept      `json:"type,omitempty"`
	VirtualService     []*VirtualServiceDetail `json:"virtualService,omitempty"`
	ImplicitRules      *string                 `json:"implicitRules,omitempty"`
	Participant        []*EncounterParticipant `json:"participant,omitempty"`
	ModifierExtension  []*Extension            `json:"modifierExtension,omitempty"`
	Reason             []*EncounterReason      `json:"reason,omitempty"`
	SpecialCourtesy    []*CodeableConcept      `json:"specialCourtesy,omitempty"`
	Identifier         []*Identifier           `json:"identifier,omitempty"`
	PlannedStartDate   *string                 `json:"plannedStartDate,omitempty"`
	Class              []*CodeableConcept      `json:"class,omitempty"`
	SpecialArrangement []*CodeableConcept      `json:"specialArrangement,omitempty"`
	Diagnosis          []*EncounterDiagnosis   `json:"diagnosis,omitempty"`
	Meta               *Meta                   `json:"meta,omitempty"`
	AuthResourcePath   *string                 `json:"auth_resource_path,omitempty"`
}

type EncounterAdmission struct {
	DischargeDisposition   *CodeableConcept `json:"dischargeDisposition,omitempty"`
	Extension              []*Extension     `json:"extension,omitempty"`
	ID                     *string          `json:"id,omitempty"`
	ModifierExtension      []*Extension     `json:"modifierExtension,omitempty"`
	PreAdmissionIdentifier *Identifier      `json:"preAdmissionIdentifier,omitempty"`
	ReAdmission            *CodeableConcept `json:"reAdmission,omitempty"`
	ResourceType           *string          `json:"resourceType,omitempty"`
	AdmitSource            *CodeableConcept `json:"admitSource,omitempty"`
	AuthResourcePath       *string          `json:"auth_resource_path,omitempty"`
}

type EncounterDiagnosis struct {
	Condition         []*CodeableReference `json:"condition,omitempty"`
	Extension         []*Extension         `json:"extension,omitempty"`
	ID                *string              `json:"id,omitempty"`
	ModifierExtension []*Extension         `json:"modifierExtension,omitempty"`
	ResourceType      *string              `json:"resourceType,omitempty"`
	Use               []*CodeableConcept   `json:"use,omitempty"`
	AuthResourcePath  *string              `json:"auth_resource_path,omitempty"`
}

type EncounterLocation struct {
	Extension         []*Extension     `json:"extension,omitempty"`
	Form              *CodeableConcept `json:"form,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	Period            *Period          `json:"period,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Status            *string          `json:"status,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type EncounterParticipant struct {
	Type              []*CodeableConcept `json:"type,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	ID                *string            `json:"id,omitempty"`
	ModifierExtension []*Extension       `json:"modifierExtension,omitempty"`
	Period            *Period            `json:"period,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type EncounterReason struct {
	Value             []*CodeableReference `json:"value,omitempty"`
	Extension         []*Extension         `json:"extension,omitempty"`
	ID                *string              `json:"id,omitempty"`
	ModifierExtension []*Extension         `json:"modifierExtension,omitempty"`
	ResourceType      *string              `json:"resourceType,omitempty"`
	Use               []*CodeableConcept   `json:"use,omitempty"`
	AuthResourcePath  *string              `json:"auth_resource_path,omitempty"`
}

type Expression struct {
	Description      *string      `json:"description,omitempty"`
	Expression       *string      `json:"expression,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Language         *string      `json:"language,omitempty"`
	Name             *string      `json:"name,omitempty"`
	Reference        *string      `json:"reference,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type ExtendedContactDetail struct {
	Telecom          []*ContactPoint   `json:"telecom,omitempty"`
	Organization     *OrganizationType `json:"organization"`
	Period           *Period           `json:"period,omitempty"`
	Purpose          *CodeableConcept  `json:"purpose,omitempty"`
	Name             []*HumanName      `json:"name,omitempty"`
	Extension        []*Extension      `json:"extension,omitempty"`
	ID               *string           `json:"id,omitempty"`
	ResourceType     *string           `json:"resourceType,omitempty"`
	Address          *Address          `json:"address,omitempty"`
	AuthResourcePath *string           `json:"auth_resource_path,omitempty"`
}

type Extension struct {
	ID                         *string                `json:"id,omitempty"`
	ValueParameterDefinition   *ParameterDefinition   `json:"valueParameterDefinition,omitempty"`
	ValueMoney                 *Money                 `json:"valueMoney,omitempty"`
	ValueInteger64             *string                `json:"valueInteger64,omitempty"`
	ValueContactPoint          *ContactPoint          `json:"valueContactPoint,omitempty"`
	ValueSampledData           *SampledData           `json:"valueSampledData,omitempty"`
	ValueAnnotation            *Annotation            `json:"valueAnnotation,omitempty"`
	ValueExtendedContactDetail *ExtendedContactDetail `json:"valueExtendedContactDetail,omitempty"`
	ValueRatio                 *Ratio                 `json:"valueRatio,omitempty"`
	ValueCount                 *Count                 `json:"valueCount,omitempty"`
	ValuePeriod                *Period                `json:"valuePeriod,omitempty"`
	ValueCanonical             *string                `json:"valueCanonical,omitempty"`
	ValueID                    *string                `json:"valueId,omitempty"`
	ValueDataRequirement       *DataRequirement       `json:"valueDataRequirement,omitempty"`
	ValuePositiveInt           *string                `json:"valuePositiveInt,omitempty"`
	ValueContactDetail         *ContactDetail         `json:"valueContactDetail,omitempty"`
	ValueAvailability          *Availability          `json:"valueAvailability,omitempty"`
	ValueDosage                *Dosage                `json:"valueDosage,omitempty"`
	ValueRelatedArtifact       *RelatedArtifact       `json:"valueRelatedArtifact,omitempty"`
	ValueDuration              *Duration              `json:"valueDuration,omitempty"`
	ValueAge                   *Age                   `json:"valueAge,omitempty"`
	ValueIdentifier            *Identifier            `json:"valueIdentifier,omitempty"`
	ValueMeta                  *Meta                  `json:"valueMeta,omitempty"`
	ValueCode                  *string                `json:"valueCode,omitempty"`
	ValueDistance              *Distance              `json:"valueDistance,omitempty"`
	ValueCoding                *Coding                `json:"valueCoding,omitempty"`
	ValueCodeableConcept       *CodeableConcept       `json:"valueCodeableConcept,omitempty"`
	ValueQuantity              *Quantity              `json:"valueQuantity,omitempty"`
	ResourceType               *string                `json:"resourceType,omitempty"`
	ValueMarkdown              *string                `json:"valueMarkdown,omitempty"`
	ValueUsageContext          *UsageContext          `json:"valueUsageContext,omitempty"`
	ValueAddress               *Address               `json:"valueAddress,omitempty"`
	ValueURI                   *string                `json:"valueUri,omitempty"`
	ValueInstant               *string                `json:"valueInstant,omitempty"`
	ValueExpression            *Expression            `json:"valueExpression,omitempty"`
	ValueInteger               *string                `json:"valueInteger,omitempty"`
	ValueRange                 *Range                 `json:"valueRange,omitempty"`
	ValueBoolean               *string                `json:"valueBoolean,omitempty"`
	ValueDecimal               *string                `json:"valueDecimal,omitempty"`
	ValueAttachment            *Attachment            `json:"valueAttachment,omitempty"`
	ValueUnsignedInt           *string                `json:"valueUnsignedInt,omitempty"`
	ValueSignature             *Signature             `json:"valueSignature,omitempty"`
	ValueCodeableReference     *CodeableReference     `json:"valueCodeableReference,omitempty"`
	URL                        *string                `json:"url,omitempty"`
	ValueBase64Binary          *string                `json:"valueBase64Binary,omitempty"`
	ValueTime                  *string                `json:"valueTime,omitempty"`
	ValueRatioRange            *RatioRange            `json:"valueRatioRange,omitempty"`
	ValueURL                   *string                `json:"valueUrl,omitempty"`
	Extension                  []*Extension           `json:"extension,omitempty"`
	ValueString                *string                `json:"valueString,omitempty"`
	ValueUUID                  *string                `json:"valueUuid,omitempty"`
	ValueHumanName             *HumanName             `json:"valueHumanName,omitempty"`
	ValueDate                  *string                `json:"valueDate,omitempty"`
	ValueTiming                *Timing                `json:"valueTiming,omitempty"`
	ValueDateTime              *string                `json:"valueDateTime,omitempty"`
	ValueOid                   *string                `json:"valueOid,omitempty"`
	ValueTriggerDefinition     *TriggerDefinition     `json:"valueTriggerDefinition,omitempty"`
	AuthResourcePath           *string                `json:"auth_resource_path,omitempty"`
}

type FHIRPrimitiveExtension struct {
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type FamilyMemberHistoryCondition struct {
	OnsetAge           *Age             `json:"onsetAge,omitempty"`
	OnsetString        *string          `json:"onsetString,omitempty"`
	OnsetPeriod        *Period          `json:"onsetPeriod,omitempty"`
	ContributedToDeath *string          `json:"contributedToDeath,omitempty"`
	ID                 *string          `json:"id,omitempty"`
	ModifierExtension  []*Extension     `json:"modifierExtension,omitempty"`
	Outcome            *CodeableConcept `json:"outcome,omitempty"`
	Extension          []*Extension     `json:"extension,omitempty"`
	Note               []*Annotation    `json:"note,omitempty"`
	OnsetRange         *Range           `json:"onsetRange,omitempty"`
	ResourceType       *string          `json:"resourceType,omitempty"`
	Code               *CodeableConcept `json:"code,omitempty"`
	AuthResourcePath   *string          `json:"auth_resource_path,omitempty"`
}

type FamilyMemberHistoryParticipant struct {
	Actor             FamilyMemberHistoryParticipantActorUnion `json:"actor"`
	Extension         []*Extension                             `json:"extension,omitempty"`
	Function          *CodeableConcept                         `json:"function,omitempty"`
	ID                *string                                  `json:"id,omitempty"`
	ModifierExtension []*Extension                             `json:"modifierExtension,omitempty"`
	ResourceType      *string                                  `json:"resourceType,omitempty"`
	AuthResourcePath  *string                                  `json:"auth_resource_path,omitempty"`
}

type FamilyMemberHistoryProcedure struct {
	Extension          []*Extension     `json:"extension,omitempty"`
	ModifierExtension  []*Extension     `json:"modifierExtension,omitempty"`
	Outcome            *CodeableConcept `json:"outcome,omitempty"`
	PerformedAge       *Age             `json:"performedAge,omitempty"`
	PerformedString    *string          `json:"performedString,omitempty"`
	PerformedDateTime  *string          `json:"performedDateTime,omitempty"`
	PerformedPeriod    *Period          `json:"performedPeriod,omitempty"`
	ResourceType       *string          `json:"resourceType,omitempty"`
	Code               *CodeableConcept `json:"code,omitempty"`
	ID                 *string          `json:"id,omitempty"`
	Note               []*Annotation    `json:"note,omitempty"`
	PerformedRange     *Range           `json:"performedRange,omitempty"`
	ContributedToDeath *string          `json:"contributedToDeath,omitempty"`
	AuthResourcePath   *string          `json:"auth_resource_path,omitempty"`
}

type FamilyMemberHistoryType struct {
	DeceasedAge           *Age                              `json:"deceasedAge,omitempty"`
	ModifierExtension     []*Extension                      `json:"modifierExtension,omitempty"`
	Condition             []*FamilyMemberHistoryCondition   `json:"condition,omitempty"`
	Extension             []*Extension                      `json:"extension,omitempty"`
	BornDate              *string                           `json:"bornDate,omitempty"`
	AgeString             *string                           `json:"ageString,omitempty"`
	InstantiatesCanonical *string                           `json:"instantiatesCanonical,omitempty"`
	Procedure             []*FamilyMemberHistoryProcedure   `json:"procedure,omitempty"`
	BornString            *string                           `json:"bornString,omitempty"`
	EstimatedAge          *string                           `json:"estimatedAge,omitempty"`
	ImplicitRules         *string                           `json:"implicitRules,omitempty"`
	DataAbsentReason      *CodeableConcept                  `json:"dataAbsentReason,omitempty"`
	DeceasedBoolean       *string                           `json:"deceasedBoolean,omitempty"`
	BornPeriod            *Period                           `json:"bornPeriod,omitempty"`
	Reason                []*CodeableReference              `json:"reason,omitempty"`
	DeceasedRange         *Range                            `json:"deceasedRange,omitempty"`
	Identifier            []*Identifier                     `json:"identifier,omitempty"`
	ID                    *string                           `json:"id,omitempty"`
	ResourceType          *string                           `json:"resourceType,omitempty"`
	Relationship          *CodeableConcept                  `json:"relationship,omitempty"`
	Date                  *string                           `json:"date,omitempty"`
	Language              *string                           `json:"language,omitempty"`
	Sex                   *CodeableConcept                  `json:"sex,omitempty"`
	Patient               *PatientType                      `json:"patient"`
	Contained             []ResourceUnion                   `json:"contained,omitempty"`
	InstantiatesURI       *string                           `json:"instantiatesUri,omitempty"`
	DeceasedDate          *string                           `json:"deceasedDate,omitempty"`
	AgeAge                *Age                              `json:"ageAge,omitempty"`
	DeceasedString        *string                           `json:"deceasedString,omitempty"`
	AgeRange              *Range                            `json:"ageRange,omitempty"`
	Meta                  *Meta                             `json:"meta,omitempty"`
	Note                  []*Annotation                     `json:"note,omitempty"`
	Text                  *Narrative                        `json:"text,omitempty"`
	Status                *string                           `json:"status,omitempty"`
	Participant           []*FamilyMemberHistoryParticipant `json:"participant,omitempty"`
	Name                  *string                           `json:"name,omitempty"`
	AuthResourcePath      *string                           `json:"auth_resource_path,omitempty"`
}

func (FamilyMemberHistoryType) IsResourceUnion() {}

type GroupCharacteristic struct {
	ResourceType         *string          `json:"resourceType,omitempty"`
	ValueRange           *Range           `json:"valueRange,omitempty"`
	Period               *Period          `json:"period,omitempty"`
	ValueBoolean         *string          `json:"valueBoolean,omitempty"`
	ValueCodeableConcept *CodeableConcept `json:"valueCodeableConcept,omitempty"`
	Extension            []*Extension     `json:"extension,omitempty"`
	ID                   *string          `json:"id,omitempty"`
	Code                 *CodeableConcept `json:"code,omitempty"`
	Exclude              *string          `json:"exclude,omitempty"`
	ModifierExtension    []*Extension     `json:"modifierExtension,omitempty"`
	ValueQuantity        *Quantity        `json:"valueQuantity,omitempty"`
	AuthResourcePath     *string          `json:"auth_resource_path,omitempty"`
}

type GroupMember struct {
	Entity            GroupMemberEntityUnion `json:"entity"`
	Extension         []*Extension           `json:"extension,omitempty"`
	ID                *string                `json:"id,omitempty"`
	Inactive          *string                `json:"inactive,omitempty"`
	ModifierExtension []*Extension           `json:"modifierExtension,omitempty"`
	Period            *Period                `json:"period,omitempty"`
	ResourceType      *string                `json:"resourceType,omitempty"`
	AuthResourcePath  *string                `json:"auth_resource_path,omitempty"`
}

type GroupType struct {
	Text              *Narrative               `json:"text,omitempty"`
	Membership        *string                  `json:"membership,omitempty"`
	Meta              *Meta                    `json:"meta,omitempty"`
	Characteristic    []*GroupCharacteristic   `json:"characteristic,omitempty"`
	ManagingEntity    GroupManagingEntityUnion `json:"managingEntity"`
	ResourceType      *string                  `json:"resourceType,omitempty"`
	Member            []*GroupMember           `json:"member,omitempty"`
	Quantity          *string                  `json:"quantity,omitempty"`
	Description       *string                  `json:"description,omitempty"`
	Identifier        []*Identifier            `json:"identifier,omitempty"`
	ID                *string                  `json:"id,omitempty"`
	ImplicitRules     *string                  `json:"implicitRules,omitempty"`
	Extension         []*Extension             `json:"extension,omitempty"`
	Language          *string                  `json:"language,omitempty"`
	ModifierExtension []*Extension             `json:"modifierExtension,omitempty"`
	Code              *CodeableConcept         `json:"code,omitempty"`
	Contained         []ResourceUnion          `json:"contained,omitempty"`
	Type              *string                  `json:"type,omitempty"`
	Active            *string                  `json:"active,omitempty"`
	Name              *string                  `json:"name,omitempty"`
	AuthResourcePath  *string                  `json:"auth_resource_path,omitempty"`
}

func (GroupType) IsConditionSubjectUnion() {}

func (GroupType) IsResearchStudyRecruitmentEligibilityUnion() {}

func (GroupType) IsUsageContextValueReferenceUnion() {}

func (GroupType) IsTaskRestrictionRecipientUnion() {}

func (GroupType) IsProcedureSubjectUnion() {}

func (GroupType) IsProcedureFocusUnion() {}

func (GroupType) IsResearchSubjectSubjectUnion() {}

func (GroupType) IsObservationSpecimenUnion() {}

func (GroupType) IsObservationSubjectUnion() {}

func (GroupType) IsSpecimenSubjectUnion() {}

func (GroupType) IsMedicationAdministrationSubjectUnion() {}

func (GroupType) IsImagingStudySubjectUnion() {}

func (GroupType) IsDiagnosticReportSubjectUnion() {}

func (GroupType) IsGroupMemberEntityUnion() {}

func (GroupType) IsMedicationStatementSubjectUnion() {}

func (GroupType) IsMedicationRequestSubjectUnion() {}

func (GroupType) IsResourceUnion() {}

type HumanName struct {
	ResourceType     *string      `json:"resourceType,omitempty"`
	Given            *string      `json:"given,omitempty"`
	Use              *string      `json:"use,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Prefix           *string      `json:"prefix,omitempty"`
	Text             *string      `json:"text,omitempty"`
	Suffix           *string      `json:"suffix,omitempty"`
	Family           *string      `json:"family,omitempty"`
	Period           *Period      `json:"period,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Identifier struct {
	ResourceType     *string           `json:"resourceType,omitempty"`
	Type             *CodeableConcept  `json:"type,omitempty"`
	Value            *string           `json:"value,omitempty"`
	Assigner         *OrganizationType `json:"assigner"`
	Extension        []*Extension      `json:"extension,omitempty"`
	Period           *Period           `json:"period,omitempty"`
	ID               *string           `json:"id,omitempty"`
	System           *string           `json:"system,omitempty"`
	Use              *string           `json:"use,omitempty"`
	AuthResourcePath *string           `json:"auth_resource_path,omitempty"`
}

type ImagingStudySeries struct {
	Description       *string                        `json:"description,omitempty"`
	Extension         []*Extension                   `json:"extension,omitempty"`
	ResourceType      *string                        `json:"resourceType,omitempty"`
	NumberOfInstances *string                        `json:"numberOfInstances,omitempty"`
	UID               *string                        `json:"uid,omitempty"`
	ModifierExtension []*Extension                   `json:"modifierExtension,omitempty"`
	Laterality        *CodeableConcept               `json:"laterality,omitempty"`
	Number            *string                        `json:"number,omitempty"`
	Modality          *CodeableConcept               `json:"modality,omitempty"`
	Started           *string                        `json:"started,omitempty"`
	Specimen          *SpecimenType                  `json:"specimen"`
	Instance          []*ImagingStudySeriesInstance  `json:"instance,omitempty"`
	ID                *string                        `json:"id,omitempty"`
	BodySite          *CodeableReference             `json:"bodySite,omitempty"`
	Performer         []*ImagingStudySeriesPerformer `json:"performer,omitempty"`
	AuthResourcePath  *string                        `json:"auth_resource_path,omitempty"`
}

type ImagingStudySeriesInstance struct {
	SopClass          *Coding      `json:"sopClass,omitempty"`
	Title             *string      `json:"title,omitempty"`
	UID               *string      `json:"uid,omitempty"`
	Extension         []*Extension `json:"extension,omitempty"`
	ID                *string      `json:"id,omitempty"`
	ModifierExtension []*Extension `json:"modifierExtension,omitempty"`
	Number            *string      `json:"number,omitempty"`
	ResourceType      *string      `json:"resourceType,omitempty"`
	AuthResourcePath  *string      `json:"auth_resource_path,omitempty"`
}

type ImagingStudySeriesPerformer struct {
	Extension         []*Extension                          `json:"extension,omitempty"`
	Function          *CodeableConcept                      `json:"function,omitempty"`
	ID                *string                               `json:"id,omitempty"`
	ModifierExtension []*Extension                          `json:"modifierExtension,omitempty"`
	ResourceType      *string                               `json:"resourceType,omitempty"`
	Actor             ImagingStudySeriesPerformerActorUnion `json:"actor"`
	AuthResourcePath  *string                               `json:"auth_resource_path,omitempty"`
}

type ImagingStudyType struct {
	ResourceType      *string                   `json:"resourceType,omitempty"`
	BasedOn           ImagingStudyBasedOnUnion  `json:"basedOn"`
	Subject           ImagingStudySubjectUnion  `json:"subject"`
	Note              []*Annotation             `json:"note,omitempty"`
	Procedure         []*CodeableReference      `json:"procedure,omitempty"`
	Text              *Narrative                `json:"text,omitempty"`
	Status            *string                   `json:"status,omitempty"`
	NumberOfSeries    *string                   `json:"numberOfSeries,omitempty"`
	Description       *string                   `json:"description,omitempty"`
	Meta              *Meta                     `json:"meta,omitempty"`
	Language          *string                   `json:"language,omitempty"`
	Extension         []*Extension              `json:"extension,omitempty"`
	Referrer          ImagingStudyReferrerUnion `json:"referrer"`
	NumberOfInstances *string                   `json:"numberOfInstances,omitempty"`
	Reason            []*CodeableReference      `json:"reason,omitempty"`
	Series            []*ImagingStudySeries     `json:"series,omitempty"`
	Identifier        []*Identifier             `json:"identifier,omitempty"`
	Modality          []*CodeableConcept        `json:"modality,omitempty"`
	PartOf            *ProcedureType            `json:"partOf"`
	ImplicitRules     *string                   `json:"implicitRules,omitempty"`
	Started           *string                   `json:"started,omitempty"`
	ModifierExtension []*Extension              `json:"modifierExtension,omitempty"`
	ID                *string                   `json:"id,omitempty"`
	Contained         []ResourceUnion           `json:"contained,omitempty"`
	AuthResourcePath  *string                   `json:"auth_resource_path,omitempty"`
}

func (ImagingStudyType) IsObservationDerivedFromUnion() {}

func (ImagingStudyType) IsObservationPartOfUnion() {}

func (ImagingStudyType) IsDiagnosticReportStudyUnion() {}

func (ImagingStudyType) IsResourceUnion() {}

type Immunization struct {
	Performer           []*ImmunizationPerformer          `json:"performer,omitempty"`
	Status              *string                           `json:"status,omitempty"`
	ExpirationDate      *string                           `json:"expirationDate,omitempty"`
	Extension           []*Extension                      `json:"extension,omitempty"`
	Reaction            []*ImmunizationReaction           `json:"reaction,omitempty"`
	Identifier          []*Identifier                     `json:"identifier,omitempty"`
	IsSubpotent         *string                           `json:"isSubpotent,omitempty"`
	Site                *CodeableConcept                  `json:"site,omitempty"`
	AdministeredProduct *CodeableReference                `json:"administeredProduct,omitempty"`
	Manufacturer        *CodeableReference                `json:"manufacturer,omitempty"`
	OccurrenceString    *string                           `json:"occurrenceString,omitempty"`
	ImplicitRules       *string                           `json:"implicitRules,omitempty"`
	Reason              []*CodeableReference              `json:"reason,omitempty"`
	DoseQuantity        *Quantity                         `json:"doseQuantity,omitempty"`
	ProtocolApplied     []*ImmunizationProtocolApplied    `json:"protocolApplied,omitempty"`
	ModifierExtension   []*Extension                      `json:"modifierExtension,omitempty"`
	StatusReason        *CodeableConcept                  `json:"statusReason,omitempty"`
	Meta                *Meta                             `json:"meta,omitempty"`
	Contained           []ResourceUnion                   `json:"contained,omitempty"`
	LotNumber           *string                           `json:"lotNumber,omitempty"`
	VaccineCode         *CodeableConcept                  `json:"vaccineCode,omitempty"`
	ID                  *string                           `json:"id,omitempty"`
	Language            *string                           `json:"language,omitempty"`
	PrimarySource       *string                           `json:"primarySource,omitempty"`
	ResourceType        *string                           `json:"resourceType,omitempty"`
	SubpotentReason     []*CodeableConcept                `json:"subpotentReason,omitempty"`
	OccurrenceDateTime  *string                           `json:"occurrenceDateTime,omitempty"`
	ProgramEligibility  []*ImmunizationProgramEligibility `json:"programEligibility,omitempty"`
	InformationSource   *CodeableReference                `json:"informationSource,omitempty"`
	Note                []*Annotation                     `json:"note,omitempty"`
	Route               *CodeableConcept                  `json:"route,omitempty"`
	FundingSource       *CodeableConcept                  `json:"fundingSource,omitempty"`
	Text                *Narrative                        `json:"text,omitempty"`
	AuthResourcePath    *string                           `json:"auth_resource_path,omitempty"`
}

type ImmunizationPerformer struct {
	Function          *CodeableConcept `json:"function,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ImmunizationProgramEligibility struct {
	Program           *CodeableConcept `json:"program,omitempty"`
	ProgramStatus     *CodeableConcept `json:"programStatus,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ImmunizationProtocolApplied struct {
	Series            *string            `json:"series,omitempty"`
	SeriesDoses       *string            `json:"seriesDoses,omitempty"`
	TargetDisease     []*CodeableConcept `json:"targetDisease,omitempty"`
	DoseNumber        *string            `json:"doseNumber,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	ID                *string            `json:"id,omitempty"`
	ModifierExtension []*Extension       `json:"modifierExtension,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type ImmunizationReaction struct {
	Reported          *string            `json:"reported,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	Date              *string            `json:"date,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	ID                *string            `json:"id,omitempty"`
	Manifestation     *CodeableReference `json:"manifestation,omitempty"`
	ModifierExtension []*Extension       `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type Location struct {
	Form              *CodeableConcept         `json:"form,omitempty"`
	Name              *string                  `json:"name,omitempty"`
	OperationalStatus *Coding                  `json:"operationalStatus,omitempty"`
	Status            *string                  `json:"status,omitempty"`
	HoursOfOperation  []*Availability          `json:"hoursOfOperation,omitempty"`
	Description       *string                  `json:"description,omitempty"`
	Position          *LocationPosition        `json:"position,omitempty"`
	Type              []*CodeableConcept       `json:"type,omitempty"`
	ModifierExtension []*Extension             `json:"modifierExtension,omitempty"`
	Alias             *string                  `json:"alias,omitempty"`
	Address           *Address                 `json:"address,omitempty"`
	Extension         []*Extension             `json:"extension,omitempty"`
	Meta              *Meta                    `json:"meta,omitempty"`
	Characteristic    []*CodeableConcept       `json:"characteristic,omitempty"`
	ResourceType      *string                  `json:"resourceType,omitempty"`
	Language          *string                  `json:"language,omitempty"`
	VirtualService    []*VirtualServiceDetail  `json:"virtualService,omitempty"`
	Contained         []ResourceUnion          `json:"contained,omitempty"`
	Contact           []*ExtendedContactDetail `json:"contact,omitempty"`
	ImplicitRules     *string                  `json:"implicitRules,omitempty"`
	ID                *string                  `json:"id,omitempty"`
	Mode              *string                  `json:"mode,omitempty"`
	Text              *Narrative               `json:"text,omitempty"`
	Identifier        []*Identifier            `json:"identifier,omitempty"`
	AuthResourcePath  *string                  `json:"auth_resource_path,omitempty"`
}

type LocationPosition struct {
	Altitude          *string      `json:"altitude,omitempty"`
	Extension         []*Extension `json:"extension,omitempty"`
	ID                *string      `json:"id,omitempty"`
	Latitude          *string      `json:"latitude,omitempty"`
	Longitude         *string      `json:"longitude,omitempty"`
	ModifierExtension []*Extension `json:"modifierExtension,omitempty"`
	ResourceType      *string      `json:"resourceType,omitempty"`
	AuthResourcePath  *string      `json:"auth_resource_path,omitempty"`
}

type MedicationAdministrationDosage struct {
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	RateQuantity      *Quantity        `json:"rateQuantity,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Site              *CodeableConcept `json:"site,omitempty"`
	Route             *CodeableConcept `json:"route,omitempty"`
	Text              *string          `json:"text,omitempty"`
	Dose              *Quantity        `json:"dose,omitempty"`
	Method            *CodeableConcept `json:"method,omitempty"`
	RateRatio         *Ratio           `json:"rateRatio,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type MedicationAdministrationPerformer struct {
	Actor             *CodeableReference `json:"actor,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	Function          *CodeableConcept   `json:"function,omitempty"`
	ID                *string            `json:"id,omitempty"`
	ModifierExtension []*Extension       `json:"modifierExtension,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type MedicationAdministrationType struct {
	PartOf                MedicationAdministrationPartOfUnion  `json:"partOf"`
	Reason                []*CodeableReference                 `json:"reason,omitempty"`
	Status                *string                              `json:"status,omitempty"`
	Dosage                *MedicationAdministrationDosage      `json:"dosage,omitempty"`
	Text                  *Narrative                           `json:"text,omitempty"`
	Extension             []*Extension                         `json:"extension,omitempty"`
	Language              *string                              `json:"language,omitempty"`
	OccurenceDateTime     *string                              `json:"occurenceDateTime,omitempty"`
	Contained             []ResourceUnion                      `json:"contained,omitempty"`
	ID                    *string                              `json:"id,omitempty"`
	Device                []*CodeableReference                 `json:"device,omitempty"`
	Recorded              *string                              `json:"recorded,omitempty"`
	Request               *MedicationRequestType               `json:"request"`
	SupportingInformation ResourceUnion                        `json:"supportingInformation"`
	Identifier            []*Identifier                        `json:"identifier,omitempty"`
	Subject               MedicationAdministrationSubjectUnion `json:"subject"`
	OccurencePeriod       *Period                              `json:"occurencePeriod,omitempty"`
	IsSubPotent           *string                              `json:"isSubPotent,omitempty"`
	Medication            *CodeableReference                   `json:"medication,omitempty"`
	SubPotentReason       []*CodeableConcept                   `json:"subPotentReason,omitempty"`
	Category              []*CodeableConcept                   `json:"category,omitempty"`
	Meta                  *Meta                                `json:"meta,omitempty"`
	ModifierExtension     []*Extension                         `json:"modifierExtension,omitempty"`
	OccurenceTiming       *Timing                              `json:"occurenceTiming,omitempty"`
	ResourceType          *string                              `json:"resourceType,omitempty"`
	Performer             []*MedicationAdministrationPerformer `json:"performer,omitempty"`
	ImplicitRules         *string                              `json:"implicitRules,omitempty"`
	StatusReason          []*CodeableConcept                   `json:"statusReason,omitempty"`
	Note                  []*Annotation                        `json:"note,omitempty"`
	AuthResourcePath      *string                              `json:"auth_resource_path,omitempty"`
}

func (MedicationAdministrationType) IsProcedurePartOfUnion() {}

func (MedicationAdministrationType) IsObservationPartOfUnion() {}

func (MedicationAdministrationType) IsMedicationAdministrationPartOfUnion() {}

func (MedicationAdministrationType) IsResourceUnion() {}

type MedicationBatch struct {
	ResourceType      *string      `json:"resourceType,omitempty"`
	ExpirationDate    *string      `json:"expirationDate,omitempty"`
	Extension         []*Extension `json:"extension,omitempty"`
	ID                *string      `json:"id,omitempty"`
	LotNumber         *string      `json:"lotNumber,omitempty"`
	ModifierExtension []*Extension `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string      `json:"auth_resource_path,omitempty"`
}

type MedicationIngredient struct {
	ID                      *string            `json:"id,omitempty"`
	IsActive                *string            `json:"isActive,omitempty"`
	ResourceType            *string            `json:"resourceType,omitempty"`
	StrengthRatio           *Ratio             `json:"strengthRatio,omitempty"`
	Extension               []*Extension       `json:"extension,omitempty"`
	StrengthCodeableConcept *CodeableConcept   `json:"strengthCodeableConcept,omitempty"`
	Item                    *CodeableReference `json:"item,omitempty"`
	ModifierExtension       []*Extension       `json:"modifierExtension,omitempty"`
	StrengthQuantity        *Quantity          `json:"strengthQuantity,omitempty"`
	AuthResourcePath        *string            `json:"auth_resource_path,omitempty"`
}

type MedicationRequestDispenseRequest struct {
	Quantity               *Quantity                                    `json:"quantity,omitempty"`
	DispenseInterval       *Duration                                    `json:"dispenseInterval,omitempty"`
	DoseAdministrationAid  *CodeableConcept                             `json:"doseAdministrationAid,omitempty"`
	ModifierExtension      []*Extension                                 `json:"modifierExtension,omitempty"`
	NumberOfRepeatsAllowed *string                                      `json:"numberOfRepeatsAllowed,omitempty"`
	ValidityPeriod         *Period                                      `json:"validityPeriod,omitempty"`
	Dispenser              *OrganizationType                            `json:"dispenser"`
	DispenserInstruction   []*Annotation                                `json:"dispenserInstruction,omitempty"`
	ExpectedSupplyDuration *Duration                                    `json:"expectedSupplyDuration,omitempty"`
	Extension              []*Extension                                 `json:"extension,omitempty"`
	ID                     *string                                      `json:"id,omitempty"`
	InitialFill            *MedicationRequestDispenseRequestInitialFill `json:"initialFill,omitempty"`
	ResourceType           *string                                      `json:"resourceType,omitempty"`
	AuthResourcePath       *string                                      `json:"auth_resource_path,omitempty"`
}

type MedicationRequestDispenseRequestInitialFill struct {
	Extension         []*Extension `json:"extension,omitempty"`
	ID                *string      `json:"id,omitempty"`
	ModifierExtension []*Extension `json:"modifierExtension,omitempty"`
	Quantity          *Quantity    `json:"quantity,omitempty"`
	ResourceType      *string      `json:"resourceType,omitempty"`
	Duration          *Duration    `json:"duration,omitempty"`
	AuthResourcePath  *string      `json:"auth_resource_path,omitempty"`
}

type MedicationRequestSubstitution struct {
	Extension              []*Extension     `json:"extension,omitempty"`
	ID                     *string          `json:"id,omitempty"`
	ModifierExtension      []*Extension     `json:"modifierExtension,omitempty"`
	Reason                 *CodeableConcept `json:"reason,omitempty"`
	ResourceType           *string          `json:"resourceType,omitempty"`
	AllowedBoolean         *string          `json:"allowedBoolean,omitempty"`
	AllowedCodeableConcept *CodeableConcept `json:"allowedCodeableConcept,omitempty"`
	AuthResourcePath       *string          `json:"auth_resource_path,omitempty"`
}

type MedicationRequestType struct {
	Medication                *CodeableReference                      `json:"medication,omitempty"`
	Meta                      *Meta                                   `json:"meta,omitempty"`
	Device                    []*CodeableReference                    `json:"device,omitempty"`
	StatusReason              *CodeableConcept                        `json:"statusReason,omitempty"`
	ResourceType              *string                                 `json:"resourceType,omitempty"`
	DispenseRequest           *MedicationRequestDispenseRequest       `json:"dispenseRequest,omitempty"`
	Status                    *string                                 `json:"status,omitempty"`
	PriorPrescription         *MedicationRequestType                  `json:"priorPrescription"`
	StatusChanged             *string                                 `json:"statusChanged,omitempty"`
	Substitution              *MedicationRequestSubstitution          `json:"substitution,omitempty"`
	Requester                 MedicationRequestRequesterUnion         `json:"requester"`
	ID                        *string                                 `json:"id,omitempty"`
	AuthoredOn                *string                                 `json:"authoredOn,omitempty"`
	Language                  *string                                 `json:"language,omitempty"`
	Intent                    *string                                 `json:"intent,omitempty"`
	SupportingInformation     ResourceUnion                           `json:"supportingInformation"`
	RenderedDosageInstruction *string                                 `json:"renderedDosageInstruction,omitempty"`
	DoNotPerform              *string                                 `json:"doNotPerform,omitempty"`
	Reason                    []*CodeableReference                    `json:"reason,omitempty"`
	PerformerType             *CodeableConcept                        `json:"performerType,omitempty"`
	ImplicitRules             *string                                 `json:"implicitRules,omitempty"`
	Priority                  *string                                 `json:"priority,omitempty"`
	Contained                 []ResourceUnion                         `json:"contained,omitempty"`
	InformationSource         MedicationRequestInformationSourceUnion `json:"informationSource"`
	BasedOn                   MedicationRequestBasedOnUnion           `json:"basedOn"`
	Subject                   MedicationRequestSubjectUnion           `json:"subject"`
	Recorder                  MedicationRequestRecorderUnion          `json:"recorder"`
	ModifierExtension         []*Extension                            `json:"modifierExtension,omitempty"`
	Text                      *Narrative                              `json:"text,omitempty"`
	DosageInstruction         []*Dosage                               `json:"dosageInstruction,omitempty"`
	Identifier                []*Identifier                           `json:"identifier,omitempty"`
	Note                      []*Annotation                           `json:"note,omitempty"`
	CourseOfTherapyType       *CodeableConcept                        `json:"courseOfTherapyType,omitempty"`
	EffectiveDosePeriod       *Period                                 `json:"effectiveDosePeriod,omitempty"`
	Category                  []*CodeableConcept                      `json:"category,omitempty"`
	Reported                  *string                                 `json:"reported,omitempty"`
	GroupIdentifier           *Identifier                             `json:"groupIdentifier,omitempty"`
	Performer                 MedicationRequestPerformerUnion         `json:"performer"`
	Extension                 []*Extension                            `json:"extension,omitempty"`
	AuthResourcePath          *string                                 `json:"auth_resource_path,omitempty"`
}

func (MedicationRequestType) IsObservationBasedOnUnion() {}

func (MedicationRequestType) IsDiagnosticReportBasedOnUnion() {}

func (MedicationRequestType) IsDocumentReferenceBasedOnUnion() {}

func (MedicationRequestType) IsMedicationRequestBasedOnUnion() {}

func (MedicationRequestType) IsResourceUnion() {}

type MedicationStatementAdherence struct {
	Code              *CodeableConcept `json:"code,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	Reason            *CodeableConcept `json:"reason,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type MedicationStatementType struct {
	DateAsserted               *string                                            `json:"dateAsserted,omitempty"`
	Meta                       *Meta                                              `json:"meta,omitempty"`
	RelatedClinicalInformation MedicationStatementRelatedClinicalInformationUnion `json:"relatedClinicalInformation"`
	Subject                    MedicationStatementSubjectUnion                    `json:"subject"`
	EffectivePeriod            *Period                                            `json:"effectivePeriod,omitempty"`
	PartOf                     MedicationStatementPartOfUnion                     `json:"partOf"`
	Extension                  []*Extension                                       `json:"extension,omitempty"`
	Contained                  []ResourceUnion                                    `json:"contained,omitempty"`
	Dosage                     []*Dosage                                          `json:"dosage,omitempty"`
	InformationSource          MedicationStatementInformationSourceUnion          `json:"informationSource"`
	Note                       []*Annotation                                      `json:"note,omitempty"`
	EffectiveTiming            *Timing                                            `json:"effectiveTiming,omitempty"`
	Reason                     []*CodeableReference                               `json:"reason,omitempty"`
	Text                       *Narrative                                         `json:"text,omitempty"`
	ImplicitRules              *string                                            `json:"implicitRules,omitempty"`
	Adherence                  *MedicationStatementAdherence                      `json:"adherence,omitempty"`
	Identifier                 []*Identifier                                      `json:"identifier,omitempty"`
	EffectiveDateTime          *string                                            `json:"effectiveDateTime,omitempty"`
	Status                     *string                                            `json:"status,omitempty"`
	ID                         *string                                            `json:"id,omitempty"`
	ModifierExtension          []*Extension                                       `json:"modifierExtension,omitempty"`
	DerivedFrom                ResourceUnion                                      `json:"derivedFrom"`
	RenderedDosageInstruction  *string                                            `json:"renderedDosageInstruction,omitempty"`
	ResourceType               *string                                            `json:"resourceType,omitempty"`
	Language                   *string                                            `json:"language,omitempty"`
	Category                   []*CodeableConcept                                 `json:"category,omitempty"`
	Medication                 *CodeableReference                                 `json:"medication,omitempty"`
	AuthResourcePath           *string                                            `json:"auth_resource_path,omitempty"`
}

func (MedicationStatementType) IsObservationPartOfUnion() {}

func (MedicationStatementType) IsMedicationStatementPartOfUnion() {}

func (MedicationStatementType) IsResourceUnion() {}

type MedicationType struct {
	DoseForm                     *CodeableConcept        `json:"doseForm,omitempty"`
	Text                         *Narrative              `json:"text,omitempty"`
	Identifier                   []*Identifier           `json:"identifier,omitempty"`
	ResourceType                 *string                 `json:"resourceType,omitempty"`
	Extension                    []*Extension            `json:"extension,omitempty"`
	Ingredient                   []*MedicationIngredient `json:"ingredient,omitempty"`
	Contained                    []ResourceUnion         `json:"contained,omitempty"`
	TotalVolume                  *Quantity               `json:"totalVolume,omitempty"`
	Code                         *CodeableConcept        `json:"code,omitempty"`
	Language                     *string                 `json:"language,omitempty"`
	MarketingAuthorizationHolder *OrganizationType       `json:"marketingAuthorizationHolder"`
	Meta                         *Meta                   `json:"meta,omitempty"`
	ModifierExtension            []*Extension            `json:"modifierExtension,omitempty"`
	Status                       *string                 `json:"status,omitempty"`
	Batch                        *MedicationBatch        `json:"batch,omitempty"`
	ID                           *string                 `json:"id,omitempty"`
	ImplicitRules                *string                 `json:"implicitRules,omitempty"`
	AuthResourcePath             *string                 `json:"auth_resource_path,omitempty"`
}

func (MedicationType) IsResearchSubjectSubjectUnion() {}

func (MedicationType) IsObservationSubjectUnion() {}

func (MedicationType) IsDiagnosticReportSubjectUnion() {}

func (MedicationType) IsResourceUnion() {}

type Meta struct {
	ResourceType     *string      `json:"resourceType,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	Profile          *string      `json:"profile,omitempty"`
	Tag              []*Coding    `json:"tag,omitempty"`
	ID               *string      `json:"id,omitempty"`
	LastUpdated      *string      `json:"lastUpdated,omitempty"`
	Security         []*Coding    `json:"security,omitempty"`
	Source           *string      `json:"source,omitempty"`
	VersionID        *string      `json:"versionId,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Money struct {
	Currency         *string      `json:"currency,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Value            *string      `json:"value,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Narrative struct {
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Status           *string      `json:"status,omitempty"`
	Div              *string      `json:"div,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type ObservationComponent struct {
	ValueCodeableConcept *CodeableConcept             `json:"valueCodeableConcept,omitempty"`
	ValueQuantity        *Quantity                    `json:"valueQuantity,omitempty"`
	ValueRange           *Range                       `json:"valueRange,omitempty"`
	Interpretation       []*CodeableConcept           `json:"interpretation,omitempty"`
	ValueBoolean         *string                      `json:"valueBoolean,omitempty"`
	ValueDateTime        *string                      `json:"valueDateTime,omitempty"`
	ValueInteger         *string                      `json:"valueInteger,omitempty"`
	ValuePeriod          *Period                      `json:"valuePeriod,omitempty"`
	ValueSampledData     *SampledData                 `json:"valueSampledData,omitempty"`
	ValueTime            *string                      `json:"valueTime,omitempty"`
	Extension            []*Extension                 `json:"extension,omitempty"`
	ValueRatio           *Ratio                       `json:"valueRatio,omitempty"`
	ModifierExtension    []*Extension                 `json:"modifierExtension,omitempty"`
	ResourceType         *string                      `json:"resourceType,omitempty"`
	ValueString          *string                      `json:"valueString,omitempty"`
	DataAbsentReason     *CodeableConcept             `json:"dataAbsentReason,omitempty"`
	Code                 *CodeableConcept             `json:"code,omitempty"`
	ID                   *string                      `json:"id,omitempty"`
	ReferenceRange       []*ObservationReferenceRange `json:"referenceRange,omitempty"`
	ValueAttachment      *Attachment                  `json:"valueAttachment,omitempty"`
	AuthResourcePath     *string                      `json:"auth_resource_path,omitempty"`
}

type ObservationReferenceRange struct {
	ResourceType      *string            `json:"resourceType,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	High              *Quantity          `json:"high,omitempty"`
	Age               *Range             `json:"age,omitempty"`
	NormalValue       *CodeableConcept   `json:"normalValue,omitempty"`
	AppliesTo         []*CodeableConcept `json:"appliesTo,omitempty"`
	ID                *string            `json:"id,omitempty"`
	ModifierExtension []*Extension       `json:"modifierExtension,omitempty"`
	Low               *Quantity          `json:"low,omitempty"`
	Text              *string            `json:"text,omitempty"`
	Type              *CodeableConcept   `json:"type,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type ObservationTriggeredBy struct {
	Type              *string          `json:"type,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	Observation       *ObservationType `json:"observation"`
	Reason            *string          `json:"reason,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ObservationType struct {
	Meta                  *Meta                        `json:"meta,omitempty"`
	Identifier            []*Identifier                `json:"identifier,omitempty"`
	PartOf                ObservationPartOfUnion       `json:"partOf"`
	ValueString           *string                      `json:"valueString,omitempty"`
	Extension             []*Extension                 `json:"extension,omitempty"`
	ValueQuantity         *Quantity                    `json:"valueQuantity,omitempty"`
	Issued                *string                      `json:"issued,omitempty"`
	DerivedFrom           ObservationDerivedFromUnion  `json:"derivedFrom"`
	EffectiveTiming       *Timing                      `json:"effectiveTiming,omitempty"`
	Focus                 ResourceUnion                `json:"focus"`
	ValueBoolean          *string                      `json:"valueBoolean,omitempty"`
	Status                *string                      `json:"status,omitempty"`
	EffectivePeriod       *Period                      `json:"effectivePeriod,omitempty"`
	Method                *CodeableConcept             `json:"method,omitempty"`
	TriggeredBy           []*ObservationTriggeredBy    `json:"triggeredBy,omitempty"`
	ImplicitRules         *string                      `json:"implicitRules,omitempty"`
	Subject               ObservationSubjectUnion      `json:"subject"`
	DataAbsentReason      *CodeableConcept             `json:"dataAbsentReason,omitempty"`
	ValueAttachment       *Attachment                  `json:"valueAttachment,omitempty"`
	ValueInteger          *string                      `json:"valueInteger,omitempty"`
	Interpretation        []*CodeableConcept           `json:"interpretation,omitempty"`
	ValueTime             *string                      `json:"valueTime,omitempty"`
	Contained             []ResourceUnion              `json:"contained,omitempty"`
	ReferenceRange        []*ObservationReferenceRange `json:"referenceRange,omitempty"`
	Component             []*ObservationComponent      `json:"component,omitempty"`
	ID                    *string                      `json:"id,omitempty"`
	EffectiveInstant      *string                      `json:"effectiveInstant,omitempty"`
	Language              *string                      `json:"language,omitempty"`
	ModifierExtension     []*Extension                 `json:"modifierExtension,omitempty"`
	EffectiveDateTime     *string                      `json:"effectiveDateTime,omitempty"`
	InstantiatesCanonical *string                      `json:"instantiatesCanonical,omitempty"`
	HasMember             ObservationHasMemberUnion    `json:"hasMember"`
	Category              []*CodeableConcept           `json:"category,omitempty"`
	ValueRatio            *Ratio                       `json:"valueRatio,omitempty"`
	BasedOn               ObservationBasedOnUnion      `json:"basedOn"`
	BodyStructure         *BodyStructureType           `json:"bodyStructure"`
	Performer             ObservationPerformerUnion    `json:"performer"`
	ResourceType          *string                      `json:"resourceType,omitempty"`
	ValueRange            *Range                       `json:"valueRange,omitempty"`
	ValuePeriod           *Period                      `json:"valuePeriod,omitempty"`
	Code                  *CodeableConcept             `json:"code,omitempty"`
	Specimen              ObservationSpecimenUnion     `json:"specimen"`
	Text                  *Narrative                   `json:"text,omitempty"`
	BodySite              *CodeableConcept             `json:"bodySite,omitempty"`
	ValueDateTime         *string                      `json:"valueDateTime,omitempty"`
	ValueCodeableConcept  *CodeableConcept             `json:"valueCodeableConcept,omitempty"`
	Note                  []*Annotation                `json:"note,omitempty"`
	ValueSampledData      *SampledData                 `json:"valueSampledData,omitempty"`
	AuthResourcePath      *string                      `json:"auth_resource_path,omitempty"`
}

func (ObservationType) IsConditionStageAssessmentUnion() {}

func (ObservationType) IsProcedurePartOfUnion() {}

func (ObservationType) IsObservationDerivedFromUnion() {}

func (ObservationType) IsObservationHasMemberUnion() {}

func (ObservationType) IsDiagnosticReportSupportingInfoReferenceUnion() {}

func (ObservationType) IsMedicationStatementRelatedClinicalInformationUnion() {}

func (ObservationType) IsResourceUnion() {}

type OrganizationQualification struct {
	Extension         []*Extension      `json:"extension,omitempty"`
	ID                *string           `json:"id,omitempty"`
	Identifier        []*Identifier     `json:"identifier,omitempty"`
	Issuer            *OrganizationType `json:"issuer"`
	ModifierExtension []*Extension      `json:"modifierExtension,omitempty"`
	Period            *Period           `json:"period,omitempty"`
	ResourceType      *string           `json:"resourceType,omitempty"`
	Code              *CodeableConcept  `json:"code,omitempty"`
	AuthResourcePath  *string           `json:"auth_resource_path,omitempty"`
}

type OrganizationType struct {
	Type              []*CodeableConcept           `json:"type,omitempty"`
	ModifierExtension []*Extension                 `json:"modifierExtension,omitempty"`
	Alias             *string                      `json:"alias,omitempty"`
	ResourceType      *string                      `json:"resourceType,omitempty"`
	ID                *string                      `json:"id,omitempty"`
	Identifier        []*Identifier                `json:"identifier,omitempty"`
	Text              *Narrative                   `json:"text,omitempty"`
	Description       *string                      `json:"description,omitempty"`
	PartOf            *OrganizationType            `json:"partOf"`
	Active            *string                      `json:"active,omitempty"`
	Meta              *Meta                        `json:"meta,omitempty"`
	Qualification     []*OrganizationQualification `json:"qualification,omitempty"`
	Contact           []*ExtendedContactDetail     `json:"contact,omitempty"`
	ImplicitRules     *string                      `json:"implicitRules,omitempty"`
	Extension         []*Extension                 `json:"extension,omitempty"`
	Name              *string                      `json:"name,omitempty"`
	Language          *string                      `json:"language,omitempty"`
	Contained         []ResourceUnion              `json:"contained,omitempty"`
	AuthResourcePath  *string                      `json:"auth_resource_path,omitempty"`
}

func (OrganizationType) IsResearchStudySiteUnion() {}

func (OrganizationType) IsTaskOwnerUnion() {}

func (OrganizationType) IsTaskRequesterUnion() {}

func (OrganizationType) IsUsageContextValueReferenceUnion() {}

func (OrganizationType) IsTaskRestrictionRecipientUnion() {}

func (OrganizationType) IsProcedureReportedReferenceUnion() {}

func (OrganizationType) IsProcedureSubjectUnion() {}

func (OrganizationType) IsProcedureFocusUnion() {}

func (OrganizationType) IsSignatureOnBehalfOfUnion() {}

func (OrganizationType) IsSignatureWhoUnion() {}

func (OrganizationType) IsTaskPerformerActorUnion() {}

func (OrganizationType) IsObservationPerformerUnion() {}

func (OrganizationType) IsObservationSubjectUnion() {}

func (OrganizationType) IsConditionParticipantActorUnion() {}

func (OrganizationType) IsFamilyMemberHistoryParticipantActorUnion() {}

func (OrganizationType) IsResearchStudyAssociatedPartyPartyUnion() {}

func (OrganizationType) IsDiagnosticReportPerformerUnion() {}

func (OrganizationType) IsDiagnosticReportResultsInterpreterUnion() {}

func (OrganizationType) IsDiagnosticReportSubjectUnion() {}

func (OrganizationType) IsGroupMemberEntityUnion() {}

func (OrganizationType) IsProcedurePerformerActorUnion() {}

func (OrganizationType) IsAnnotationAuthorReferenceUnion() {}

func (OrganizationType) IsPatientGeneralPractitionerUnion() {}

func (OrganizationType) IsDocumentReferenceAttesterPartyUnion() {}

func (OrganizationType) IsGroupManagingEntityUnion() {}

func (OrganizationType) IsImagingStudySeriesPerformerActorUnion() {}

func (OrganizationType) IsDocumentReferenceAuthorUnion() {}

func (OrganizationType) IsMedicationStatementInformationSourceUnion() {}

func (OrganizationType) IsMedicationRequestInformationSourceUnion() {}

func (OrganizationType) IsMedicationRequestPerformerUnion() {}

func (OrganizationType) IsMedicationRequestRequesterUnion() {}

func (OrganizationType) IsResourceUnion() {}

type ParameterDefinition struct {
	ID               *string      `json:"id,omitempty"`
	Use              *string      `json:"use,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Type             *string      `json:"type,omitempty"`
	Max              *string      `json:"max,omitempty"`
	Min              *string      `json:"min,omitempty"`
	Name             *string      `json:"name,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	Profile          *string      `json:"profile,omitempty"`
	Documentation    *string      `json:"documentation,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type PatientCommunication struct {
	ResourceType      *string          `json:"resourceType,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	Language          *CodeableConcept `json:"language,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	Preferred         *string          `json:"preferred,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type PatientContact struct {
	Address           *Address           `json:"address,omitempty"`
	Telecom           []*ContactPoint    `json:"telecom,omitempty"`
	Name              *HumanName         `json:"name,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	Gender            *string            `json:"gender,omitempty"`
	ID                *string            `json:"id,omitempty"`
	ModifierExtension []*Extension       `json:"modifierExtension,omitempty"`
	Period            *Period            `json:"period,omitempty"`
	Organization      *OrganizationType  `json:"organization"`
	Relationship      []*CodeableConcept `json:"relationship,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type PatientLink struct {
	ResourceType      *string               `json:"resourceType,omitempty"`
	Type              *string               `json:"type,omitempty"`
	Extension         []*Extension          `json:"extension,omitempty"`
	ID                *string               `json:"id,omitempty"`
	ModifierExtension []*Extension          `json:"modifierExtension,omitempty"`
	Other             PatientLinkOtherUnion `json:"other"`
	AuthResourcePath  *string               `json:"auth_resource_path,omitempty"`
}

type PatientType struct {
	Telecom              []*ContactPoint                 `json:"telecom,omitempty"`
	DeceasedBoolean      *string                         `json:"deceasedBoolean,omitempty"`
	Communication        []*PatientCommunication         `json:"communication,omitempty"`
	Extension            []*Extension                    `json:"extension,omitempty"`
	Name                 []*HumanName                    `json:"name,omitempty"`
	BirthDate            *string                         `json:"birthDate,omitempty"`
	DeceasedDateTime     *string                         `json:"deceasedDateTime,omitempty"`
	Language             *string                         `json:"language,omitempty"`
	Text                 *Narrative                      `json:"text,omitempty"`
	GeneralPractitioner  PatientGeneralPractitionerUnion `json:"generalPractitioner"`
	Identifier           []*Identifier                   `json:"identifier,omitempty"`
	ManagingOrganization *OrganizationType               `json:"managingOrganization"`
	ID                   *string                         `json:"id,omitempty"`
	ModifierExtension    []*Extension                    `json:"modifierExtension,omitempty"`
	ImplicitRules        *string                         `json:"implicitRules,omitempty"`
	Photo                []*Attachment                   `json:"photo,omitempty"`
	Active               *string                         `json:"active,omitempty"`
	Contained            []ResourceUnion                 `json:"contained,omitempty"`
	Address              []*Address                      `json:"address,omitempty"`
	Gender               *string                         `json:"gender,omitempty"`
	Meta                 *Meta                           `json:"meta,omitempty"`
	MultipleBirthBoolean *string                         `json:"multipleBirthBoolean,omitempty"`
	Contact              []*PatientContact               `json:"contact,omitempty"`
	MaritalStatus        *CodeableConcept                `json:"maritalStatus,omitempty"`
	ResourceType         *string                         `json:"resourceType,omitempty"`
	MultipleBirthInteger *string                         `json:"multipleBirthInteger,omitempty"`
	AuthResourcePath     *string                         `json:"auth_resource_path,omitempty"`
}

func (PatientType) IsConditionSubjectUnion() {}

func (PatientType) IsTaskOwnerUnion() {}

func (PatientType) IsTaskRequesterUnion() {}

func (PatientType) IsTaskRestrictionRecipientUnion() {}

func (PatientType) IsProcedureReportedReferenceUnion() {}

func (PatientType) IsProcedureSubjectUnion() {}

func (PatientType) IsProcedureFocusUnion() {}

func (PatientType) IsProcedureRecorderUnion() {}

func (PatientType) IsSignatureOnBehalfOfUnion() {}

func (PatientType) IsSignatureWhoUnion() {}

func (PatientType) IsResearchSubjectSubjectUnion() {}

func (PatientType) IsTaskPerformerActorUnion() {}

func (PatientType) IsPatientLinkOtherUnion() {}

func (PatientType) IsObservationPerformerUnion() {}

func (PatientType) IsObservationSubjectUnion() {}

func (PatientType) IsSpecimenSubjectUnion() {}

func (PatientType) IsMedicationAdministrationSubjectUnion() {}

func (PatientType) IsConditionParticipantActorUnion() {}

func (PatientType) IsFamilyMemberHistoryParticipantActorUnion() {}

func (PatientType) IsImagingStudySubjectUnion() {}

func (PatientType) IsDiagnosticReportSubjectUnion() {}

func (PatientType) IsGroupMemberEntityUnion() {}

func (PatientType) IsProcedurePerformerActorUnion() {}

func (PatientType) IsAnnotationAuthorReferenceUnion() {}

func (PatientType) IsSpecimenCollectionCollectorUnion() {}

func (PatientType) IsDocumentReferenceAttesterPartyUnion() {}

func (PatientType) IsImagingStudySeriesPerformerActorUnion() {}

func (PatientType) IsDocumentReferenceAuthorUnion() {}

func (PatientType) IsMedicationStatementInformationSourceUnion() {}

func (PatientType) IsMedicationStatementSubjectUnion() {}

func (PatientType) IsMedicationRequestSubjectUnion() {}

func (PatientType) IsMedicationRequestInformationSourceUnion() {}

func (PatientType) IsMedicationRequestPerformerUnion() {}

func (PatientType) IsMedicationRequestRequesterUnion() {}

func (PatientType) IsResourceUnion() {}

type Period struct {
	End              *string      `json:"end,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Start            *string      `json:"start,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type PractitionerCommunication struct {
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	Language          *CodeableConcept `json:"language,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	Preferred         *string          `json:"preferred,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type PractitionerQualification struct {
	Issuer            *OrganizationType `json:"issuer"`
	ModifierExtension []*Extension      `json:"modifierExtension,omitempty"`
	Period            *Period           `json:"period,omitempty"`
	ResourceType      *string           `json:"resourceType,omitempty"`
	Code              *CodeableConcept  `json:"code,omitempty"`
	Extension         []*Extension      `json:"extension,omitempty"`
	ID                *string           `json:"id,omitempty"`
	Identifier        []*Identifier     `json:"identifier,omitempty"`
	AuthResourcePath  *string           `json:"auth_resource_path,omitempty"`
}

type PractitionerRoleType struct {
	Specialty         []*CodeableConcept       `json:"specialty,omitempty"`
	ID                *string                  `json:"id,omitempty"`
	Meta              *Meta                    `json:"meta,omitempty"`
	Identifier        []*Identifier            `json:"identifier,omitempty"`
	Extension         []*Extension             `json:"extension,omitempty"`
	Organization      *OrganizationType        `json:"organization"`
	Practitioner      *PractitionerType        `json:"practitioner"`
	Availability      []*Availability          `json:"availability,omitempty"`
	ImplicitRules     *string                  `json:"implicitRules,omitempty"`
	ResourceType      *string                  `json:"resourceType,omitempty"`
	Text              *Narrative               `json:"text,omitempty"`
	ModifierExtension []*Extension             `json:"modifierExtension,omitempty"`
	Characteristic    []*CodeableConcept       `json:"characteristic,omitempty"`
	Active            *string                  `json:"active,omitempty"`
	Code              []*CodeableConcept       `json:"code,omitempty"`
	Communication     []*CodeableConcept       `json:"communication,omitempty"`
	Period            *Period                  `json:"period,omitempty"`
	Contact           []*ExtendedContactDetail `json:"contact,omitempty"`
	Contained         []ResourceUnion          `json:"contained,omitempty"`
	Language          *string                  `json:"language,omitempty"`
	AuthResourcePath  *string                  `json:"auth_resource_path,omitempty"`
}

func (PractitionerRoleType) IsTaskOwnerUnion() {}

func (PractitionerRoleType) IsTaskRequesterUnion() {}

func (PractitionerRoleType) IsTaskRestrictionRecipientUnion() {}

func (PractitionerRoleType) IsProcedureReportedReferenceUnion() {}

func (PractitionerRoleType) IsProcedureFocusUnion() {}

func (PractitionerRoleType) IsProcedureRecorderUnion() {}

func (PractitionerRoleType) IsSignatureOnBehalfOfUnion() {}

func (PractitionerRoleType) IsSignatureWhoUnion() {}

func (PractitionerRoleType) IsTaskPerformerActorUnion() {}

func (PractitionerRoleType) IsObservationPerformerUnion() {}

func (PractitionerRoleType) IsConditionParticipantActorUnion() {}

func (PractitionerRoleType) IsFamilyMemberHistoryParticipantActorUnion() {}

func (PractitionerRoleType) IsResearchStudyAssociatedPartyPartyUnion() {}

func (PractitionerRoleType) IsImagingStudyReferrerUnion() {}

func (PractitionerRoleType) IsDiagnosticReportPerformerUnion() {}

func (PractitionerRoleType) IsDiagnosticReportResultsInterpreterUnion() {}

func (PractitionerRoleType) IsGroupMemberEntityUnion() {}

func (PractitionerRoleType) IsProcedurePerformerActorUnion() {}

func (PractitionerRoleType) IsAnnotationAuthorReferenceUnion() {}

func (PractitionerRoleType) IsSpecimenCollectionCollectorUnion() {}

func (PractitionerRoleType) IsPatientGeneralPractitionerUnion() {}

func (PractitionerRoleType) IsDocumentReferenceAttesterPartyUnion() {}

func (PractitionerRoleType) IsGroupManagingEntityUnion() {}

func (PractitionerRoleType) IsImagingStudySeriesPerformerActorUnion() {}

func (PractitionerRoleType) IsDocumentReferenceAuthorUnion() {}

func (PractitionerRoleType) IsMedicationStatementInformationSourceUnion() {}

func (PractitionerRoleType) IsMedicationRequestInformationSourceUnion() {}

func (PractitionerRoleType) IsMedicationRequestPerformerUnion() {}

func (PractitionerRoleType) IsMedicationRequestRecorderUnion() {}

func (PractitionerRoleType) IsMedicationRequestRequesterUnion() {}

func (PractitionerRoleType) IsResourceUnion() {}

type PractitionerType struct {
	ImplicitRules     *string                      `json:"implicitRules,omitempty"`
	Meta              *Meta                        `json:"meta,omitempty"`
	Gender            *string                      `json:"gender,omitempty"`
	Qualification     []*PractitionerQualification `json:"qualification,omitempty"`
	ModifierExtension []*Extension                 `json:"modifierExtension,omitempty"`
	ID                *string                      `json:"id,omitempty"`
	Address           []*Address                   `json:"address,omitempty"`
	DeceasedBoolean   *string                      `json:"deceasedBoolean,omitempty"`
	Identifier        []*Identifier                `json:"identifier,omitempty"`
	DeceasedDateTime  *string                      `json:"deceasedDateTime,omitempty"`
	ResourceType      *string                      `json:"resourceType,omitempty"`
	Communication     []*PractitionerCommunication `json:"communication,omitempty"`
	Language          *string                      `json:"language,omitempty"`
	Name              []*HumanName                 `json:"name,omitempty"`
	Text              *Narrative                   `json:"text,omitempty"`
	BirthDate         *string                      `json:"birthDate,omitempty"`
	Telecom           []*ContactPoint              `json:"telecom,omitempty"`
	Contained         []ResourceUnion              `json:"contained,omitempty"`
	Extension         []*Extension                 `json:"extension,omitempty"`
	Active            *string                      `json:"active,omitempty"`
	Photo             []*Attachment                `json:"photo,omitempty"`
	AuthResourcePath  *string                      `json:"auth_resource_path,omitempty"`
}

func (PractitionerType) IsTaskOwnerUnion() {}

func (PractitionerType) IsTaskRequesterUnion() {}

func (PractitionerType) IsTaskRestrictionRecipientUnion() {}

func (PractitionerType) IsProcedureReportedReferenceUnion() {}

func (PractitionerType) IsProcedureSubjectUnion() {}

func (PractitionerType) IsProcedureFocusUnion() {}

func (PractitionerType) IsProcedureRecorderUnion() {}

func (PractitionerType) IsSignatureOnBehalfOfUnion() {}

func (PractitionerType) IsSignatureWhoUnion() {}

func (PractitionerType) IsTaskPerformerActorUnion() {}

func (PractitionerType) IsObservationPerformerUnion() {}

func (PractitionerType) IsObservationSubjectUnion() {}

func (PractitionerType) IsConditionParticipantActorUnion() {}

func (PractitionerType) IsFamilyMemberHistoryParticipantActorUnion() {}

func (PractitionerType) IsResearchStudyAssociatedPartyPartyUnion() {}

func (PractitionerType) IsImagingStudyReferrerUnion() {}

func (PractitionerType) IsDiagnosticReportPerformerUnion() {}

func (PractitionerType) IsDiagnosticReportResultsInterpreterUnion() {}

func (PractitionerType) IsDiagnosticReportSubjectUnion() {}

func (PractitionerType) IsGroupMemberEntityUnion() {}

func (PractitionerType) IsProcedurePerformerActorUnion() {}

func (PractitionerType) IsAnnotationAuthorReferenceUnion() {}

func (PractitionerType) IsSpecimenCollectionCollectorUnion() {}

func (PractitionerType) IsPatientGeneralPractitionerUnion() {}

func (PractitionerType) IsDocumentReferenceAttesterPartyUnion() {}

func (PractitionerType) IsGroupManagingEntityUnion() {}

func (PractitionerType) IsImagingStudySeriesPerformerActorUnion() {}

func (PractitionerType) IsDocumentReferenceAuthorUnion() {}

func (PractitionerType) IsMedicationStatementInformationSourceUnion() {}

func (PractitionerType) IsMedicationRequestInformationSourceUnion() {}

func (PractitionerType) IsMedicationRequestPerformerUnion() {}

func (PractitionerType) IsMedicationRequestRecorderUnion() {}

func (PractitionerType) IsMedicationRequestRequesterUnion() {}

func (PractitionerType) IsResourceUnion() {}

type ProcedureFocalDevice struct {
	ResourceType      *string          `json:"resourceType,omitempty"`
	Action            *CodeableConcept `json:"action,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ProcedurePerformer struct {
	OnBehalfOf        *OrganizationType            `json:"onBehalfOf"`
	Period            *Period                      `json:"period,omitempty"`
	ResourceType      *string                      `json:"resourceType,omitempty"`
	Actor             ProcedurePerformerActorUnion `json:"actor"`
	Extension         []*Extension                 `json:"extension,omitempty"`
	Function          *CodeableConcept             `json:"function,omitempty"`
	ID                *string                      `json:"id,omitempty"`
	ModifierExtension []*Extension                 `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string                      `json:"auth_resource_path,omitempty"`
}

type ProcedureType struct {
	InstantiatesURI       *string                         `json:"instantiatesUri,omitempty"`
	ID                    *string                         `json:"id,omitempty"`
	Language              *string                         `json:"language,omitempty"`
	PartOf                ProcedurePartOfUnion            `json:"partOf"`
	OccurrenceRange       *Range                          `json:"occurrenceRange,omitempty"`
	Note                  []*Annotation                   `json:"note,omitempty"`
	Category              []*CodeableConcept              `json:"category,omitempty"`
	OccurrencePeriod      *Period                         `json:"occurrencePeriod,omitempty"`
	ReportedReference     ProcedureReportedReferenceUnion `json:"reportedReference"`
	Report                ProcedureReportUnion            `json:"report"`
	Reason                []*CodeableReference            `json:"reason,omitempty"`
	Outcome               *CodeableConcept                `json:"outcome,omitempty"`
	ReportedBoolean       *string                         `json:"reportedBoolean,omitempty"`
	BodySite              []*CodeableConcept              `json:"bodySite,omitempty"`
	SupportingInfo        ResourceUnion                   `json:"supportingInfo"`
	Extension             []*Extension                    `json:"extension,omitempty"`
	Used                  []*CodeableReference            `json:"used,omitempty"`
	OccurrenceString      *string                         `json:"occurrenceString,omitempty"`
	Contained             []ResourceUnion                 `json:"contained,omitempty"`
	FocalDevice           []*ProcedureFocalDevice         `json:"focalDevice,omitempty"`
	Identifier            []*Identifier                   `json:"identifier,omitempty"`
	InstantiatesCanonical *string                         `json:"instantiatesCanonical,omitempty"`
	FollowUp              []*CodeableConcept              `json:"followUp,omitempty"`
	OccurrenceAge         *Age                            `json:"occurrenceAge,omitempty"`
	OccurrenceTiming      *Timing                         `json:"occurrenceTiming,omitempty"`
	Subject               ProcedureSubjectUnion           `json:"subject"`
	OccurrenceDateTime    *string                         `json:"occurrenceDateTime,omitempty"`
	ImplicitRules         *string                         `json:"implicitRules,omitempty"`
	Recorder              ProcedureRecorderUnion          `json:"recorder"`
	Status                *string                         `json:"status,omitempty"`
	Complication          []*CodeableReference            `json:"complication,omitempty"`
	Meta                  *Meta                           `json:"meta,omitempty"`
	ResourceType          *string                         `json:"resourceType,omitempty"`
	StatusReason          *CodeableConcept                `json:"statusReason,omitempty"`
	Focus                 ProcedureFocusUnion             `json:"focus"`
	Performer             []*ProcedurePerformer           `json:"performer,omitempty"`
	Text                  *Narrative                      `json:"text,omitempty"`
	Code                  *CodeableConcept                `json:"code,omitempty"`
	ModifierExtension     []*Extension                    `json:"modifierExtension,omitempty"`
	Recorded              *string                         `json:"recorded,omitempty"`
	AuthResourcePath      *string                         `json:"auth_resource_path,omitempty"`
}

func (ProcedureType) IsProcedurePartOfUnion() {}

func (ProcedureType) IsObservationSubjectUnion() {}

func (ProcedureType) IsObservationPartOfUnion() {}

func (ProcedureType) IsDiagnosticReportSupportingInfoReferenceUnion() {}

func (ProcedureType) IsMedicationAdministrationPartOfUnion() {}

func (ProcedureType) IsMedicationStatementPartOfUnion() {}

func (ProcedureType) IsResourceUnion() {}

type Quantity struct {
	System           *string      `json:"system,omitempty"`
	Unit             *string      `json:"unit,omitempty"`
	Value            *string      `json:"value,omitempty"`
	Code             *string      `json:"code,omitempty"`
	Comparator       *string      `json:"comparator,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Query struct {
}

type Range struct {
	Low              *Quantity    `json:"low,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	High             *Quantity    `json:"high,omitempty"`
	ID               *string      `json:"id,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Ratio struct {
	Numerator        *Quantity    `json:"numerator,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Denominator      *Quantity    `json:"denominator,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type RatioRange struct {
	LowNumerator     *Quantity    `json:"lowNumerator,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Denominator      *Quantity    `json:"denominator,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	HighNumerator    *Quantity    `json:"highNumerator,omitempty"`
	ID               *string      `json:"id,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Reference struct {
	Identifier       *Identifier  `json:"identifier,omitempty"`
	Reference        *string      `json:"reference,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Type             *string      `json:"type,omitempty"`
	Display          *string      `json:"display,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type RelatedArtifact struct {
	Citation          *string            `json:"citation,omitempty"`
	ID                *string            `json:"id,omitempty"`
	Display           *string            `json:"display,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	ResourceReference ResourceUnion      `json:"resourceReference"`
	PublicationStatus *string            `json:"publicationStatus,omitempty"`
	Type              *string            `json:"type,omitempty"`
	Document          *Attachment        `json:"document,omitempty"`
	PublicationDate   *string            `json:"publicationDate,omitempty"`
	Label             *string            `json:"label,omitempty"`
	Resource          *string            `json:"resource,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	Classifier        []*CodeableConcept `json:"classifier,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type ResearchStudyAssociatedParty struct {
	ResourceType      *string                                `json:"resourceType,omitempty"`
	Classifier        []*CodeableConcept                     `json:"classifier,omitempty"`
	Name              *string                                `json:"name,omitempty"`
	Role              *CodeableConcept                       `json:"role,omitempty"`
	ModifierExtension []*Extension                           `json:"modifierExtension,omitempty"`
	ID                *string                                `json:"id,omitempty"`
	Party             ResearchStudyAssociatedPartyPartyUnion `json:"party"`
	Period            []*Period                              `json:"period,omitempty"`
	Extension         []*Extension                           `json:"extension,omitempty"`
	AuthResourcePath  *string                                `json:"auth_resource_path,omitempty"`
}

type ResearchStudyComparisonGroup struct {
	Description       *string          `json:"description,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	Type              *CodeableConcept `json:"type,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	Name              *string          `json:"name,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	ID                *string          `json:"id,omitempty"`
	LinkID            *string          `json:"linkId,omitempty"`
	ObservedGroup     *GroupType       `json:"observedGroup"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ResearchStudyLabel struct {
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Type              *CodeableConcept `json:"type,omitempty"`
	Value             *string          `json:"value,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ResearchStudyObjective struct {
	Name              *string          `json:"name,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Type              *CodeableConcept `json:"type,omitempty"`
	Description       *string          `json:"description,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ResearchStudyOutcomeMeasure struct {
	ID                *string            `json:"id,omitempty"`
	ModifierExtension []*Extension       `json:"modifierExtension,omitempty"`
	Name              *string            `json:"name,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	Type              []*CodeableConcept `json:"type,omitempty"`
	Description       *string            `json:"description,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type ResearchStudyProgressStatus struct {
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	Period            *Period          `json:"period,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	State             *CodeableConcept `json:"state,omitempty"`
	Actual            *string          `json:"actual,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ResearchStudyRecruitment struct {
	TargetNumber      *string                                  `json:"targetNumber,omitempty"`
	ActualGroup       *GroupType                               `json:"actualGroup"`
	ActualNumber      *string                                  `json:"actualNumber,omitempty"`
	Eligibility       ResearchStudyRecruitmentEligibilityUnion `json:"eligibility"`
	Extension         []*Extension                             `json:"extension,omitempty"`
	ID                *string                                  `json:"id,omitempty"`
	ModifierExtension []*Extension                             `json:"modifierExtension,omitempty"`
	ResourceType      *string                                  `json:"resourceType,omitempty"`
	AuthResourcePath  *string                                  `json:"auth_resource_path,omitempty"`
}

type ResearchStudyType struct {
	Title              *string                         `json:"title,omitempty"`
	Classifier         []*CodeableConcept              `json:"classifier,omitempty"`
	AssociatedParty    []*ResearchStudyAssociatedParty `json:"associatedParty,omitempty"`
	Label              []*ResearchStudyLabel           `json:"label,omitempty"`
	ImplicitRules      *string                         `json:"implicitRules,omitempty"`
	Status             *string                         `json:"status,omitempty"`
	Recruitment        *ResearchStudyRecruitment       `json:"recruitment,omitempty"`
	Keyword            []*CodeableConcept              `json:"keyword,omitempty"`
	ResourceType       *string                         `json:"resourceType,omitempty"`
	Objective          []*ResearchStudyObjective       `json:"objective,omitempty"`
	Identifier         []*Identifier                   `json:"identifier,omitempty"`
	Region             []*CodeableConcept              `json:"region,omitempty"`
	Phase              *CodeableConcept                `json:"phase,omitempty"`
	PrimaryPurposeType *CodeableConcept                `json:"primaryPurposeType,omitempty"`
	Site               ResearchStudySiteUnion          `json:"site"`
	Name               *string                         `json:"name,omitempty"`
	DescriptionSummary *string                         `json:"descriptionSummary,omitempty"`
	ComparisonGroup    []*ResearchStudyComparisonGroup `json:"comparisonGroup,omitempty"`
	Language           *string                         `json:"language,omitempty"`
	Note               []*Annotation                   `json:"note,omitempty"`
	Date               *string                         `json:"date,omitempty"`
	Condition          []*CodeableConcept              `json:"condition,omitempty"`
	Meta               *Meta                           `json:"meta,omitempty"`
	ModifierExtension  []*Extension                    `json:"modifierExtension,omitempty"`
	Period             *Period                         `json:"period,omitempty"`
	PartOf             *ResearchStudyType              `json:"partOf"`
	Extension          []*Extension                    `json:"extension,omitempty"`
	Contained          []ResourceUnion                 `json:"contained,omitempty"`
	StudyDesign        []*CodeableConcept              `json:"studyDesign,omitempty"`
	Text               *Narrative                      `json:"text,omitempty"`
	OutcomeMeasure     []*ResearchStudyOutcomeMeasure  `json:"outcomeMeasure,omitempty"`
	ID                 *string                         `json:"id,omitempty"`
	WhyStopped         *CodeableConcept                `json:"whyStopped,omitempty"`
	URL                *string                         `json:"url,omitempty"`
	Description        *string                         `json:"description,omitempty"`
	RelatedArtifact    []*RelatedArtifact              `json:"relatedArtifact,omitempty"`
	Focus              []*CodeableReference            `json:"focus,omitempty"`
	Result             ResearchStudyResultUnion        `json:"result"`
	Version            *string                         `json:"version,omitempty"`
	ProgressStatus     []*ResearchStudyProgressStatus  `json:"progressStatus,omitempty"`
	AuthResourcePath   *string                         `json:"auth_resource_path,omitempty"`
}

func (ResearchStudyType) IsResearchStudySiteUnion() {}

func (ResearchStudyType) IsUsageContextValueReferenceUnion() {}

func (ResearchStudyType) IsResourceUnion() {}

type ResearchSubjectProgress struct {
	Reason            *CodeableConcept `json:"reason,omitempty"`
	SubjectState      *CodeableConcept `json:"subjectState,omitempty"`
	ID                *string          `json:"id,omitempty"`
	StartDate         *string          `json:"startDate,omitempty"`
	Type              *CodeableConcept `json:"type,omitempty"`
	Milestone         *CodeableConcept `json:"milestone,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	EndDate           *string          `json:"endDate,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type ResearchSubjectType struct {
	AssignedComparisonGroup *string                     `json:"assignedComparisonGroup,omitempty"`
	Contained               []ResourceUnion             `json:"contained,omitempty"`
	Status                  *string                     `json:"status,omitempty"`
	Identifier              []*Identifier               `json:"identifier,omitempty"`
	Language                *string                     `json:"language,omitempty"`
	Text                    *Narrative                  `json:"text,omitempty"`
	ID                      *string                     `json:"id,omitempty"`
	Extension               []*Extension                `json:"extension,omitempty"`
	ImplicitRules           *string                     `json:"implicitRules,omitempty"`
	Subject                 ResearchSubjectSubjectUnion `json:"subject"`
	ModifierExtension       []*Extension                `json:"modifierExtension,omitempty"`
	ResourceType            *string                     `json:"resourceType,omitempty"`
	Period                  *Period                     `json:"period,omitempty"`
	Progress                []*ResearchSubjectProgress  `json:"progress,omitempty"`
	Meta                    *Meta                       `json:"meta,omitempty"`
	Study                   *ResearchStudyType          `json:"study"`
	ActualComparisonGroup   *string                     `json:"actualComparisonGroup,omitempty"`
	AuthResourcePath        *string                     `json:"auth_resource_path,omitempty"`
}

func (ResearchSubjectType) IsResourceUnion() {}

type SampledData struct {
	UpperLimit       *string      `json:"upperLimit,omitempty"`
	Data             *string      `json:"data,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Interval         *string      `json:"interval,omitempty"`
	IntervalUnit     *string      `json:"intervalUnit,omitempty"`
	LowerLimit       *string      `json:"lowerLimit,omitempty"`
	Offsets          *string      `json:"offsets,omitempty"`
	Origin           *Quantity    `json:"origin,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	Dimensions       *string      `json:"dimensions,omitempty"`
	Factor           *string      `json:"factor,omitempty"`
	CodeMap          *string      `json:"codeMap,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type Signature struct {
	TargetFormat     *string                  `json:"targetFormat,omitempty"`
	Type             []*Coding                `json:"type,omitempty"`
	When             *string                  `json:"when,omitempty"`
	Who              SignatureWhoUnion        `json:"who"`
	Extension        []*Extension             `json:"extension,omitempty"`
	ID               *string                  `json:"id,omitempty"`
	ResourceType     *string                  `json:"resourceType,omitempty"`
	Data             *string                  `json:"data,omitempty"`
	OnBehalfOf       SignatureOnBehalfOfUnion `json:"onBehalfOf"`
	SigFormat        *string                  `json:"sigFormat,omitempty"`
	AuthResourcePath *string                  `json:"auth_resource_path,omitempty"`
}

type SpecimenCollection struct {
	Method                       *CodeableConcept                 `json:"method,omitempty"`
	Collector                    SpecimenCollectionCollectorUnion `json:"collector"`
	CollectedDateTime            *string                          `json:"collectedDateTime,omitempty"`
	BodySite                     *CodeableReference               `json:"bodySite,omitempty"`
	CollectedPeriod              *Period                          `json:"collectedPeriod,omitempty"`
	Extension                    []*Extension                     `json:"extension,omitempty"`
	Procedure                    *ProcedureType                   `json:"procedure"`
	Quantity                     *Quantity                        `json:"quantity,omitempty"`
	ModifierExtension            []*Extension                     `json:"modifierExtension,omitempty"`
	FastingStatusDuration        *Duration                        `json:"fastingStatusDuration,omitempty"`
	FastingStatusCodeableConcept *CodeableConcept                 `json:"fastingStatusCodeableConcept,omitempty"`
	ID                           *string                          `json:"id,omitempty"`
	Device                       *CodeableReference               `json:"device,omitempty"`
	Duration                     *Duration                        `json:"duration,omitempty"`
	ResourceType                 *string                          `json:"resourceType,omitempty"`
	AuthResourcePath             *string                          `json:"auth_resource_path,omitempty"`
}

type SpecimenContainer struct {
	ModifierExtension []*Extension `json:"modifierExtension,omitempty"`
	ResourceType      *string      `json:"resourceType,omitempty"`
	SpecimenQuantity  *Quantity    `json:"specimenQuantity,omitempty"`
	Extension         []*Extension `json:"extension,omitempty"`
	ID                *string      `json:"id,omitempty"`
	AuthResourcePath  *string      `json:"auth_resource_path,omitempty"`
}

type SpecimenFeature struct {
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Type              *CodeableConcept `json:"type,omitempty"`
	Description       *string          `json:"description,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type SpecimenProcessing struct {
	ID                *string          `json:"id,omitempty"`
	Description       *string          `json:"description,omitempty"`
	Method            *CodeableConcept `json:"method,omitempty"`
	TimePeriod        *Period          `json:"timePeriod,omitempty"`
	Additive          *SubstanceType   `json:"additive"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	TimeDateTime      *string          `json:"timeDateTime,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type SpecimenType struct {
	Parent              *SpecimenType         `json:"parent"`
	Language            *string               `json:"language,omitempty"`
	Extension           []*Extension          `json:"extension,omitempty"`
	Text                *Narrative            `json:"text,omitempty"`
	Processing          []*SpecimenProcessing `json:"processing,omitempty"`
	Type                *CodeableConcept      `json:"type,omitempty"`
	Subject             SpecimenSubjectUnion  `json:"subject"`
	Role                []*CodeableConcept    `json:"role,omitempty"`
	Combined            *string               `json:"combined,omitempty"`
	Meta                *Meta                 `json:"meta,omitempty"`
	Collection          *SpecimenCollection   `json:"collection,omitempty"`
	Feature             []*SpecimenFeature    `json:"feature,omitempty"`
	Note                []*Annotation         `json:"note,omitempty"`
	ID                  *string               `json:"id,omitempty"`
	Identifier          []*Identifier         `json:"identifier,omitempty"`
	Condition           []*CodeableConcept    `json:"condition,omitempty"`
	ImplicitRules       *string               `json:"implicitRules,omitempty"`
	ResourceType        *string               `json:"resourceType,omitempty"`
	AccessionIdentifier *Identifier           `json:"accessionIdentifier,omitempty"`
	Container           []*SpecimenContainer  `json:"container,omitempty"`
	ModifierExtension   []*Extension          `json:"modifierExtension,omitempty"`
	ReceivedTime        *string               `json:"receivedTime,omitempty"`
	Contained           []ResourceUnion       `json:"contained,omitempty"`
	Status              *string               `json:"status,omitempty"`
	AuthResourcePath    *string               `json:"auth_resource_path,omitempty"`
}

func (SpecimenType) IsProcedureFocusUnion() {}

func (SpecimenType) IsResearchSubjectSubjectUnion() {}

func (SpecimenType) IsObservationSpecimenUnion() {}

func (SpecimenType) IsGroupMemberEntityUnion() {}

func (SpecimenType) IsResourceUnion() {}

type SubstanceDefinitionCharacterization struct {
	Technique         *CodeableConcept `json:"technique,omitempty"`
	Description       *string          `json:"description,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	File              []*Attachment    `json:"file,omitempty"`
	Form              *CodeableConcept `json:"form,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionCode struct {
	Note              []*Annotation          `json:"note,omitempty"`
	Source            *DocumentReferenceType `json:"source"`
	Status            *CodeableConcept       `json:"status,omitempty"`
	ID                *string                `json:"id,omitempty"`
	ResourceType      *string                `json:"resourceType,omitempty"`
	StatusDate        *string                `json:"statusDate,omitempty"`
	Code              *CodeableConcept       `json:"code,omitempty"`
	ModifierExtension []*Extension           `json:"modifierExtension,omitempty"`
	Extension         []*Extension           `json:"extension,omitempty"`
	AuthResourcePath  *string                `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionMoiety struct {
	Identifier        *Identifier      `json:"identifier,omitempty"`
	Name              *string          `json:"name,omitempty"`
	AmountQuantity    *Quantity        `json:"amountQuantity,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	MeasurementType   *CodeableConcept `json:"measurementType,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	MolecularFormula  *string          `json:"molecularFormula,omitempty"`
	AmountString      *string          `json:"amountString,omitempty"`
	Stereochemistry   *CodeableConcept `json:"stereochemistry,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	ID                *string          `json:"id,omitempty"`
	OpticalActivity   *CodeableConcept `json:"opticalActivity,omitempty"`
	Role              *CodeableConcept `json:"role,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionMolecularWeight struct {
	ResourceType      *string          `json:"resourceType,omitempty"`
	Type              *CodeableConcept `json:"type,omitempty"`
	Amount            *Quantity        `json:"amount,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	Method            *CodeableConcept `json:"method,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionName struct {
	ModifierExtension []*Extension                       `json:"modifierExtension,omitempty"`
	Preferred         *string                            `json:"preferred,omitempty"`
	Jurisdiction      []*CodeableConcept                 `json:"jurisdiction,omitempty"`
	Language          []*CodeableConcept                 `json:"language,omitempty"`
	Name              *string                            `json:"name,omitempty"`
	ResourceType      *string                            `json:"resourceType,omitempty"`
	Extension         []*Extension                       `json:"extension,omitempty"`
	Status            *CodeableConcept                   `json:"status,omitempty"`
	Source            *DocumentReferenceType             `json:"source"`
	Synonym           []*SubstanceDefinitionName         `json:"synonym,omitempty"`
	Type              *CodeableConcept                   `json:"type,omitempty"`
	Domain            []*CodeableConcept                 `json:"domain,omitempty"`
	ID                *string                            `json:"id,omitempty"`
	Translation       []*SubstanceDefinitionName         `json:"translation,omitempty"`
	Official          []*SubstanceDefinitionNameOfficial `json:"official,omitempty"`
	AuthResourcePath  *string                            `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionNameOfficial struct {
	Authority         *CodeableConcept `json:"authority,omitempty"`
	Date              *string          `json:"date,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Status            *CodeableConcept `json:"status,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionProperty struct {
	ValueQuantity        *Quantity        `json:"valueQuantity,omitempty"`
	Extension            []*Extension     `json:"extension,omitempty"`
	ValueBoolean         *string          `json:"valueBoolean,omitempty"`
	ValueCodeableConcept *CodeableConcept `json:"valueCodeableConcept,omitempty"`
	ValueDate            *string          `json:"valueDate,omitempty"`
	ValueAttachment      *Attachment      `json:"valueAttachment,omitempty"`
	ID                   *string          `json:"id,omitempty"`
	ModifierExtension    []*Extension     `json:"modifierExtension,omitempty"`
	ResourceType         *string          `json:"resourceType,omitempty"`
	Type                 *CodeableConcept `json:"type,omitempty"`
	AuthResourcePath     *string          `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionRelationship struct {
	AmountQuantity                     *Quantity                `json:"amountQuantity,omitempty"`
	Extension                          []*Extension             `json:"extension,omitempty"`
	AmountString                       *string                  `json:"amountString,omitempty"`
	Source                             *DocumentReferenceType   `json:"source"`
	Type                               *CodeableConcept         `json:"type,omitempty"`
	RatioHighLimitAmount               *Ratio                   `json:"ratioHighLimitAmount,omitempty"`
	AmountRatio                        *Ratio                   `json:"amountRatio,omitempty"`
	Comparator                         *CodeableConcept         `json:"comparator,omitempty"`
	ID                                 *string                  `json:"id,omitempty"`
	IsDefining                         *string                  `json:"isDefining,omitempty"`
	ResourceType                       *string                  `json:"resourceType,omitempty"`
	SubstanceDefinitionReference       *SubstanceDefinitionType `json:"substanceDefinitionReference"`
	SubstanceDefinitionCodeableConcept *CodeableConcept         `json:"substanceDefinitionCodeableConcept,omitempty"`
	ModifierExtension                  []*Extension             `json:"modifierExtension,omitempty"`
	AuthResourcePath                   *string                  `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionSourceMaterial struct {
	Extension         []*Extension       `json:"extension,omitempty"`
	ID                *string            `json:"id,omitempty"`
	Species           *CodeableConcept   `json:"species,omitempty"`
	Type              *CodeableConcept   `json:"type,omitempty"`
	CountryOfOrigin   []*CodeableConcept `json:"countryOfOrigin,omitempty"`
	Genus             *CodeableConcept   `json:"genus,omitempty"`
	ModifierExtension []*Extension       `json:"modifierExtension,omitempty"`
	Part              *CodeableConcept   `json:"part,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionStructure struct {
	Technique                []*CodeableConcept                            `json:"technique,omitempty"`
	Extension                []*Extension                                  `json:"extension,omitempty"`
	MolecularFormulaByMoiety *string                                       `json:"molecularFormulaByMoiety,omitempty"`
	Representation           []*SubstanceDefinitionStructureRepresentation `json:"representation,omitempty"`
	ResourceType             *string                                       `json:"resourceType,omitempty"`
	MolecularFormula         *string                                       `json:"molecularFormula,omitempty"`
	OpticalActivity          *CodeableConcept                              `json:"opticalActivity,omitempty"`
	Stereochemistry          *CodeableConcept                              `json:"stereochemistry,omitempty"`
	SourceDocument           *DocumentReferenceType                        `json:"sourceDocument"`
	ID                       *string                                       `json:"id,omitempty"`
	ModifierExtension        []*Extension                                  `json:"modifierExtension,omitempty"`
	MolecularWeight          *SubstanceDefinitionMolecularWeight           `json:"molecularWeight,omitempty"`
	AuthResourcePath         *string                                       `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionStructureRepresentation struct {
	ID                *string                `json:"id,omitempty"`
	ModifierExtension []*Extension           `json:"modifierExtension,omitempty"`
	Representation    *string                `json:"representation,omitempty"`
	ResourceType      *string                `json:"resourceType,omitempty"`
	Type              *CodeableConcept       `json:"type,omitempty"`
	Document          *DocumentReferenceType `json:"document"`
	Extension         []*Extension           `json:"extension,omitempty"`
	Format            *CodeableConcept       `json:"format,omitempty"`
	AuthResourcePath  *string                `json:"auth_resource_path,omitempty"`
}

type SubstanceDefinitionType struct {
	Relationship      []*SubstanceDefinitionRelationship     `json:"relationship,omitempty"`
	Text              *Narrative                             `json:"text,omitempty"`
	Description       *string                                `json:"description,omitempty"`
	Grade             []*CodeableConcept                     `json:"grade,omitempty"`
	Language          *string                                `json:"language,omitempty"`
	Code              []*SubstanceDefinitionCode             `json:"code,omitempty"`
	Extension         []*Extension                           `json:"extension,omitempty"`
	ImplicitRules     *string                                `json:"implicitRules,omitempty"`
	ID                *string                                `json:"id,omitempty"`
	Domain            *CodeableConcept                       `json:"domain,omitempty"`
	Meta              *Meta                                  `json:"meta,omitempty"`
	Version           *string                                `json:"version,omitempty"`
	Supplier          *OrganizationType                      `json:"supplier"`
	Note              []*Annotation                          `json:"note,omitempty"`
	ResourceType      *string                                `json:"resourceType,omitempty"`
	MolecularWeight   []*SubstanceDefinitionMolecularWeight  `json:"molecularWeight,omitempty"`
	Characterization  []*SubstanceDefinitionCharacterization `json:"characterization,omitempty"`
	Status            *CodeableConcept                       `json:"status,omitempty"`
	Structure         *SubstanceDefinitionStructure          `json:"structure,omitempty"`
	Moiety            []*SubstanceDefinitionMoiety           `json:"moiety,omitempty"`
	ModifierExtension []*Extension                           `json:"modifierExtension,omitempty"`
	SourceMaterial    *SubstanceDefinitionSourceMaterial     `json:"sourceMaterial,omitempty"`
	Classification    []*CodeableConcept                     `json:"classification,omitempty"`
	Identifier        []*Identifier                          `json:"identifier,omitempty"`
	Name              []*SubstanceDefinitionName             `json:"name,omitempty"`
	Manufacturer      *OrganizationType                      `json:"manufacturer"`
	Property          []*SubstanceDefinitionProperty         `json:"property,omitempty"`
	Contained         []ResourceUnion                        `json:"contained,omitempty"`
	AuthResourcePath  *string                                `json:"auth_resource_path,omitempty"`
}

func (SubstanceDefinitionType) IsResourceUnion() {}

type SubstanceIngredient struct {
	ResourceType             *string          `json:"resourceType,omitempty"`
	SubstanceCodeableConcept *CodeableConcept `json:"substanceCodeableConcept,omitempty"`
	SubstanceReference       *SubstanceType   `json:"substanceReference"`
	Extension                []*Extension     `json:"extension,omitempty"`
	ID                       *string          `json:"id,omitempty"`
	ModifierExtension        []*Extension     `json:"modifierExtension,omitempty"`
	Quantity                 *Ratio           `json:"quantity,omitempty"`
	AuthResourcePath         *string          `json:"auth_resource_path,omitempty"`
}

type SubstanceType struct {
	Expiry            *string                `json:"expiry,omitempty"`
	Description       *string                `json:"description,omitempty"`
	ResourceType      *string                `json:"resourceType,omitempty"`
	Extension         []*Extension           `json:"extension,omitempty"`
	Identifier        []*Identifier          `json:"identifier,omitempty"`
	Code              *CodeableReference     `json:"code,omitempty"`
	ImplicitRules     *string                `json:"implicitRules,omitempty"`
	Status            *string                `json:"status,omitempty"`
	Quantity          *Quantity              `json:"quantity,omitempty"`
	ModifierExtension []*Extension           `json:"modifierExtension,omitempty"`
	ID                *string                `json:"id,omitempty"`
	Ingredient        []*SubstanceIngredient `json:"ingredient,omitempty"`
	Text              *Narrative             `json:"text,omitempty"`
	Language          *string                `json:"language,omitempty"`
	Instance          *string                `json:"instance,omitempty"`
	Meta              *Meta                  `json:"meta,omitempty"`
	Category          []*CodeableConcept     `json:"category,omitempty"`
	Contained         []ResourceUnion        `json:"contained,omitempty"`
	AuthResourcePath  *string                `json:"auth_resource_path,omitempty"`
}

func (SubstanceType) IsResearchSubjectSubjectUnion() {}

func (SubstanceType) IsObservationSubjectUnion() {}

func (SubstanceType) IsSpecimenSubjectUnion() {}

func (SubstanceType) IsDiagnosticReportSubjectUnion() {}

func (SubstanceType) IsResourceUnion() {}

type TaskInput struct {
	ValueInstant               *string                `json:"valueInstant,omitempty"`
	ValueDecimal               *string                `json:"valueDecimal,omitempty"`
	ValueURI                   *string                `json:"valueUri,omitempty"`
	ValueBoolean               *string                `json:"valueBoolean,omitempty"`
	ValueBase64Binary          *string                `json:"valueBase64Binary,omitempty"`
	Extension                  []*Extension           `json:"extension,omitempty"`
	ValueRange                 *Range                 `json:"valueRange,omitempty"`
	ValueString                *string                `json:"valueString,omitempty"`
	ValueAvailability          *Availability          `json:"valueAvailability,omitempty"`
	ValueUUID                  *string                `json:"valueUuid,omitempty"`
	ResourceType               *string                `json:"resourceType,omitempty"`
	ValueCount                 *Count                 `json:"valueCount,omitempty"`
	ValueInteger64             *string                `json:"valueInteger64,omitempty"`
	ValueExpression            *Expression            `json:"valueExpression,omitempty"`
	ModifierExtension          []*Extension           `json:"modifierExtension,omitempty"`
	ValueCanonical             *string                `json:"valueCanonical,omitempty"`
	ValueContactDetail         *ContactDetail         `json:"valueContactDetail,omitempty"`
	ValueInteger               *string                `json:"valueInteger,omitempty"`
	ValueAddress               *Address               `json:"valueAddress,omitempty"`
	ValueIdentifier            *Identifier            `json:"valueIdentifier,omitempty"`
	ValueTime                  *string                `json:"valueTime,omitempty"`
	ValueRatio                 *Ratio                 `json:"valueRatio,omitempty"`
	Type                       *CodeableConcept       `json:"type,omitempty"`
	ValueSampledData           *SampledData           `json:"valueSampledData,omitempty"`
	ValueParameterDefinition   *ParameterDefinition   `json:"valueParameterDefinition,omitempty"`
	ValueID                    *string                `json:"valueId,omitempty"`
	ValueTriggerDefinition     *TriggerDefinition     `json:"valueTriggerDefinition,omitempty"`
	ValueDate                  *string                `json:"valueDate,omitempty"`
	ValueRatioRange            *RatioRange            `json:"valueRatioRange,omitempty"`
	ValueUnsignedInt           *string                `json:"valueUnsignedInt,omitempty"`
	ValueContactPoint          *ContactPoint          `json:"valueContactPoint,omitempty"`
	ValueAnnotation            *Annotation            `json:"valueAnnotation,omitempty"`
	ValueCodeableReference     *CodeableReference     `json:"valueCodeableReference,omitempty"`
	ValueDistance              *Distance              `json:"valueDistance,omitempty"`
	ValueAttachment            *Attachment            `json:"valueAttachment,omitempty"`
	ValueCodeableConcept       *CodeableConcept       `json:"valueCodeableConcept,omitempty"`
	ValuePositiveInt           *string                `json:"valuePositiveInt,omitempty"`
	ValueExtendedContactDetail *ExtendedContactDetail `json:"valueExtendedContactDetail,omitempty"`
	ValueDuration              *Duration              `json:"valueDuration,omitempty"`
	ValueURL                   *string                `json:"valueUrl,omitempty"`
	ValueMeta                  *Meta                  `json:"valueMeta,omitempty"`
	ValueQuantity              *Quantity              `json:"valueQuantity,omitempty"`
	ValueDosage                *Dosage                `json:"valueDosage,omitempty"`
	ValueRelatedArtifact       *RelatedArtifact       `json:"valueRelatedArtifact,omitempty"`
	ValueDataRequirement       *DataRequirement       `json:"valueDataRequirement,omitempty"`
	ValuePeriod                *Period                `json:"valuePeriod,omitempty"`
	ValueOid                   *string                `json:"valueOid,omitempty"`
	ValueAge                   *Age                   `json:"valueAge,omitempty"`
	ValueCoding                *Coding                `json:"valueCoding,omitempty"`
	ValueSignature             *Signature             `json:"valueSignature,omitempty"`
	ID                         *string                `json:"id,omitempty"`
	ValueHumanName             *HumanName             `json:"valueHumanName,omitempty"`
	ValueMarkdown              *string                `json:"valueMarkdown,omitempty"`
	ValueUsageContext          *UsageContext          `json:"valueUsageContext,omitempty"`
	ValueDateTime              *string                `json:"valueDateTime,omitempty"`
	ValueCode                  *string                `json:"valueCode,omitempty"`
	ValueTiming                *Timing                `json:"valueTiming,omitempty"`
	ValueMoney                 *Money                 `json:"valueMoney,omitempty"`
	AuthResourcePath           *string                `json:"auth_resource_path,omitempty"`
}

type TaskOutput struct {
	ValueMoney                 *Money                 `json:"valueMoney,omitempty"`
	ValuePositiveInt           *string                `json:"valuePositiveInt,omitempty"`
	ValueInstant               *string                `json:"valueInstant,omitempty"`
	ValueURI                   *string                `json:"valueUri,omitempty"`
	ValueDateTime              *string                `json:"valueDateTime,omitempty"`
	ValueIdentifier            *Identifier            `json:"valueIdentifier,omitempty"`
	ValueDosage                *Dosage                `json:"valueDosage,omitempty"`
	ValueQuantity              *Quantity              `json:"valueQuantity,omitempty"`
	ValueAvailability          *Availability          `json:"valueAvailability,omitempty"`
	ValueSignature             *Signature             `json:"valueSignature,omitempty"`
	ValueRange                 *Range                 `json:"valueRange,omitempty"`
	ValueUsageContext          *UsageContext          `json:"valueUsageContext,omitempty"`
	ValueID                    *string                `json:"valueId,omitempty"`
	ValueCode                  *string                `json:"valueCode,omitempty"`
	ValueContactPoint          *ContactPoint          `json:"valueContactPoint,omitempty"`
	ValueTime                  *string                `json:"valueTime,omitempty"`
	ValueHumanName             *HumanName             `json:"valueHumanName,omitempty"`
	ValueCodeableReference     *CodeableReference     `json:"valueCodeableReference,omitempty"`
	ValueMeta                  *Meta                  `json:"valueMeta,omitempty"`
	ID                         *string                `json:"id,omitempty"`
	ValueBoolean               *string                `json:"valueBoolean,omitempty"`
	ValueDuration              *Duration              `json:"valueDuration,omitempty"`
	ValueDataRequirement       *DataRequirement       `json:"valueDataRequirement,omitempty"`
	ValueExtendedContactDetail *ExtendedContactDetail `json:"valueExtendedContactDetail,omitempty"`
	ValueOid                   *string                `json:"valueOid,omitempty"`
	ValuePeriod                *Period                `json:"valuePeriod,omitempty"`
	ValueAddress               *Address               `json:"valueAddress,omitempty"`
	ValueURL                   *string                `json:"valueUrl,omitempty"`
	ValueCoding                *Coding                `json:"valueCoding,omitempty"`
	ModifierExtension          []*Extension           `json:"modifierExtension,omitempty"`
	ValueAnnotation            *Annotation            `json:"valueAnnotation,omitempty"`
	ValueCodeableConcept       *CodeableConcept       `json:"valueCodeableConcept,omitempty"`
	ValueRatioRange            *RatioRange            `json:"valueRatioRange,omitempty"`
	ValueAge                   *Age                   `json:"valueAge,omitempty"`
	ValueRatio                 *Ratio                 `json:"valueRatio,omitempty"`
	ValueParameterDefinition   *ParameterDefinition   `json:"valueParameterDefinition,omitempty"`
	ValueContactDetail         *ContactDetail         `json:"valueContactDetail,omitempty"`
	ValueCount                 *Count                 `json:"valueCount,omitempty"`
	ValueUUID                  *string                `json:"valueUuid,omitempty"`
	ValueRelatedArtifact       *RelatedArtifact       `json:"valueRelatedArtifact,omitempty"`
	Extension                  []*Extension           `json:"extension,omitempty"`
	ValueExpression            *Expression            `json:"valueExpression,omitempty"`
	ValueAttachment            *Attachment            `json:"valueAttachment,omitempty"`
	ValueTiming                *Timing                `json:"valueTiming,omitempty"`
	ValueBase64Binary          *string                `json:"valueBase64Binary,omitempty"`
	ValueUnsignedInt           *string                `json:"valueUnsignedInt,omitempty"`
	Type                       *CodeableConcept       `json:"type,omitempty"`
	ValueTriggerDefinition     *TriggerDefinition     `json:"valueTriggerDefinition,omitempty"`
	ValueInteger64             *string                `json:"valueInteger64,omitempty"`
	ValueMarkdown              *string                `json:"valueMarkdown,omitempty"`
	ValueDecimal               *string                `json:"valueDecimal,omitempty"`
	ValueInteger               *string                `json:"valueInteger,omitempty"`
	ValueSampledData           *SampledData           `json:"valueSampledData,omitempty"`
	ValueCanonical             *string                `json:"valueCanonical,omitempty"`
	ValueDate                  *string                `json:"valueDate,omitempty"`
	ValueDistance              *Distance              `json:"valueDistance,omitempty"`
	ResourceType               *string                `json:"resourceType,omitempty"`
	ValueString                *string                `json:"valueString,omitempty"`
	AuthResourcePath           *string                `json:"auth_resource_path,omitempty"`
}

type TaskPerformer struct {
	ResourceType      *string                 `json:"resourceType,omitempty"`
	Actor             TaskPerformerActorUnion `json:"actor"`
	Extension         []*Extension            `json:"extension,omitempty"`
	Function          *CodeableConcept        `json:"function,omitempty"`
	ID                *string                 `json:"id,omitempty"`
	ModifierExtension []*Extension            `json:"modifierExtension,omitempty"`
	AuthResourcePath  *string                 `json:"auth_resource_path,omitempty"`
}

type TaskRestriction struct {
	ID                *string                       `json:"id,omitempty"`
	ModifierExtension []*Extension                  `json:"modifierExtension,omitempty"`
	Period            *Period                       `json:"period,omitempty"`
	Recipient         TaskRestrictionRecipientUnion `json:"recipient"`
	Repetitions       *string                       `json:"repetitions,omitempty"`
	ResourceType      *string                       `json:"resourceType,omitempty"`
	Extension         []*Extension                  `json:"extension,omitempty"`
	AuthResourcePath  *string                       `json:"auth_resource_path,omitempty"`
}

type TaskType struct {
	Meta                  *Meta                `json:"meta,omitempty"`
	BasedOn               ResourceUnion        `json:"basedOn"`
	Description           *string              `json:"description,omitempty"`
	Input                 []*TaskInput         `json:"input,omitempty"`
	PartOf                *TaskType            `json:"partOf"`
	Owner                 TaskOwnerUnion       `json:"owner"`
	Intent                *string              `json:"intent,omitempty"`
	Text                  *Narrative           `json:"text,omitempty"`
	ImplicitRules         *string              `json:"implicitRules,omitempty"`
	Status                *string              `json:"status,omitempty"`
	Code                  *CodeableConcept     `json:"code,omitempty"`
	Priority              *string              `json:"priority,omitempty"`
	RequestedPeriod       *Period              `json:"requestedPeriod,omitempty"`
	DoNotPerform          *string              `json:"doNotPerform,omitempty"`
	Identifier            []*Identifier        `json:"identifier,omitempty"`
	InstantiatesCanonical *string              `json:"instantiatesCanonical,omitempty"`
	InstantiatesURI       *string              `json:"instantiatesUri,omitempty"`
	Note                  []*Annotation        `json:"note,omitempty"`
	Focus                 ResourceUnion        `json:"focus"`
	Restriction           *TaskRestriction     `json:"restriction,omitempty"`
	Output                []*TaskOutput        `json:"output,omitempty"`
	Requester             TaskRequesterUnion   `json:"requester"`
	Contained             []ResourceUnion      `json:"contained,omitempty"`
	GroupIdentifier       *Identifier          `json:"groupIdentifier,omitempty"`
	BusinessStatus        *CodeableConcept     `json:"businessStatus,omitempty"`
	StatusReason          *CodeableReference   `json:"statusReason,omitempty"`
	ExecutionPeriod       *Period              `json:"executionPeriod,omitempty"`
	AuthoredOn            *string              `json:"authoredOn,omitempty"`
	Performer             []*TaskPerformer     `json:"performer,omitempty"`
	Reason                []*CodeableReference `json:"reason,omitempty"`
	ResourceType          *string              `json:"resourceType,omitempty"`
	Extension             []*Extension         `json:"extension,omitempty"`
	LastModified          *string              `json:"lastModified,omitempty"`
	RequestedPerformer    []*CodeableReference `json:"requestedPerformer,omitempty"`
	ID                    *string              `json:"id,omitempty"`
	Language              *string              `json:"language,omitempty"`
	ModifierExtension     []*Extension         `json:"modifierExtension,omitempty"`
	AuthResourcePath      *string              `json:"auth_resource_path,omitempty"`
}

func (TaskType) IsImagingStudyBasedOnUnion() {}

func (TaskType) IsResourceUnion() {}

type Timing struct {
	ModifierExtension []*Extension     `json:"modifierExtension,omitempty"`
	Repeat            *TimingRepeat    `json:"repeat,omitempty"`
	ResourceType      *string          `json:"resourceType,omitempty"`
	Code              *CodeableConcept `json:"code,omitempty"`
	Event             *string          `json:"event,omitempty"`
	Extension         []*Extension     `json:"extension,omitempty"`
	ID                *string          `json:"id,omitempty"`
	AuthResourcePath  *string          `json:"auth_resource_path,omitempty"`
}

type TimingRepeat struct {
	Offset           *string      `json:"offset,omitempty"`
	TimeOfDay        *string      `json:"timeOfDay,omitempty"`
	DurationUnit     *string      `json:"durationUnit,omitempty"`
	Frequency        *string      `json:"frequency,omitempty"`
	PeriodMax        *string      `json:"periodMax,omitempty"`
	ID               *string      `json:"id,omitempty"`
	Period           *string      `json:"period,omitempty"`
	BoundsRange      *Range       `json:"boundsRange,omitempty"`
	CountMax         *string      `json:"countMax,omitempty"`
	DayOfWeek        *string      `json:"dayOfWeek,omitempty"`
	PeriodUnit       *string      `json:"periodUnit,omitempty"`
	FrequencyMax     *string      `json:"frequencyMax,omitempty"`
	BoundsPeriod     *Period      `json:"boundsPeriod,omitempty"`
	Extension        []*Extension `json:"extension,omitempty"`
	Duration         *string      `json:"duration,omitempty"`
	When             *string      `json:"when,omitempty"`
	DurationMax      *string      `json:"durationMax,omitempty"`
	Count            *string      `json:"count,omitempty"`
	BoundsDuration   *Duration    `json:"boundsDuration,omitempty"`
	ResourceType     *string      `json:"resourceType,omitempty"`
	AuthResourcePath *string      `json:"auth_resource_path,omitempty"`
}

type TriggerDefinition struct {
	TimingTiming      *Timing            `json:"timingTiming,omitempty"`
	Condition         *Expression        `json:"condition,omitempty"`
	Extension         []*Extension       `json:"extension,omitempty"`
	Data              []*DataRequirement `json:"data,omitempty"`
	SubscriptionTopic *string            `json:"subscriptionTopic,omitempty"`
	TimingDateTime    *string            `json:"timingDateTime,omitempty"`
	ID                *string            `json:"id,omitempty"`
	Name              *string            `json:"name,omitempty"`
	TimingDate        *string            `json:"timingDate,omitempty"`
	Type              *string            `json:"type,omitempty"`
	Code              *CodeableConcept   `json:"code,omitempty"`
	ResourceType      *string            `json:"resourceType,omitempty"`
	AuthResourcePath  *string            `json:"auth_resource_path,omitempty"`
}

type UsageContext struct {
	ResourceType         *string                         `json:"resourceType,omitempty"`
	ValueCodeableConcept *CodeableConcept                `json:"valueCodeableConcept,omitempty"`
	ValueQuantity        *Quantity                       `json:"valueQuantity,omitempty"`
	ValueRange           *Range                          `json:"valueRange,omitempty"`
	ValueReference       UsageContextValueReferenceUnion `json:"valueReference"`
	Code                 *Coding                         `json:"code,omitempty"`
	Extension            []*Extension                    `json:"extension,omitempty"`
	ID                   *string                         `json:"id,omitempty"`
	AuthResourcePath     *string                         `json:"auth_resource_path,omitempty"`
}

type VirtualServiceDetail struct {
	MaxParticipants              *string                `json:"maxParticipants,omitempty"`
	AddressContactPoint          *ContactPoint          `json:"addressContactPoint,omitempty"`
	AddressString                *string                `json:"addressString,omitempty"`
	ID                           *string                `json:"id,omitempty"`
	ChannelType                  *Coding                `json:"channelType,omitempty"`
	ResourceType                 *string                `json:"resourceType,omitempty"`
	SessionKey                   *string                `json:"sessionKey,omitempty"`
	AdditionalInfo               *string                `json:"additionalInfo,omitempty"`
	AddressExtendedContactDetail *ExtendedContactDetail `json:"addressExtendedContactDetail,omitempty"`
	Extension                    []*Extension           `json:"extension,omitempty"`
	AddressURL                   *string                `json:"addressUrl,omitempty"`
	AuthResourcePath             *string                `json:"auth_resource_path,omitempty"`
}

type Accessibility string

const (
	AccessibilityAll          Accessibility = "all"
	AccessibilityAccessible   Accessibility = "accessible"
	AccessibilityUnaccessible Accessibility = "unaccessible"
)

var AllAccessibility = []Accessibility{
	AccessibilityAll,
	AccessibilityAccessible,
	AccessibilityUnaccessible,
}

func (e Accessibility) IsValid() bool {
	switch e {
	case AccessibilityAll, AccessibilityAccessible, AccessibilityUnaccessible:
		return true
	}
	return false
}

func (e Accessibility) String() string {
	return string(e)
}

func (e *Accessibility) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = Accessibility(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Accessibility", str)
	}
	return nil
}

func (e Accessibility) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

type Format string

const (
	FormatJSON Format = "json"
	FormatTsv  Format = "tsv"
	FormatCSV  Format = "csv"
)

var AllFormat = []Format{
	FormatJSON,
	FormatTsv,
	FormatCSV,
}

func (e Format) IsValid() bool {
	switch e {
	case FormatJSON, FormatTsv, FormatCSV:
		return true
	}
	return false
}

func (e Format) String() string {
	return string(e)
}

func (e *Format) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = Format(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Format", str)
	}
	return nil
}

func (e Format) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
