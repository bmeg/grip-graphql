scalar JSON
enum Accessibility {
  all
  accessible
  unaccessible
}
input SortInput {
  field: String!
  descending: Boolean
}
type SubstanceType {
  description: String
  resourceType: String
  category: [CodeableConcept]
  quantity: Quantity
  implicitRules: String
  modifierExtension: [Extension]
  expiry: String
  instance: Boolean
  identifier: [Identifier]
  status: String
  meta: Meta
  code: CodeableReference
  ingredient: [SubstanceIngredient]
  contained: [ResourceUnion]
  language: String
  extension: [Extension]
  text: Narrative
  id: String
  auth_resource_path: String
}
type GroupCharacteristic {
  exclude: Boolean
  period: Period
  valueCodeableConcept: CodeableConcept
  id: String
  valueBoolean: Boolean
  valueQuantity: Quantity
  code: CodeableConcept
  modifierExtension: [Extension]
  valueRange: Range
  extension: [Extension]
  resourceType: String
  auth_resource_path: String
}
type MedicationRequestDispenseRequest {
  dispenserInstruction: [Annotation]
  doseAdministrationAid: CodeableConcept
  expectedSupplyDuration: Duration
  quantity: Quantity
  validityPeriod: Period
  dispenser(offset: Int first: Int): OrganizationType!
  extension: [Extension]
  resourceType: String
  dispenseInterval: Duration
  modifierExtension: [Extension]
  id: String
  initialFill: MedicationRequestDispenseRequestInitialFill
  numberOfRepeatsAllowed: Int
  auth_resource_path: String
}
type ImmunizationPerformer {
  extension: [Extension]
  function: CodeableConcept
  id: String
  modifierExtension: [Extension]
  resourceType: String
  auth_resource_path: String
}
type SubstanceDefinitionSourceMaterial {
  modifierExtension: [Extension]
  species: CodeableConcept
  extension: [Extension]
  part: CodeableConcept
  resourceType: String
  id: String
  countryOfOrigin: [CodeableConcept]
  genus: CodeableConcept
  type: CodeableConcept
  auth_resource_path: String
}
union SpecimenCollectionCollectorUnion = PractitionerType | PractitionerRoleType | PatientType
type SpecimenCollection {
  collectedDateTime: String
  resourceType: String
  id: String
  collectedPeriod: Period
  duration: Duration
  bodySite: CodeableReference
  modifierExtension: [Extension]
  extension: [Extension]
  quantity: Quantity
  device: CodeableReference
  fastingStatusDuration: Duration
  method: CodeableConcept
  procedure(offset: Int first: Int): ProcedureType!
  collector(offset: Int first: Int): SpecimenCollectionCollectorUnion!
  fastingStatusCodeableConcept: CodeableConcept
  auth_resource_path: String
}
type EncounterLocation {
  resourceType: String
  status: String
  extension: [Extension]
  form: CodeableConcept
  id: String
  modifierExtension: [Extension]
  period: Period
  auth_resource_path: String
}
union DiagnosticReportSupportingInfoReferenceUnion = ProcedureType | ObservationType | DiagnosticReportType
type DiagnosticReportSupportingInfo {
  modifierExtension: [Extension]
  reference(offset: Int first: Int): DiagnosticReportSupportingInfoReferenceUnion!
  resourceType: String
  type: CodeableConcept
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type SubstanceDefinitionName {
  translation: [SubstanceDefinitionName]
  extension: [Extension]
  jurisdiction: [CodeableConcept]
  name: String
  synonym: [SubstanceDefinitionName]
  official: [SubstanceDefinitionNameOfficial]
  id: String
  preferred: Boolean
  language: [CodeableConcept]
  type: CodeableConcept
  source(offset: Int first: Int): DocumentReferenceType!
  status: CodeableConcept
  resourceType: String
  domain: [CodeableConcept]
  modifierExtension: [Extension]
  auth_resource_path: String
}
type ContactDetail {
  name: String
  resourceType: String
  telecom: [ContactPoint]
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type SubstanceDefinitionRelationship {
  substanceDefinitionReference(offset: Int first: Int): SubstanceDefinitionType!
  resourceType: String
  type: CodeableConcept
  amountString: String
  substanceDefinitionCodeableConcept: CodeableConcept
  id: String
  modifierExtension: [Extension]
  source(offset: Int first: Int): DocumentReferenceType!
  ratioHighLimitAmount: Ratio
  amountRatio: Ratio
  extension: [Extension]
  comparator: CodeableConcept
  amountQuantity: Quantity
  isDefining: Boolean
  auth_resource_path: String
}
type FamilyMemberHistoryProcedure {
  performedString: String
  contributedToDeath: Boolean
  id: String
  performedRange: Range
  resourceType: String
  modifierExtension: [Extension]
  outcome: CodeableConcept
  performedAge: Age
  performedDateTime: String
  note: [Annotation]
  performedPeriod: Period
  code: CodeableConcept
  extension: [Extension]
  auth_resource_path: String
}
union ProcedurePerformerActorUnion = PractitionerType | PractitionerRoleType | OrganizationType | PatientType
type ProcedurePerformer {
  onBehalfOf(offset: Int first: Int): OrganizationType!
  period: Period
  resourceType: String
  actor(offset: Int first: Int): ProcedurePerformerActorUnion!
  extension: [Extension]
  function: CodeableConcept
  id: String
  modifierExtension: [Extension]
  auth_resource_path: String
}
type EncounterDiagnosis {
  use: [CodeableConcept]
  condition: [CodeableReference]
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  auth_resource_path: String
}
type Reference {
  id: String
  identifier: Identifier
  reference: String
  resourceType: String
  type: String
  display: String
  extension: [Extension]
  auth_resource_path: String
}
type ParameterDefinition {
  resourceType: String
  type: String
  min: Int
  profile: String
  use: String
  documentation: String
  extension: [Extension]
  name: String
  id: String
  max: String
  auth_resource_path: String
}
type SampledData {
  data: String
  offsets: String
  extension: [Extension]
  intervalUnit: String
  origin: Quantity
  upperLimit: Float
  codeMap: String
  dimensions: Int
  lowerLimit: Float
  factor: Float
  id: String
  interval: Float
  resourceType: String
  auth_resource_path: String
}
type PractitionerQualification {
  extension: [Extension]
  id: String
  identifier: [Identifier]
  issuer(offset: Int first: Int): OrganizationType!
  modifierExtension: [Extension]
  period: Period
  resourceType: String
  code: CodeableConcept
  auth_resource_path: String
}
type Range {
  resourceType: String
  extension: [Extension]
  high: Quantity
  id: String
  low: Quantity
  auth_resource_path: String
}
union DiagnosticReportBasedOnUnion = MedicationRequestType
union DiagnosticReportPerformerUnion = PractitionerType | PractitionerRoleType | OrganizationType
union DiagnosticReportResultsInterpreterUnion = PractitionerType | PractitionerRoleType | OrganizationType
union DiagnosticReportStudyUnion = ImagingStudyType
union DiagnosticReportSubjectUnion = PatientType | GroupType | OrganizationType | PractitionerType | MedicationType | SubstanceType
type DiagnosticReportType {
  extension: [Extension]
  resourceType: String
  issued: String
  basedOn(offset: Int first: Int): DiagnosticReportBasedOnUnion!
  performer(offset: Int first: Int): DiagnosticReportPerformerUnion!
  resultsInterpreter(offset: Int first: Int): DiagnosticReportResultsInterpreterUnion!
  code: CodeableConcept
  effectivePeriod: Period
  subject(offset: Int first: Int): DiagnosticReportSubjectUnion!
  implicitRules: String
  contained: [ResourceUnion]
  category: [CodeableConcept]
  presentedForm: [Attachment]
  text: Narrative
  effectiveDateTime: String
  study(offset: Int first: Int): DiagnosticReportStudyUnion!
  id: String
  identifier: [Identifier]
  conclusionCode: [CodeableConcept]
  status: String
  conclusion: String
  meta: Meta
  media: [DiagnosticReportMedia]
  note: [Annotation]
  specimen(offset: Int first: Int): SpecimenType!
  result(offset: Int first: Int): ObservationType!
  modifierExtension: [Extension]
  language: String
  supportingInfo: [DiagnosticReportSupportingInfo]
  auth_resource_path: String
}
type FamilyMemberHistoryType {
  deceasedAge: Age
  note: [Annotation]
  participant: [FamilyMemberHistoryParticipant]
  deceasedString: String
  id: String
  relationship: CodeableConcept
  status: String
  bornPeriod: Period
  bornString: String
  implicitRules: String
  text: Narrative
  condition: [FamilyMemberHistoryCondition]
  contained: [ResourceUnion]
  ageRange: Range
  reason: [CodeableReference]
  ageString: String
  dataAbsentReason: CodeableConcept
  deceasedDate: String
  language: String
  estimatedAge: Boolean
  identifier: [Identifier]
  patient(offset: Int first: Int): PatientType!
  ageAge: Age
  instantiatesCanonical: String
  bornDate: String
  modifierExtension: [Extension]
  name: String
  procedure: [FamilyMemberHistoryProcedure]
  extension: [Extension]
  instantiatesUri: String
  resourceType: String
  deceasedBoolean: Boolean
  sex: CodeableConcept
  meta: Meta
  deceasedRange: Range
  date: String
  auth_resource_path: String
}
type TaskOutput {
  id: String
  valueSignature: Signature
  valueOid: String
  valueAttachment: Attachment
  valueDateTime: String
  valuePositiveInt: Int
  valueCount: Count
  valueMeta: Meta
  valueId: String
  valueCodeableConcept: CodeableConcept
  valueInteger64: Int
  valueAnnotation: Annotation
  valueAge: Age
  valueString: String
  valueTiming: Timing
  modifierExtension: [Extension]
  valueDecimal: Float
  valueRatio: Ratio
  valueBase64Binary: String
  valueExtendedContactDetail: ExtendedContactDetail
  valueUuid: String
  valueRelatedArtifact: RelatedArtifact
  valueCode: String
  valueUnsignedInt: Int
  type: CodeableConcept
  valueCanonical: String
  valueDate: String
  valueIdentifier: Identifier
  valueCodeableReference: CodeableReference
  valueUri: String
  valueDosage: Dosage
  valueTriggerDefinition: TriggerDefinition
  valueContactPoint: ContactPoint
  valueMarkdown: String
  valueCoding: Coding
  valueContactDetail: ContactDetail
  valueTime: String
  valueAddress: Address
  valueAvailability: Availability
  valueInstant: String
  valueSampledData: SampledData
  valueDistance: Distance
  valueDataRequirement: DataRequirement
  valueBoolean: Boolean
  valueInteger: Int
  extension: [Extension]
  valueRatioRange: RatioRange
  valueHumanName: HumanName
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueParameterDefinition: ParameterDefinition
  resourceType: String
  valueExpression: Expression
  valueDuration: Duration
  valueUrl: String
  valueUsageContext: UsageContext
  valueMoney: Money
  auth_resource_path: String
}
type Period {
  end: String
  extension: [Extension]
  id: String
  resourceType: String
  start: String
  auth_resource_path: String
}
type BodyStructureType {
  id: String
  morphology: CodeableConcept
  identifier: [Identifier]
  implicitRules: String
  meta: Meta
  resourceType: String
  extension: [Extension]
  active: Boolean
  description: String
  modifierExtension: [Extension]
  patient(offset: Int first: Int): PatientType!
  language: String
  excludedStructure: [BodyStructureIncludedStructure]
  image: [Attachment]
  includedStructure: [BodyStructureIncludedStructure]
  contained: [ResourceUnion]
  text: Narrative
  auth_resource_path: String
}
type Dosage {
  asNeeded: Boolean
  additionalInstruction: [CodeableConcept]
  method: CodeableConcept
  maxDosePerAdministration: Quantity
  maxDosePerPeriod: [Ratio]
  sequence: Int
  doseAndRate: [DosageDoseAndRate]
  patientInstruction: String
  timing: Timing
  extension: [Extension]
  maxDosePerLifetime: Quantity
  asNeededFor: [CodeableConcept]
  text: String
  id: String
  route: CodeableConcept
  site: CodeableConcept
  resourceType: String
  modifierExtension: [Extension]
  auth_resource_path: String
}
type DosageDoseAndRate {
  type: CodeableConcept
  doseRange: Range
  id: String
  rateRatio: Ratio
  rateQuantity: Quantity
  extension: [Extension]
  resourceType: String
  doseQuantity: Quantity
  rateRange: Range
  auth_resource_path: String
}
union ImagingStudyBasedOnUnion = TaskType
union ImagingStudyReferrerUnion = PractitionerType | PractitionerRoleType
union ImagingStudySubjectUnion = PatientType | GroupType
type ImagingStudyType {
  description: String
  implicitRules: String
  resourceType: String
  meta: Meta
  subject(offset: Int first: Int): ImagingStudySubjectUnion!
  modifierExtension: [Extension]
  text: Narrative
  basedOn(offset: Int first: Int): ImagingStudyBasedOnUnion!
  note: [Annotation]
  status: String
  id: String
  contained: [ResourceUnion]
  extension: [Extension]
  numberOfInstances: Int
  referrer(offset: Int first: Int): ImagingStudyReferrerUnion!
  numberOfSeries: Int
  series: [ImagingStudySeries]
  started: String
  modality: [CodeableConcept]
  identifier: [Identifier]
  procedure: [CodeableReference]
  language: String
  partOf(offset: Int first: Int): ProcedureType!
  reason: [CodeableReference]
  auth_resource_path: String
}
type Quantity {
  resourceType: String
  system: String
  unit: String
  value: Float
  code: String
  comparator: String
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type OrganizationQualification {
  resourceType: String
  code: CodeableConcept
  extension: [Extension]
  id: String
  identifier: [Identifier]
  issuer(offset: Int first: Int): OrganizationType!
  modifierExtension: [Extension]
  period: Period
  auth_resource_path: String
}
type Money {
  extension: [Extension]
  id: String
  resourceType: String
  value: Float
  currency: String
  auth_resource_path: String
}
type DiagnosticReportMedia {
  comment: String
  extension: [Extension]
  id: String
  link(offset: Int first: Int): DocumentReferenceType!
  modifierExtension: [Extension]
  resourceType: String
  auth_resource_path: String
}
type ImagingStudySeriesInstance {
  uid: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  number: Int
  resourceType: String
  sopClass: Coding
  title: String
  auth_resource_path: String
}
union DocumentReferenceAttesterPartyUnion = PatientType | PractitionerType | PractitionerRoleType | OrganizationType
type DocumentReferenceAttester {
  party(offset: Int first: Int): DocumentReferenceAttesterPartyUnion!
  resourceType: String
  time: String
  extension: [Extension]
  id: String
  mode: CodeableConcept
  modifierExtension: [Extension]
  auth_resource_path: String
}
type TriggerDefinition {
  type: String
  id: String
  timingDate: String
  timingTiming: Timing
  extension: [Extension]
  name: String
  resourceType: String
  subscriptionTopic: String
  timingDateTime: String
  code: CodeableConcept
  data: [DataRequirement]
  condition: Expression
  auth_resource_path: String
}
type ObservationTriggeredBy {
  id: String
  modifierExtension: [Extension]
  observation(offset: Int first: Int): ObservationType!
  reason: String
  resourceType: String
  type: String
  extension: [Extension]
  auth_resource_path: String
}
type ResearchStudyObjective {
  name: String
  resourceType: String
  type: CodeableConcept
  description: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  auth_resource_path: String
}
type ContactPoint {
  value: String
  extension: [Extension]
  id: String
  period: Period
  rank: Int
  resourceType: String
  system: String
  use: String
  auth_resource_path: String
}
type VirtualServiceDetail {
  maxParticipants: Int
  addressExtendedContactDetail: ExtendedContactDetail
  channelType: Coding
  addressContactPoint: ContactPoint
  resourceType: String
  addressUrl: String
  addressString: String
  extension: [Extension]
  id: String
  sessionKey: String
  additionalInfo: String
  auth_resource_path: String
}
type ImmunizationProgramEligibility {
  program: CodeableConcept
  programStatus: CodeableConcept
  resourceType: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  auth_resource_path: String
}
type SubstanceDefinitionMolecularWeight {
  extension: [Extension]
  id: String
  method: CodeableConcept
  modifierExtension: [Extension]
  resourceType: String
  type: CodeableConcept
  amount: Quantity
  auth_resource_path: String
}
type SubstanceDefinitionStructureRepresentation {
  type: CodeableConcept
  document(offset: Int first: Int): DocumentReferenceType!
  extension: [Extension]
  format: CodeableConcept
  id: String
  modifierExtension: [Extension]
  representation: String
  resourceType: String
  auth_resource_path: String
}
type DocumentReferenceRelatesTo {
  target(offset: Int first: Int): DocumentReferenceType!
  code: CodeableConcept
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  auth_resource_path: String
}
type ObservationReferenceRange {
  modifierExtension: [Extension]
  normalValue: CodeableConcept
  text: String
  appliesTo: [CodeableConcept]
  id: String
  age: Range
  low: Quantity
  resourceType: String
  high: Quantity
  extension: [Extension]
  type: CodeableConcept
  auth_resource_path: String
}
union ResearchStudyResultUnion = DiagnosticReportType
union ResearchStudySiteUnion = ResearchStudyType | OrganizationType
type ResearchStudyType {
  primaryPurposeType: CodeableConcept
  id: String
  relatedArtifact: [RelatedArtifact]
  region: [CodeableConcept]
  language: String
  classifier: [CodeableConcept]
  extension: [Extension]
  progressStatus: [ResearchStudyProgressStatus]
  implicitRules: String
  resourceType: String
  meta: Meta
  identifier: [Identifier]
  focus: [CodeableReference]
  description: String
  site(offset: Int first: Int): ResearchStudySiteUnion!
  label: [ResearchStudyLabel]
  title: String
  contained: [ResourceUnion]
  version: String
  keyword: [CodeableConcept]
  result(offset: Int first: Int): ResearchStudyResultUnion!
  url: String
  phase: CodeableConcept
  status: String
  outcomeMeasure: [ResearchStudyOutcomeMeasure]
  text: Narrative
  partOf(offset: Int first: Int): ResearchStudyType!
  name: String
  whyStopped: CodeableConcept
  modifierExtension: [Extension]
  note: [Annotation]
  date: String
  objective: [ResearchStudyObjective]
  descriptionSummary: String
  recruitment: ResearchStudyRecruitment
  period: Period
  comparisonGroup: [ResearchStudyComparisonGroup]
  associatedParty: [ResearchStudyAssociatedParty]
  studyDesign: [CodeableConcept]
  condition: [CodeableConcept]
  auth_resource_path: String
}
type Meta {
  id: String
  lastUpdated: String
  profile: String
  versionId: String
  extension: [Extension]
  source: String
  tag: [Coding]
  resourceType: String
  security: [Coding]
  auth_resource_path: String
}
union ResearchSubjectSubjectUnion = PatientType | GroupType | SpecimenType | MedicationType | SubstanceType
type ResearchSubjectType {
  meta: Meta
  resourceType: String
  period: Period
  actualComparisonGroup: String
  subject(offset: Int first: Int): ResearchSubjectSubjectUnion!
  identifier: [Identifier]
  status: String
  assignedComparisonGroup: String
  progress: [ResearchSubjectProgress]
  modifierExtension: [Extension]
  study(offset: Int first: Int): ResearchStudyType!
  extension: [Extension]
  language: String
  text: Narrative
  implicitRules: String
  contained: [ResourceUnion]
  id: String
  auth_resource_path: String
}
type SpecimenProcessing {
  resourceType: String
  timeDateTime: String
  additive(offset: Int first: Int): SubstanceType!
  method: CodeableConcept
  modifierExtension: [Extension]
  id: String
  description: String
  extension: [Extension]
  timePeriod: Period
  auth_resource_path: String
}
type DataRequirementCodeFilter {
  valueSet: String
  code: [Coding]
  extension: [Extension]
  id: String
  path: String
  resourceType: String
  searchParam: String
  auth_resource_path: String
}
union AnnotationAuthorReferenceUnion = PractitionerType | PractitionerRoleType | PatientType | OrganizationType
type Annotation {
  time: String
  authorReference(offset: Int first: Int): AnnotationAuthorReferenceUnion!
  authorString: String
  extension: [Extension]
  id: String
  resourceType: String
  text: String
  auth_resource_path: String
}
type FamilyMemberHistoryCondition {
  contributedToDeath: Boolean
  extension: [Extension]
  onsetAge: Age
  onsetPeriod: Period
  onsetString: String
  modifierExtension: [Extension]
  resourceType: String
  outcome: CodeableConcept
  note: [Annotation]
  code: CodeableConcept
  id: String
  onsetRange: Range
  auth_resource_path: String
}
type Coding {
  resourceType: String
  system: String
  userSelected: Boolean
  version: String
  code: String
  display: String
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type ResearchStudyOutcomeMeasure {
  description: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  name: String
  resourceType: String
  type: [CodeableConcept]
  auth_resource_path: String
}
type CodeableConcept {
  coding: [Coding]
  extension: [Extension]
  id: String
  resourceType: String
  text: String
  auth_resource_path: String
}
union ObservationSpecimenUnion = SpecimenType | GroupType
union ObservationSubjectUnion = PatientType | GroupType | OrganizationType | ProcedureType | PractitionerType | MedicationType | SubstanceType
union ObservationBasedOnUnion = MedicationRequestType
union ObservationDerivedFromUnion = DocumentReferenceType | ImagingStudyType | ObservationType
union ObservationHasMemberUnion = ObservationType
union ObservationPartOfUnion = MedicationAdministrationType | MedicationStatementType | ProcedureType | ImagingStudyType
union ObservationPerformerUnion = PractitionerType | PractitionerRoleType | OrganizationType | PatientType
type ObservationType {
  identifier: [Identifier]
  valueBoolean: Boolean
  category: [CodeableConcept]
  valueCodeableConcept: CodeableConcept
  valueTime: String
  performer(offset: Int first: Int): ObservationPerformerUnion!
  valueString: String
  interpretation: [CodeableConcept]
  specimen(offset: Int first: Int): ObservationSpecimenUnion!
  valueQuantity: Quantity
  status: String
  bodySite: CodeableConcept
  note: [Annotation]
  code: CodeableConcept
  effectivePeriod: Period
  valueSampledData: SampledData
  bodyStructure(offset: Int first: Int): BodyStructureType!
  valueAttachment: Attachment
  effectiveInstant: String
  contained: [ResourceUnion]
  issued: String
  text: Narrative
  component: [ObservationComponent]
  focus(offset: Int first: Int): ResourceUnion!
  language: String
  triggeredBy: [ObservationTriggeredBy]
  method: CodeableConcept
  derivedFrom(offset: Int first: Int): ObservationDerivedFromUnion!
  effectiveDateTime: String
  valueInteger: Int
  valuePeriod: Period
  modifierExtension: [Extension]
  partOf(offset: Int first: Int): ObservationPartOfUnion!
  hasMember(offset: Int first: Int): ObservationHasMemberUnion!
  implicitRules: String
  valueRatio: Ratio
  effectiveTiming: Timing
  referenceRange: [ObservationReferenceRange]
  id: String
  valueRange: Range
  basedOn(offset: Int first: Int): ObservationBasedOnUnion!
  instantiatesCanonical: String
  meta: Meta
  resourceType: String
  subject(offset: Int first: Int): ObservationSubjectUnion!
  valueDateTime: String
  dataAbsentReason: CodeableConcept
  extension: [Extension]
  auth_resource_path: String
}
union GroupMemberEntityUnion = GroupType | OrganizationType | PatientType | PractitionerType | PractitionerRoleType | SpecimenType
type GroupMember {
  id: String
  inactive: Boolean
  modifierExtension: [Extension]
  period: Period
  resourceType: String
  entity(offset: Int first: Int): GroupMemberEntityUnion!
  extension: [Extension]
  auth_resource_path: String
}
type SpecimenContainer {
  modifierExtension: [Extension]
  resourceType: String
  specimenQuantity: Quantity
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type PatientCommunication {
  language: CodeableConcept
  modifierExtension: [Extension]
  preferred: Boolean
  resourceType: String
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type MedicationAdministrationPerformer {
  function: CodeableConcept
  id: String
  modifierExtension: [Extension]
  resourceType: String
  actor: CodeableReference
  extension: [Extension]
  auth_resource_path: String
}
union UsageContextValueReferenceUnion = ResearchStudyType | GroupType | OrganizationType
type UsageContext {
  valueReference(offset: Int first: Int): UsageContextValueReferenceUnion!
  code: Coding
  extension: [Extension]
  id: String
  resourceType: String
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueRange: Range
  auth_resource_path: String
}
union ProcedureFocusUnion = PatientType | GroupType | PractitionerType | OrganizationType | PractitionerRoleType | SpecimenType
union ProcedurePartOfUnion = ProcedureType | ObservationType | MedicationAdministrationType
union ProcedureRecorderUnion = PatientType | PractitionerType | PractitionerRoleType
union ProcedureReportUnion = DiagnosticReportType | DocumentReferenceType
union ProcedureReportedReferenceUnion = PatientType | PractitionerType | PractitionerRoleType | OrganizationType
union ProcedureSubjectUnion = PatientType | GroupType | PractitionerType | OrganizationType
type ProcedureType {
  occurrenceDateTime: String
  extension: [Extension]
  performer: [ProcedurePerformer]
  reportedBoolean: Boolean
  occurrenceAge: Age
  instantiatesUri: String
  statusReason: CodeableConcept
  meta: Meta
  id: String
  subject(offset: Int first: Int): ProcedureSubjectUnion!
  resourceType: String
  implicitRules: String
  instantiatesCanonical: String
  recorded: String
  language: String
  category: [CodeableConcept]
  bodySite: [CodeableConcept]
  occurrencePeriod: Period
  occurrenceString: String
  text: Narrative
  identifier: [Identifier]
  note: [Annotation]
  focalDevice: [ProcedureFocalDevice]
  occurrenceTiming: Timing
  recorder(offset: Int first: Int): ProcedureRecorderUnion!
  supportingInfo(offset: Int first: Int): ResourceUnion!
  used: [CodeableReference]
  report(offset: Int first: Int): ProcedureReportUnion!
  outcome: CodeableConcept
  status: String
  code: CodeableConcept
  contained: [ResourceUnion]
  modifierExtension: [Extension]
  followUp: [CodeableConcept]
  occurrenceRange: Range
  reportedReference(offset: Int first: Int): ProcedureReportedReferenceUnion!
  complication: [CodeableReference]
  reason: [CodeableReference]
  partOf(offset: Int first: Int): ProcedurePartOfUnion!
  focus(offset: Int first: Int): ProcedureFocusUnion!
  auth_resource_path: String
}
type ResearchSubjectProgress {
  milestone: CodeableConcept
  endDate: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  reason: CodeableConcept
  resourceType: String
  subjectState: CodeableConcept
  type: CodeableConcept
  startDate: String
  auth_resource_path: String
}
type PatientContact {
  telecom: [ContactPoint]
  gender: String
  id: String
  organization(offset: Int first: Int): OrganizationType!
  period: Period
  relationship: [CodeableConcept]
  address: Address
  resourceType: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: HumanName
  auth_resource_path: String
}
type ProcedureFocalDevice {
  id: String
  modifierExtension: [Extension]
  resourceType: String
  action: CodeableConcept
  extension: [Extension]
  auth_resource_path: String
}
type OrganizationType {
  resourceType: String
  partOf(offset: Int first: Int): OrganizationType!
  implicitRules: String
  type: [CodeableConcept]
  language: String
  name: String
  qualification: [OrganizationQualification]
  id: String
  meta: Meta
  text: Narrative
  modifierExtension: [Extension]
  active: Boolean
  contact: [ExtendedContactDetail]
  identifier: [Identifier]
  contained: [ResourceUnion]
  extension: [Extension]
  alias: String
  description: String
  auth_resource_path: String
}
union DocumentReferenceAuthorUnion = PractitionerType | PractitionerRoleType | OrganizationType | PatientType
union DocumentReferenceBasedOnUnion = MedicationRequestType
type DocumentReferenceType {
  category: [CodeableConcept]
  language: String
  modality: [CodeableConcept]
  practiceSetting: CodeableConcept
  securityLabel: [CodeableConcept]
  contained: [ResourceUnion]
  modifierExtension: [Extension]
  basedOn(offset: Int first: Int): DocumentReferenceBasedOnUnion!
  event: [CodeableReference]
  text: Narrative
  identifier: [Identifier]
  bodySite: [CodeableReference]
  implicitRules: String
  resourceType: String
  subject(offset: Int first: Int): ResourceUnion!
  period: Period
  content: [DocumentReferenceContent]
  meta: Meta
  facilityType: CodeableConcept
  id: String
  date: String
  author(offset: Int first: Int): DocumentReferenceAuthorUnion!
  version: String
  relatesTo: [DocumentReferenceRelatesTo]
  type: CodeableConcept
  docStatus: String
  attester: [DocumentReferenceAttester]
  custodian(offset: Int first: Int): OrganizationType!
  status: String
  description: String
  extension: [Extension]
  auth_resource_path: String
}
union MedicationRequestRequesterUnion = PractitionerType | PractitionerRoleType | OrganizationType | PatientType
union MedicationRequestSubjectUnion = PatientType | GroupType
union MedicationRequestBasedOnUnion = MedicationRequestType
union MedicationRequestInformationSourceUnion = PatientType | PractitionerType | PractitionerRoleType | OrganizationType
union MedicationRequestPerformerUnion = PractitionerType | PractitionerRoleType | OrganizationType | PatientType
union MedicationRequestRecorderUnion = PractitionerType | PractitionerRoleType
type MedicationRequestType {
  recorder(offset: Int first: Int): MedicationRequestRecorderUnion!
  resourceType: String
  dispenseRequest: MedicationRequestDispenseRequest
  performerType: CodeableConcept
  courseOfTherapyType: CodeableConcept
  substitution: MedicationRequestSubstitution
  requester(offset: Int first: Int): MedicationRequestRequesterUnion!
  status: String
  dosageInstruction: [Dosage]
  authoredOn: String
  renderedDosageInstruction: String
  intent: String
  implicitRules: String
  informationSource(offset: Int first: Int): MedicationRequestInformationSourceUnion!
  statusChanged: String
  basedOn(offset: Int first: Int): MedicationRequestBasedOnUnion!
  text: Narrative
  reported: Boolean
  subject(offset: Int first: Int): MedicationRequestSubjectUnion!
  id: String
  category: [CodeableConcept]
  contained: [ResourceUnion]
  device: [CodeableReference]
  statusReason: CodeableConcept
  extension: [Extension]
  supportingInformation(offset: Int first: Int): ResourceUnion!
  note: [Annotation]
  performer(offset: Int first: Int): MedicationRequestPerformerUnion!
  reason: [CodeableReference]
  groupIdentifier: Identifier
  modifierExtension: [Extension]
  effectiveDosePeriod: Period
  medication: CodeableReference
  priorPrescription(offset: Int first: Int): MedicationRequestType!
  doNotPerform: Boolean
  priority: String
  language: String
  meta: Meta
  identifier: [Identifier]
  auth_resource_path: String
}
type PractitionerCommunication {
  language: CodeableConcept
  modifierExtension: [Extension]
  preferred: Boolean
  resourceType: String
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type Ratio {
  denominator: Quantity
  extension: [Extension]
  id: String
  numerator: Quantity
  resourceType: String
  auth_resource_path: String
}
type ExtendedContactDetail {
  extension: [Extension]
  organization(offset: Int first: Int): OrganizationType!
  period: Period
  resourceType: String
  address: Address
  name: [HumanName]
  purpose: CodeableConcept
  id: String
  telecom: [ContactPoint]
  auth_resource_path: String
}
union TaskOwnerUnion = PractitionerType | PractitionerRoleType | OrganizationType | PatientType
union TaskRequesterUnion = OrganizationType | PatientType | PractitionerType | PractitionerRoleType
type TaskType {
  output: [TaskOutput]
  note: [Annotation]
  instantiatesUri: String
  executionPeriod: Period
  instantiatesCanonical: String
  description: String
  businessStatus: CodeableConcept
  identifier: [Identifier]
  code: CodeableConcept
  contained: [ResourceUnion]
  implicitRules: String
  modifierExtension: [Extension]
  reason: [CodeableReference]
  owner(offset: Int first: Int): TaskOwnerUnion!
  requestedPeriod: Period
  requestedPerformer: [CodeableReference]
  focus(offset: Int first: Int): ResourceUnion!
  id: String
  status: String
  partOf(offset: Int first: Int): TaskType!
  priority: String
  intent: String
  input: [TaskInput]
  authoredOn: String
  restriction: TaskRestriction
  performer: [TaskPerformer]
  lastModified: String
  statusReason: CodeableReference
  language: String
  groupIdentifier: Identifier
  extension: [Extension]
  basedOn(offset: Int first: Int): ResourceUnion!
  resourceType: String
  meta: Meta
  requester(offset: Int first: Int): TaskRequesterUnion!
  text: Narrative
  doNotPerform: Boolean
  auth_resource_path: String
}
type ResearchStudyLabel {
  value: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  type: CodeableConcept
  auth_resource_path: String
}
type DataRequirementSort {
  resourceType: String
  direction: String
  extension: [Extension]
  id: String
  path: String
  auth_resource_path: String
}
type Distance {
  resourceType: String
  system: String
  unit: String
  value: Float
  code: String
  comparator: String
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type ObservationComponent {
  valueTime: String
  valuePeriod: Period
  valueBoolean: Boolean
  extension: [Extension]
  interpretation: [CodeableConcept]
  valueString: String
  valueDateTime: String
  valueRatio: Ratio
  valueRange: Range
  valueQuantity: Quantity
  code: CodeableConcept
  valueInteger: Int
  resourceType: String
  valueCodeableConcept: CodeableConcept
  modifierExtension: [Extension]
  dataAbsentReason: CodeableConcept
  valueSampledData: SampledData
  valueAttachment: Attachment
  id: String
  referenceRange: [ObservationReferenceRange]
  auth_resource_path: String
}
type Timing {
  event: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  repeat: TimingRepeat
  resourceType: String
  code: CodeableConcept
  auth_resource_path: String
}
type EncounterParticipant {
  resourceType: String
  type: [CodeableConcept]
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  period: Period
  auth_resource_path: String
}
type BodyStructureIncludedStructureBodyLandmarkOrientation {
  landmarkDescription: [CodeableConcept]
  modifierExtension: [Extension]
  resourceType: String
  surfaceOrientation: [CodeableConcept]
  clockFacePosition: [CodeableConcept]
  distanceFromLandmark: [BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark]
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type SubstanceDefinitionCharacterization {
  form: CodeableConcept
  id: String
  modifierExtension: [Extension]
  resourceType: String
  technique: CodeableConcept
  description: String
  extension: [Extension]
  file: [Attachment]
  auth_resource_path: String
}
type SubstanceDefinitionType {
  code: [SubstanceDefinitionCode]
  language: String
  note: [Annotation]
  characterization: [SubstanceDefinitionCharacterization]
  contained: [ResourceUnion]
  sourceMaterial: SubstanceDefinitionSourceMaterial
  supplier(offset: Int first: Int): OrganizationType!
  relationship: [SubstanceDefinitionRelationship]
  meta: Meta
  extension: [Extension]
  implicitRules: String
  name: [SubstanceDefinitionName]
  manufacturer(offset: Int first: Int): OrganizationType!
  status: CodeableConcept
  molecularWeight: [SubstanceDefinitionMolecularWeight]
  id: String
  description: String
  resourceType: String
  identifier: [Identifier]
  domain: CodeableConcept
  version: String
  grade: [CodeableConcept]
  modifierExtension: [Extension]
  property: [SubstanceDefinitionProperty]
  moiety: [SubstanceDefinitionMoiety]
  structure: SubstanceDefinitionStructure
  classification: [CodeableConcept]
  text: Narrative
  auth_resource_path: String
}
union FamilyMemberHistoryParticipantActorUnion = PractitionerType | PractitionerRoleType | PatientType | OrganizationType
type FamilyMemberHistoryParticipant {
  resourceType: String
  actor(offset: Int first: Int): FamilyMemberHistoryParticipantActorUnion!
  extension: [Extension]
  function: CodeableConcept
  id: String
  modifierExtension: [Extension]
  auth_resource_path: String
}
type MedicationRequestDispenseRequestInitialFill {
  id: String
  modifierExtension: [Extension]
  quantity: Quantity
  resourceType: String
  duration: Duration
  extension: [Extension]
  auth_resource_path: String
}
type DataRequirementDateFilter {
  valueDuration: Duration
  valuePeriod: Period
  extension: [Extension]
  id: String
  path: String
  resourceType: String
  searchParam: String
  valueDateTime: String
  auth_resource_path: String
}
union ResearchStudyAssociatedPartyPartyUnion = PractitionerType | PractitionerRoleType | OrganizationType
type ResearchStudyAssociatedParty {
  resourceType: String
  party(offset: Int first: Int): ResearchStudyAssociatedPartyPartyUnion!
  role: CodeableConcept
  extension: [Extension]
  id: String
  name: String
  modifierExtension: [Extension]
  period: [Period]
  classifier: [CodeableConcept]
  auth_resource_path: String
}
type Address {
  state: String
  city: String
  district: String
  period: Period
  line: String
  postalCode: String
  type: String
  use: String
  extension: [Extension]
  id: String
  country: String
  resourceType: String
  text: String
  auth_resource_path: String
}
type SubstanceIngredient {
  resourceType: String
  substanceCodeableConcept: CodeableConcept
  substanceReference(offset: Int first: Int): SubstanceType!
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  quantity: Ratio
  auth_resource_path: String
}
type PractitionerType {
  deceasedDateTime: String
  photo: [Attachment]
  active: Boolean
  deceasedBoolean: Boolean
  communication: [PractitionerCommunication]
  gender: String
  implicitRules: String
  text: Narrative
  contained: [ResourceUnion]
  extension: [Extension]
  address: [Address]
  language: String
  birthDate: String
  id: String
  meta: Meta
  name: [HumanName]
  resourceType: String
  telecom: [ContactPoint]
  qualification: [PractitionerQualification]
  modifierExtension: [Extension]
  identifier: [Identifier]
  auth_resource_path: String
}
type ImagingStudySeries {
  uid: String
  instance: [ImagingStudySeriesInstance]
  modality: CodeableConcept
  resourceType: String
  id: String
  number: Int
  bodySite: CodeableReference
  description: String
  modifierExtension: [Extension]
  numberOfInstances: Int
  specimen(offset: Int first: Int): SpecimenType!
  extension: [Extension]
  performer: [ImagingStudySeriesPerformer]
  started: String
  laterality: CodeableConcept
  auth_resource_path: String
}
union MedicationStatementInformationSourceUnion = PatientType | PractitionerType | PractitionerRoleType | OrganizationType
union MedicationStatementPartOfUnion = ProcedureType | MedicationStatementType
union MedicationStatementRelatedClinicalInformationUnion = ObservationType | ConditionType
union MedicationStatementSubjectUnion = PatientType | GroupType
type MedicationStatementType {
  renderedDosageInstruction: String
  modifierExtension: [Extension]
  informationSource(offset: Int first: Int): MedicationStatementInformationSourceUnion!
  text: Narrative
  identifier: [Identifier]
  derivedFrom(offset: Int first: Int): ResourceUnion!
  extension: [Extension]
  effectiveTiming: Timing
  relatedClinicalInformation(offset: Int first: Int): MedicationStatementRelatedClinicalInformationUnion!
  effectivePeriod: Period
  contained: [ResourceUnion]
  note: [Annotation]
  dosage: [Dosage]
  medication: CodeableReference
  category: [CodeableConcept]
  subject(offset: Int first: Int): MedicationStatementSubjectUnion!
  effectiveDateTime: String
  implicitRules: String
  adherence: MedicationStatementAdherence
  id: String
  status: String
  meta: Meta
  reason: [CodeableReference]
  resourceType: String
  language: String
  dateAsserted: String
  partOf(offset: Int first: Int): MedicationStatementPartOfUnion!
  auth_resource_path: String
}
type ResearchStudyComparisonGroup {
  resourceType: String
  id: String
  linkId: String
  observedGroup(offset: Int first: Int): GroupType!
  extension: [Extension]
  modifierExtension: [Extension]
  name: String
  description: String
  type: CodeableConcept
  auth_resource_path: String
}
type RatioRange {
  id: String
  lowNumerator: Quantity
  resourceType: String
  denominator: Quantity
  extension: [Extension]
  highNumerator: Quantity
  auth_resource_path: String
}
type Availability {
  extension: [Extension]
  id: String
  notAvailableTime: [AvailabilityNotAvailableTime]
  resourceType: String
  availableTime: [AvailabilityAvailableTime]
  auth_resource_path: String
}
type Attachment {
  language: String
  title: String
  id: String
  resourceType: String
  data: String
  pages: Int
  size: Int
  url: String
  height: Int
  width: Int
  creation: String
  duration: Float
  frames: Int
  hash: String
  extension: [Extension]
  contentType: String
  auth_resource_path: String
}
type Expression {
  language: String
  name: String
  reference: String
  resourceType: String
  description: String
  expression: String
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type DocumentReferenceContent {
  modifierExtension: [Extension]
  profile: [DocumentReferenceContentProfile]
  resourceType: String
  attachment: Attachment
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type EncounterAdmission {
  reAdmission: CodeableConcept
  resourceType: String
  admitSource: CodeableConcept
  dischargeDisposition: CodeableConcept
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  preAdmissionIdentifier: Identifier
  auth_resource_path: String
}
union SpecimenSubjectUnion = PatientType | GroupType | SubstanceType
type SpecimenType {
  role: [CodeableConcept]
  type: CodeableConcept
  contained: [ResourceUnion]
  language: String
  condition: [CodeableConcept]
  parent(offset: Int first: Int): SpecimenType!
  resourceType: String
  note: [Annotation]
  accessionIdentifier: Identifier
  id: String
  collection: SpecimenCollection
  feature: [SpecimenFeature]
  implicitRules: String
  meta: Meta
  receivedTime: String
  text: Narrative
  identifier: [Identifier]
  modifierExtension: [Extension]
  extension: [Extension]
  subject(offset: Int first: Int): SpecimenSubjectUnion!
  processing: [SpecimenProcessing]
  status: String
  container: [SpecimenContainer]
  combined: String
  auth_resource_path: String
}
union PatientLinkOtherUnion = PatientType
type PatientLink {
  other(offset: Int first: Int): PatientLinkOtherUnion!
  resourceType: String
  type: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  auth_resource_path: String
}
type FHIRPrimitiveExtension {
  extension: [Extension]
  id: String
  resourceType: String
  auth_resource_path: String
}
type DataRequirement {
  mustSupport: String
  id: String
  sort: [DataRequirementSort]
  subjectReference(offset: Int first: Int): GroupType!
  type: String
  codeFilter: [DataRequirementCodeFilter]
  dateFilter: [DataRequirementDateFilter]
  extension: [Extension]
  resourceType: String
  subjectCodeableConcept: CodeableConcept
  limit: Int
  profile: String
  valueFilter: [DataRequirementValueFilter]
  auth_resource_path: String
}
type TaskInput {
  valueDataRequirement: DataRequirement
  valueMoney: Money
  valueExpression: Expression
  valueOid: String
  valueCount: Count
  valueContactDetail: ContactDetail
  valueTime: String
  valuePositiveInt: Int
  valueInstant: String
  valueSignature: Signature
  valueAddress: Address
  valueUrl: String
  resourceType: String
  valueUuid: String
  valueUnsignedInt: Int
  valueInteger64: Int
  valueString: String
  valueCode: String
  valueMarkdown: String
  valueDateTime: String
  valueUri: String
  valueBase64Binary: String
  valueQuantity: Quantity
  valueAnnotation: Annotation
  valueDate: String
  valueContactPoint: ContactPoint
  valueTiming: Timing
  valueTriggerDefinition: TriggerDefinition
  valueParameterDefinition: ParameterDefinition
  valueCanonical: String
  valueCodeableConcept: CodeableConcept
  extension: [Extension]
  valueDuration: Duration
  valueHumanName: HumanName
  valueDecimal: Float
  valueRange: Range
  valueSampledData: SampledData
  valueAvailability: Availability
  valueUsageContext: UsageContext
  valuePeriod: Period
  valueRelatedArtifact: RelatedArtifact
  valueCoding: Coding
  type: CodeableConcept
  valueMeta: Meta
  valueInteger: Int
  id: String
  valueDosage: Dosage
  valueAttachment: Attachment
  valueRatio: Ratio
  valueCodeableReference: CodeableReference
  valueBoolean: Boolean
  valueDistance: Distance
  valueAge: Age
  modifierExtension: [Extension]
  valueExtendedContactDetail: ExtendedContactDetail
  valueId: String
  valueIdentifier: Identifier
  valueRatioRange: RatioRange
  auth_resource_path: String
}
type Encounter {
  serviceType: [CodeableReference]
  plannedEndDate: String
  status: String
  location: [EncounterLocation]
  contained: [ResourceUnion]
  language: String
  reason: [EncounterReason]
  participant: [EncounterParticipant]
  subjectStatus: CodeableConcept
  virtualService: [VirtualServiceDetail]
  implicitRules: String
  length: Duration
  actualPeriod: Period
  text: Narrative
  modifierExtension: [Extension]
  priority: CodeableConcept
  type: [CodeableConcept]
  id: String
  resourceType: String
  specialCourtesy: [CodeableConcept]
  diagnosis: [EncounterDiagnosis]
  admission: EncounterAdmission
  class: [CodeableConcept]
  plannedStartDate: String
  extension: [Extension]
  dietPreference: [CodeableConcept]
  identifier: [Identifier]
  specialArrangement: [CodeableConcept]
  meta: Meta
  auth_resource_path: String
}
type MedicationAdministrationDosage {
  resourceType: String
  site: CodeableConcept
  id: String
  rateQuantity: Quantity
  rateRatio: Ratio
  extension: [Extension]
  method: CodeableConcept
  modifierExtension: [Extension]
  route: CodeableConcept
  dose: Quantity
  text: String
  auth_resource_path: String
}
union MedicationAdministrationPartOfUnion = MedicationAdministrationType | ProcedureType
union MedicationAdministrationSubjectUnion = PatientType | GroupType
type MedicationAdministrationType {
  implicitRules: String
  dosage: MedicationAdministrationDosage
  meta: Meta
  text: Narrative
  medication: CodeableReference
  modifierExtension: [Extension]
  request(offset: Int first: Int): MedicationRequestType!
  supportingInformation(offset: Int first: Int): ResourceUnion!
  device: [CodeableReference]
  isSubPotent: Boolean
  id: String
  performer: [MedicationAdministrationPerformer]
  category: [CodeableConcept]
  occurencePeriod: Period
  extension: [Extension]
  partOf(offset: Int first: Int): MedicationAdministrationPartOfUnion!
  reason: [CodeableReference]
  note: [Annotation]
  contained: [ResourceUnion]
  occurenceDateTime: String
  identifier: [Identifier]
  statusReason: [CodeableConcept]
  occurenceTiming: Timing
  subPotentReason: [CodeableConcept]
  language: String
  subject(offset: Int first: Int): MedicationAdministrationSubjectUnion!
  status: String
  recorded: String
  resourceType: String
  auth_resource_path: String
}
union PatientGeneralPractitionerUnion = OrganizationType | PractitionerType | PractitionerRoleType
type PatientType {
  multipleBirthInteger: Int
  language: String
  maritalStatus: CodeableConcept
  communication: [PatientCommunication]
  generalPractitioner(offset: Int first: Int): PatientGeneralPractitionerUnion!
  meta: Meta
  deceasedBoolean: Boolean
  birthDate: String
  extension: [Extension]
  managingOrganization(offset: Int first: Int): OrganizationType!
  address: [Address]
  contact: [PatientContact]
  modifierExtension: [Extension]
  contained: [ResourceUnion]
  resourceType: String
  multipleBirthBoolean: Boolean
  name: [HumanName]
  gender: String
  id: String
  telecom: [ContactPoint]
  implicitRules: String
  deceasedDateTime: String
  identifier: [Identifier]
  active: Boolean
  photo: [Attachment]
  text: Narrative
  auth_resource_path: String
}
type ImmunizationReaction {
  extension: [Extension]
  id: String
  manifestation: CodeableReference
  modifierExtension: [Extension]
  reported: Boolean
  resourceType: String
  date: String
  auth_resource_path: String
}
union GroupManagingEntityUnion = OrganizationType | PractitionerType | PractitionerRoleType
type GroupType {
  description: String
  extension: [Extension]
  quantity: Int
  characteristic: [GroupCharacteristic]
  modifierExtension: [Extension]
  language: String
  managingEntity(offset: Int first: Int): GroupManagingEntityUnion!
  membership: String
  type: String
  text: Narrative
  resourceType: String
  contained: [ResourceUnion]
  name: String
  code: CodeableConcept
  identifier: [Identifier]
  active: Boolean
  id: String
  implicitRules: String
  meta: Meta
  member: [GroupMember]
  auth_resource_path: String
}
type SubstanceDefinitionProperty {
  resourceType: String
  type: CodeableConcept
  valueAttachment: Attachment
  valueBoolean: Boolean
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  valueDate: String
  auth_resource_path: String
}
union ResearchStudyRecruitmentEligibilityUnion = GroupType
type ResearchStudyRecruitment {
  actualNumber: Int
  eligibility(offset: Int first: Int): ResearchStudyRecruitmentEligibilityUnion!
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  targetNumber: Int
  actualGroup(offset: Int first: Int): GroupType!
  auth_resource_path: String
}
type BodyStructureIncludedStructure {
  laterality: CodeableConcept
  modifierExtension: [Extension]
  qualifier: [CodeableConcept]
  resourceType: String
  structure: CodeableConcept
  bodyLandmarkOrientation: [BodyStructureIncludedStructureBodyLandmarkOrientation]
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type EncounterReason {
  id: String
  modifierExtension: [Extension]
  resourceType: String
  use: [CodeableConcept]
  value: [CodeableReference]
  extension: [Extension]
  auth_resource_path: String
}
union SignatureOnBehalfOfUnion = PractitionerType | PractitionerRoleType | PatientType | OrganizationType
union SignatureWhoUnion = PractitionerType | PractitionerRoleType | PatientType | OrganizationType
type Signature {
  who(offset: Int first: Int): SignatureWhoUnion!
  id: String
  resourceType: String
  extension: [Extension]
  onBehalfOf(offset: Int first: Int): SignatureOnBehalfOfUnion!
  when: String
  sigFormat: String
  type: [Coding]
  targetFormat: String
  data: String
  auth_resource_path: String
}
type Immunization {
  doseQuantity: Quantity
  reaction: [ImmunizationReaction]
  occurrenceDateTime: String
  site: CodeableConcept
  extension: [Extension]
  identifier: [Identifier]
  protocolApplied: [ImmunizationProtocolApplied]
  modifierExtension: [Extension]
  meta: Meta
  performer: [ImmunizationPerformer]
  text: Narrative
  expirationDate: String
  fundingSource: CodeableConcept
  id: String
  statusReason: CodeableConcept
  isSubpotent: Boolean
  status: String
  resourceType: String
  administeredProduct: CodeableReference
  manufacturer: CodeableReference
  note: [Annotation]
  reason: [CodeableReference]
  vaccineCode: CodeableConcept
  implicitRules: String
  lotNumber: String
  contained: [ResourceUnion]
  informationSource: CodeableReference
  subpotentReason: [CodeableConcept]
  primarySource: Boolean
  route: CodeableConcept
  programEligibility: [ImmunizationProgramEligibility]
  occurrenceString: String
  language: String
  auth_resource_path: String
}
type MedicationStatementAdherence {
  resourceType: String
  code: CodeableConcept
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  reason: CodeableConcept
  auth_resource_path: String
}
type LocationPosition {
  modifierExtension: [Extension]
  resourceType: String
  altitude: Float
  extension: [Extension]
  id: String
  latitude: Float
  longitude: Float
  auth_resource_path: String
}
type PractitionerRoleType {
  contact: [ExtendedContactDetail]
  modifierExtension: [Extension]
  active: Boolean
  id: String
  practitioner(offset: Int first: Int): PractitionerType!
  resourceType: String
  specialty: [CodeableConcept]
  characteristic: [CodeableConcept]
  identifier: [Identifier]
  language: String
  availability: [Availability]
  period: Period
  communication: [CodeableConcept]
  extension: [Extension]
  contained: [ResourceUnion]
  organization(offset: Int first: Int): OrganizationType!
  text: Narrative
  code: [CodeableConcept]
  meta: Meta
  implicitRules: String
  auth_resource_path: String
}
type BodyStructureIncludedStructureBodyLandmarkOrientationDistanceFromLandmark {
  modifierExtension: [Extension]
  resourceType: String
  value: [Quantity]
  device: [CodeableReference]
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type HumanName {
  family: String
  period: Period
  prefix: String
  text: String
  extension: [Extension]
  given: String
  id: String
  resourceType: String
  suffix: String
  use: String
  auth_resource_path: String
}
type MedicationType {
  modifierExtension: [Extension]
  identifier: [Identifier]
  text: Narrative
  code: CodeableConcept
  id: String
  totalVolume: Quantity
  implicitRules: String
  language: String
  marketingAuthorizationHolder(offset: Int first: Int): OrganizationType!
  meta: Meta
  contained: [ResourceUnion]
  extension: [Extension]
  resourceType: String
  doseForm: CodeableConcept
  ingredient: [MedicationIngredient]
  status: String
  batch: MedicationBatch
  auth_resource_path: String
}
type SubstanceDefinitionStructure {
  opticalActivity: CodeableConcept
  resourceType: String
  technique: [CodeableConcept]
  extension: [Extension]
  molecularFormula: String
  sourceDocument(offset: Int first: Int): DocumentReferenceType!
  stereochemistry: CodeableConcept
  modifierExtension: [Extension]
  representation: [SubstanceDefinitionStructureRepresentation]
  molecularWeight: SubstanceDefinitionMolecularWeight
  id: String
  molecularFormulaByMoiety: String
  auth_resource_path: String
}
type DataRequirementValueFilter {
  valueDuration: Duration
  comparator: String
  extension: [Extension]
  id: String
  searchParam: String
  path: String
  resourceType: String
  valuePeriod: Period
  valueDateTime: String
  auth_resource_path: String
}
type MedicationIngredient {
  isActive: Boolean
  item: CodeableReference
  strengthCodeableConcept: CodeableConcept
  extension: [Extension]
  resourceType: String
  id: String
  modifierExtension: [Extension]
  strengthQuantity: Quantity
  strengthRatio: Ratio
  auth_resource_path: String
}
type SubstanceDefinitionNameOfficial {
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  status: CodeableConcept
  authority: CodeableConcept
  date: String
  auth_resource_path: String
}
type ResearchStudyProgressStatus {
  resourceType: String
  state: CodeableConcept
  actual: Boolean
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  period: Period
  auth_resource_path: String
}
type DocumentReferenceContentProfile {
  valueUri: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  valueCanonical: String
  valueCoding: Coding
  auth_resource_path: String
}
type Narrative {
  id: String
  resourceType: String
  status: String
  div: String
  extension: [Extension]
  auth_resource_path: String
}
type SpecimenFeature {
  type: CodeableConcept
  description: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  auth_resource_path: String
}
type Age {
  resourceType: String
  system: String
  unit: String
  value: Float
  code: String
  comparator: String
  extension: [Extension]
  id: String
  auth_resource_path: String
}
type SubstanceDefinitionCode {
  id: String
  note: [Annotation]
  resourceType: String
  source(offset: Int first: Int): DocumentReferenceType!
  code: CodeableConcept
  modifierExtension: [Extension]
  status: CodeableConcept
  statusDate: String
  extension: [Extension]
  auth_resource_path: String
}
type AvailabilityNotAvailableTime {
  during: Period
  extension: [Extension]
  id: String
  resourceType: String
  description: String
  auth_resource_path: String
}
union ConditionParticipantActorUnion = PractitionerType | PractitionerRoleType | PatientType | OrganizationType
type ConditionParticipant {
  function: CodeableConcept
  id: String
  modifierExtension: [Extension]
  resourceType: String
  actor(offset: Int first: Int): ConditionParticipantActorUnion!
  extension: [Extension]
  auth_resource_path: String
}
union ConditionStageAssessmentUnion = DiagnosticReportType | ObservationType
type ConditionStage {
  assessment(offset: Int first: Int): ConditionStageAssessmentUnion!
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  summary: CodeableConcept
  type: CodeableConcept
  auth_resource_path: String
}
type Duration {
  extension: [Extension]
  id: String
  resourceType: String
  system: String
  unit: String
  value: Float
  code: String
  comparator: String
  auth_resource_path: String
}
type MedicationBatch {
  id: String
  lotNumber: String
  modifierExtension: [Extension]
  resourceType: String
  expirationDate: String
  extension: [Extension]
  auth_resource_path: String
}
union ConditionSubjectUnion = PatientType | GroupType
type ConditionType {
  severity: CodeableConcept
  evidence: [CodeableReference]
  note: [Annotation]
  onsetAge: Age
  category: [CodeableConcept]
  recordedDate: String
  onsetString: String
  modifierExtension: [Extension]
  abatementAge: Age
  clinicalStatus: CodeableConcept
  identifier: [Identifier]
  language: String
  verificationStatus: CodeableConcept
  stage: [ConditionStage]
  onsetDateTime: String
  onsetRange: Range
  onsetPeriod: Period
  abatementDateTime: String
  extension: [Extension]
  abatementPeriod: Period
  subject(offset: Int first: Int): ConditionSubjectUnion!
  resourceType: String
  abatementRange: Range
  contained: [ResourceUnion]
  meta: Meta
  bodySite: [CodeableConcept]
  implicitRules: String
  code: CodeableConcept
  text: Narrative
  abatementString: String
  participant: [ConditionParticipant]
  id: String
  auth_resource_path: String
}
type AvailabilityAvailableTime {
  allDay: Boolean
  availableEndTime: String
  availableStartTime: String
  daysOfWeek: String
  extension: [Extension]
  id: String
  resourceType: String
  auth_resource_path: String
}
type Identifier {
  period: Period
  type: CodeableConcept
  use: String
  assigner(offset: Int first: Int): OrganizationType!
  id: String
  system: String
  extension: [Extension]
  resourceType: String
  value: String
  auth_resource_path: String
}
union TaskPerformerActorUnion = PractitionerType | PractitionerRoleType | OrganizationType | PatientType
type TaskPerformer {
  actor(offset: Int first: Int): TaskPerformerActorUnion!
  extension: [Extension]
  function: CodeableConcept
  id: String
  modifierExtension: [Extension]
  resourceType: String
  auth_resource_path: String
}
type MedicationRequestSubstitution {
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  reason: CodeableConcept
  resourceType: String
  allowedBoolean: Boolean
  allowedCodeableConcept: CodeableConcept
  auth_resource_path: String
}
union ImagingStudySeriesPerformerActorUnion = PractitionerType | PractitionerRoleType | OrganizationType | PatientType
type ImagingStudySeriesPerformer {
  function: CodeableConcept
  id: String
  modifierExtension: [Extension]
  resourceType: String
  actor(offset: Int first: Int): ImagingStudySeriesPerformerActorUnion!
  extension: [Extension]
  auth_resource_path: String
}
type Location {
  implicitRules: String
  modifierExtension: [Extension]
  name: String
  virtualService: [VirtualServiceDetail]
  contact: [ExtendedContactDetail]
  identifier: [Identifier]
  position: LocationPosition
  characteristic: [CodeableConcept]
  alias: String
  language: String
  status: String
  type: [CodeableConcept]
  description: String
  id: String
  contained: [ResourceUnion]
  operationalStatus: Coding
  meta: Meta
  mode: String
  resourceType: String
  text: Narrative
  address: Address
  hoursOfOperation: [Availability]
  extension: [Extension]
  form: CodeableConcept
  auth_resource_path: String
}
type Count {
  value: Float
  code: String
  comparator: String
  extension: [Extension]
  id: String
  resourceType: String
  system: String
  unit: String
  auth_resource_path: String
}
type CodeableReference {
  concept: CodeableConcept
  extension: [Extension]
  id: String
  resourceType: String
  auth_resource_path: String
}
type SubstanceDefinitionMoiety {
  opticalActivity: CodeableConcept
  amountString: String
  identifier: Identifier
  measurementType: CodeableConcept
  resourceType: String
  id: String
  modifierExtension: [Extension]
  name: String
  role: CodeableConcept
  stereochemistry: CodeableConcept
  amountQuantity: Quantity
  extension: [Extension]
  molecularFormula: String
  auth_resource_path: String
}
type Extension {
  valueUnsignedInt: Int
  valueCanonical: String
  valueInteger64: Int
  valueAvailability: Availability
  valueUsageContext: UsageContext
  extension: [Extension]
  valueDistance: Distance
  valueMoney: Money
  valueRatio: Ratio
  valueUrl: String
  valueRange: Range
  valueCodeableConcept: CodeableConcept
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueId: String
  valueString: String
  valueAge: Age
  valueRatioRange: RatioRange
  valueTime: String
  valueIdentifier: Identifier
  valueSampledData: SampledData
  valueBoolean: Boolean
  valueDateTime: String
  valueBase64Binary: String
  valueInteger: Int
  valueMeta: Meta
  url: String
  valueSignature: Signature
  valueAddress: Address
  valueContactDetail: ContactDetail
  valueUuid: String
  valueCode: String
  valuePeriod: Period
  valueDosage: Dosage
  valueDate: String
  valueDuration: Duration
  valueExpression: Expression
  valueCodeableReference: CodeableReference
  valueAttachment: Attachment
  resourceType: String
  valueDataRequirement: DataRequirement
  valueUri: String
  valueMarkdown: String
  id: String
  valueTiming: Timing
  valueQuantity: Quantity
  valueTriggerDefinition: TriggerDefinition
  valueOid: String
  valueExtendedContactDetail: ExtendedContactDetail
  valueDecimal: Float
  valueInstant: String
  valueAnnotation: Annotation
  valueHumanName: HumanName
  valuePositiveInt: Int
  valueContactPoint: ContactPoint
  valueCount: Count
  valueCoding: Coding
  auth_resource_path: String
}
type TimingRepeat {
  frequency: Int
  frequencyMax: Int
  boundsRange: Range
  extension: [Extension]
  count: Int
  dayOfWeek: String
  offset: Int
  resourceType: String
  when: String
  id: String
  boundsDuration: Duration
  durationMax: Float
  durationUnit: String
  period: Float
  boundsPeriod: Period
  countMax: Int
  duration: Float
  periodMax: Float
  periodUnit: String
  timeOfDay: String
  auth_resource_path: String
}
type RelatedArtifact {
  display: String
  extension: [Extension]
  publicationStatus: String
  id: String
  publicationDate: String
  resource: String
  classifier: [CodeableConcept]
  resourceType: String
  label: String
  resourceReference(offset: Int first: Int): ResourceUnion!
  citation: String
  document: Attachment
  type: String
  auth_resource_path: String
}
union TaskRestrictionRecipientUnion = PatientType | PractitionerType | PractitionerRoleType | GroupType | OrganizationType
type TaskRestriction {
  resourceType: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  period: Period
  recipient(offset: Int first: Int): TaskRestrictionRecipientUnion!
  repetitions: Int
  auth_resource_path: String
}
type ImmunizationProtocolApplied {
  targetDisease: [CodeableConcept]
  doseNumber: String
  extension: [Extension]
  id: String
  modifierExtension: [Extension]
  resourceType: String
  series: String
  seriesDoses: String
  auth_resource_path: String
}
union ResourceUnion = OrganizationType | GroupType | PractitionerType | PractitionerRoleType | ResearchStudyType | PatientType | ResearchSubjectType | SubstanceType | SubstanceDefinitionType | SpecimenType | ObservationType | DiagnosticReportType | ConditionType | MedicationType | MedicationAdministrationType | MedicationStatementType | MedicationRequestType | ProcedureType | DocumentReferenceType | TaskType | ImagingStudyType | FamilyMemberHistoryType | BodyStructureType
type Query {
  organization(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [OrganizationType!]!
  group(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [GroupType!]!
  practitioner(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [PractitionerType!]!
  practitionerRole(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [PractitionerRoleType!]!
  researchStudy(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [ResearchStudyType!]!
  patient(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [PatientType!]!
  researchSubject(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [ResearchSubjectType!]!
  substance(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [SubstanceType!]!
  substanceDefinition(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [SubstanceDefinitionType!]!
  specimen(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [SpecimenType!]!
  observation(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [ObservationType!]!
  diagnosticReport(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [DiagnosticReportType!]!
  condition(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [ConditionType!]!
  medication(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [MedicationType!]!
  medicationAdministration(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [MedicationAdministrationType!]!
  medicationStatement(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [MedicationStatementType!]!
  medicationRequest(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [MedicationRequestType!]!
  procedure(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [ProcedureType!]!
  documentReference(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [DocumentReferenceType!]!
  task(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [TaskType!]!
  imagingStudy(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [ImagingStudyType!]!
  familyMemberHistory(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [FamilyMemberHistoryType!]!
  bodyStructure(offset: Int first: Int filter: JSON sort: [SortInput]  accessibility: Accessibility = all): [BodyStructureType!]!
}
